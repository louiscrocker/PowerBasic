!:::::opcode
#align:::::boundary
#bloat:::::size_expression
#elseif:::::[Not] {%equate | %Def({%numeric_equate | $string_equate}) |
#if:::::[Not] {%equate | %Def({%numeric_equate | $string_equate}) |
#include:::::[ONCE] "filespec"
#optimize:::::[SIZE | SPEED]
#resource:::::"filespec"
#stack:::::num_expr
#utility:::::"any text for an external program"
%def:::::({%numeric_equate | $string_equate})
?:::::txt$ [, [style%], title$]
aaccept:::::(s, address, addrlen)
aaccept:::::(s, saAddr, addrlen)
abortdoc:::::(hdc)
abortpath:::::(hdc)
abortprinter:::::(hPrinter)
abortsystemshutdown:::::(lpMachineName)
abs:::::(numeric_expression)
acceptex:::::(sListenSocket, sAcceptSocket, lpOutputBuffer, dwReceiveDataLength, dwLocalAddressLength, dwRemoteAddressLength, lpdwBytesReceived, lpOverlapped)
accesscheck:::::(pSecurityDescriptor, ClientToken, DesiredAccess, GenericMapping, PrivilegeSet, PrivilegeSetLength, GrantedAccess, AccessStatus)
accesscheckandauditalarm:::::(SubsystemName, HandleId, ObjectTypeName, ObjectName, SecurityDescriptor, DesiredAccess, GenericMapping, ObjectCreation, GrantedAccess, AccessStatus, pfGenerateOnClose)
accesscheckbytype:::::(pSecurityDescriptor, PrincipalSelfSid, ClientToken, DesiredAccess, ObjectTypeList, ObjectTypeListLength, GenericMapping, PrivilegeSet, PrivilegeSetLength, GrantedAccess, AccessStatus)
accesscheckbytype:::::(pSecurityDescriptor, PrincipalSelfSid, ClientToken, DesiredAccess, ObjectTypeList, ObjectTypeListLength, GenericMapping, PrivilegeSet, PrivilegeSetLength, GrantedAccess, AccessStatus)
accesscheckbytypeandauditalarm:::::(SubsystemName, HandleId, ObjectTypeName, ObjectName, SecurityDescriptor, PrincipalSelfSid, DesiredAccess, AuditType, Flags, ObjectTypeList, ObjectTypeListLength, GenericMapping, ObjectCreation, GrantedAccess, AccessStatus, pfGenerateOnClose)
accesscheckbytyperesultlist:::::(pSecurityDescriptor, PrincipalSelfSid, ClientToken, DesiredAccess, ObjectTypeList, ObjectTypeListLength, GenericMapping, PrivilegeSet, PrivilegeSetLength, GrantedAccess, AccessStatusList)
accesscheckbytyperesultlist:::::(pSecurityDescriptor, PrincipalSelfSid, ClientToken, DesiredAccess, ObjectTypeList, ObjectTypeListLength, GenericMapping, PrivilegeSet, PrivilegeSetLength, GrantedAccess, AccessStatusList)
accesscheckbytyperesultlistandauditalarm:::::(SubsystemName, HandleId, ObjectTypeName, ObjectName, SecurityDescriptor, PrincipalSelfSid, DesiredAccess, AuditType, Flags, ObjectTypeList, GenericMapping, ObjectCreation, GrantedAccess, AccessStatusList, pfGenerateOnClose)
accessdeniedaceex:::::(pAcl, dwAceRevision, AceFlags, AccessMask, pSid)
acode$:::::(UnicodeStrExpression [,CodePage&])
activatekeyboardlayout:::::(HKL, flags)
addaccessallowedace:::::(pAcl, dwAceRevision, AccessMask, dwFlags)
addaccessallowedaceex:::::(pAcl, dwAceRevision, AceFlags, AccessMask, pSid)
addaccessdeniedace:::::(pAcl, dwAceRevision, AccessMask, dwFlags)
addace:::::(pAcl, dwAceRevision, dwStartingAceIndex, pAceList, nAceListLength)
addatom:::::(lpString)
addauditaccessace:::::(pAcl, dwAceRevision, dwAccessMask, pSid, bAuditSuccess, bAuditFailure)
addauditaccessaceex:::::(pAcl, dwAceRevision, AceFlags, dwAccessMask, pSid, bAuditSuccess, bAuditFailure)
addfontmemresourceex:::::(pbFont, cbFont, pdv, pcFonts)
addfontresource:::::(lpFileName)
addfontresourceex:::::(lpszFileName, fl, pdv)
addform:::::(hPrinter, Level, pForm)
addipaddress:::::(Address, IpMask, IfIndex, NTEContext, NTEInstance)
addjob:::::(hPrinter, Level, pData, cbBuf, pcbNeeded)
addmonitor:::::(pName, Level, pMonitors)
addport:::::(pName, hWnd, pMonitorName)
addprinter:::::(pName, Level, pPrinter)
addprinterconnection:::::(pName)
addprinterdriver:::::(pName, Level, pDriverInfor)
addprinterdriverex:::::(pName, Level, pDriverInfor, dwFileCopyFlags)
addprintprocessor:::::(pName, pEnvironment, pPathName, pPrintProcessorName)
addprintprovidor:::::(pName, Level, pProvidorInfo)
adjusttokengroups:::::(TokenHandle, ResetToDefault, NewState, BufferLength, PreviousState, ReturnLength)
adjusttokenprivileges:::::(TokenHandle, DisableAllPrivileges, NewState, BufferLength, PreviousState, ReturnLength)
adjustwindowrect:::::(lpRect, dwStyle, bMenu)
adjustwindowrectex:::::(lpRect, dsStyle, bMenu, dwEsStyle)
advanceddocumentproperties:::::(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput)
allocateandinitializesid:::::(pIdentifierAuthority, nSubAuthorityCount, nSubAuthority0, nSubAuthority1, nSubAuthority2, nSubAuthority3, nSubAuthority4, nSubAuthority5, nSubAuthority6, nSubAuthority7, lpPSid)
allocatelocallyuniqueid:::::(xLuid)
allowsetforegroundwindow:::::(dwProcessId)
alphablend:::::(hdcDest, nXOriginDest, nYOriginDest, nWidthDest, nHeightDest, hdcSrc, nXOriginSrc, nYOriginSrc, nWidthSrc, nHeightSrc, bf)
alphablend:::::(hdcDest, nXOriginDest, nYOriginDest, nWidthDest, nHeightDest, hdcSrc, nXOriginSrc, nYOriginSrc, nWidthSrc, nHeightSrc, bf)
anglearc:::::(hdc, x, y, dwRadius, eStartAngle, eSweepAngle)
animate_close:::::(hwnd)
animate_close:::::(hwnd)
animate_create:::::(hWndP, ID, dwStyle, hInstance)
animate_open:::::(hwnd, szName)
animate_openex:::::(hwnd, hInst, szName)
animate_play:::::(hwnd, nFrom, nTo, rep)
animate_play:::::(hwnd, nFrom, nTo, rep)
animate_seek:::::(hwnd, FRAME)
animate_seek:::::(hwnd, FRAME)
animate_stop:::::(hwnd)
animate_stop:::::(hwnd)
animatepalette:::::(hPalette, wStartIndex, wNumEntries, lpPaletteColors)
animatewindow:::::(hWnd, dwTime, dwFlags)
apisleep:::::(dwMilliseconds)
appendmenu:::::(hMenu, uFlags, uIDNewItem, lpNewItem)
applet_proc:::::(hwndCpl, msg, lParam1, lparam2)
arc:::::(hdc, X1, Y1, X2, Y2, X3, Y3, X4, Y4)
arcto:::::(hdc, X1, Y1, X2, Y2, X3, Y3, X4, Y4)
areallaccessesgranted:::::(GrantedAccess, DesiredAccess)
areanyaccessesgranted:::::(GrantedAccess, DesiredAccess)
arrangeiconicwindows:::::(hWnd)
arrayattr:::::(Arr(), AttrNum)
asc:::::(String, position&)
asc:::::(string_expression [, position&])
asm:::::opcode
assoccreate:::::(xclsid, xriid, ppv)
assocquerykey:::::(dFlags, dKey, pszAssoc, pszExtra, phkeyOut)
assocquerystring:::::(dFlags, dStrType, pszAssoc, pszExtra, pszOut, pcchOut)
assocquerystringbykey:::::(dFlags, dStrType, hkAssoc, pszExtra, pszOut, pcchOut)
atn:::::(numeric_expression)
attachthreadinput:::::(idAttach, idAttachTo, fAttach)
auxgetdevcaps:::::(uDeviceID, lpCaps, uSize)
auxgetvolume:::::(uDeviceID, lpdwVolume)
auxoutmessage:::::(uDeviceID, uMsg, dwParam1, dwParam2)
auxsetvolume:::::(uDeviceID, dwVolume)
backupeventlog:::::(hEventLog, lpBackupFileName)
backupread:::::(hFile, lpBuffer, nNumberOfBytesToRead, lpNumberOfBytesRead, bAbort, bProcessSecurity, lpContext)
backupseek:::::(hFile, dwLowBytesToSeek, dwHighBytesToSeek, lpdwLowByteSeeked, lpdwHighByteSeeked, lpContext)
backupwrite:::::(hFile, lpBuffer, nNumberOfBytesToWrite, lpNumberOfBytesWritten, bAbort, bProcessSecurity, lpContext)
begindeferwindowpos:::::(nNumWindows)
beginpaint:::::(hWnd, lpPaint)
beginpath:::::(hdc)
beginupdateresource:::::(pFileName, bDeleteExistingResources)
bgr:::::(red&, green&, blue&)
bgr:::::(rgbexpr&)
bin$:::::(numeric_expression [, digits])
bind:::::(s, address, namelen)
bind:::::(s, sname, namelen)
bitblt:::::(hDestDC, x, y, nWidth, nHeight, hSrcDC, xSrc, ySrc, dwRop)
bits%:::::(expression)
bits&:::::(expression)
bits:::::(datatype, expression)
bits?:::::(expression)
bits??:::::(expression)
bits???:::::(expression)
bitse:::::(nexp, nexp, bitsize)
bringwindowtotop:::::(hWnd)
broadcastsystemmessage:::::(dwFlags, pdwRecipients, uiMessage, wParam, lParam)
broadcastsystemmessagea:::::(dwFlags, pdwRecipients, uiMessage, wParam, lParam)
broadcastsystemmessageex:::::(dwFlags, pdwRecipients, uiMessage, wParam, wParam, lParam, pBSMInfo)
build$:::::(a$,b$,c$,d$...)
buildcommdcb:::::(lpDef, lpDCB)
buildcommdcbandtimeouts:::::(lpDef, lpDCB, lpCommTimeouts)
buildexplicitaccesswithname:::::( pExplicitAccess, pTrusteeName, AccessPermissions, AccessMode, Inheritance)
buildexplicitaccesswithname:::::( pExplicitAccess, pTrusteeName, AccessPermissions, AccessMode, Inheritance)
buildimpersonateexplicitaccesswithname:::::( pExplicitAccess, pTrusteeName, pTrustee, AccessPermissions, AccessMode, Inheritance)
buildimpersonateexplicitaccesswithname:::::( pExplicitAccess, pTrusteeName, pTrustee, AccessPermissions, AccessMode, Inheritance)
buildimpersonatetrustee:::::( pTrustee, pImpersonateTrustee)
buildsecuritydescriptor:::::( pOwner, pGroup, cCountOfAccessEntries, pListOfAccessEntries, cCountOfAuditEntries, pListOfAuditEntries, pOldSD, pSizeNewSD, pNewSD)
buildsecuritydescriptor:::::( pOwner, pGroup, cCountOfAccessEntries, pListOfAccessEntries, cCountOfAuditEntries, pListOfAuditEntries, pOldSD, pSizeNewSD, pNewSD)
buildtrusteewithname:::::( pTrustee, pName)
buildtrusteewithobjectsandname:::::( pTrustee, pObjName, ObjectType, ObjectTypeName, InheritedObjectTypeName, TrusteeName)
buildtrusteewithobjectsandsid:::::( pTrustee, pObjSid, pObjectGuid, pInheritedObjectGuid, pSid)
buildtrusteewithobjectsandsid:::::( pTrustee, pObjSid, pObjectGuid, pInheritedObjectGuid, pSid)
buildtrusteewithsid:::::( pTrustee, pSid)
buildtrusteewithsid:::::( pTrustee, pSid)
button_getcheck:::::(hButton)
button_getcheck:::::(hButton)
button_getimage:::::(hButton)
button_getimage:::::(hButton)
button_getstate:::::(hButton)
button_getstate:::::(hButton)
button_setcheck:::::(hButton, STATE)
button_setimage:::::(hButton, hImage)
button_setimage:::::(hButton, hImage)
button_setstate:::::(hButton, STATE)
button_setstate:::::(hButton, STATE)
button_setstyle:::::(hButton, STYLE, fRedraw)
button_settext:::::(hButton, TEXT)
calcpagesize:::::(hDC, Rows, Columns)
callmsgfilter:::::(lpMsg, ncode)
callnamedpipe:::::(lpNamedPipeName, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesRead, nTimeOut)
callnexthookex:::::(hHook, ncode, wParam, lParam)
callntpowerinformation:::::(InformationLevel, lpInputBuffer, nInputBufferSize, lpOutputBuffer, nOutputBufferSize)
callstk$:::::(n)
callstk:::::diskfilename$
callwindowproc:::::(lpPrevWndFunc, hWnd, uMsg, wParam, lParam)
canceldc:::::(hdc)
cancelwaitabletimer:::::(hTimer)
cascadewindows:::::(hwndParent, uHow, lpRect, cKids, lpkids)
case:::::[IS] testlist
cbyt:::::(numeric_expression)
cconnect:::::(s, address, namelen)
cconnect:::::(s, sname, namelen)
ccur:::::(numeric_expression)
ccux:::::(numeric_expression)
cdbl:::::(numeric_expression)
cdwd:::::(numeric_expression)
ceil:::::(numeric_expression)
centerwindow:::::(hWnd)
cext:::::(numeric_expression)
changeclipboardchain:::::(hWnd, hWndNext)
changedisplaysettings:::::(lpDevMode, dwFlags)
changedisplaysettingsex:::::(lpszDeviceName, lpDevMode, hwnd, dwFlags, lParam)
changemenu:::::(hMenu, cmd, lpszNewItem, cmdInsert, flags)
changeserviceconfig:::::(hService, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName, lpLoadOrderGroup, lpdwTagId, lpDependencies, lpServiceStartName, lpPassword, lpDisplayName)
charlower:::::(lpsz)
charlowerbuff:::::(lpsz, cchLength)
charnext:::::(lpsz)
charnextex:::::(CodePag, lpCurrentChar, dwFlags)
charprev:::::(lpszStart, lpszCurrent)
charprevex:::::(CodePag, lpStart, lpCurrentChar, dwFlags)
chartooem:::::(lpszSrc, lpszDst)
chartooembuff:::::(lpszSrc, lpszDst, cchDstLength)
charupper:::::(lpsz)
charupperbuff:::::(lpsz, cchLength)
chdir:::::path
chdrive:::::drive
checkcolorsingamut:::::(hDC, lpRGBTriples, lpBuffer, nCount)
checkdlgbutton:::::(hDlg, nIDButton, uCheck)
checkmenuitem:::::(hMenu, uIDCheckItem, uCheck)
checkmenuradioitem:::::(hMenu, idFirst, idLast, idCheck, uFlags)
checkradiobutton:::::(hDlg, nIDFirstButton, nIDLastButton, nIDCheckButton)
checktokenmembership:::::(hToken, SidToCheck, IsMember)
childwindowfrompoint:::::(hwndParent, x, y)
childwindowfrompointex:::::(hWnd, x, y, uFlags)
choose:::::(index&, choice1 [, choice2] ...)
choosecolor:::::(lpcc)
choosefont:::::(lpcf)
choosepixelformat:::::(hDC, pPixelFormatDescriptor)
chord:::::(hdc, X1, Y1, X2, Y2, X3, Y3, X4, Y4)
chr$:::::(expression [,expression] [,...])
chr$:::::(string_expression [,...])
chr$:::::(x& TO y& [,...])
chrcmpi:::::(w1, w2)
cint:::::(numeric_expression)
clearcommbreak:::::(nCid)
clearcommerror:::::(hFile, lpErrors, lpStat)
cleareventlog:::::(hEventLog, lpBackupFileName)
clienttoscreen:::::(hWnd, lpPoint)
clipcursor:::::(lpRect)
clng:::::(numeric_expression)
close:::::[[#] filenum& [, [#] filenum&] ...]
closedesktop:::::(hDesktop)
closedriver:::::(hDriver, lParam1, lParam2)
closeenhmetafile:::::(hdc)
closeeventlog:::::(hEventLog)
closefigure:::::(hdc)
closehandle:::::(hObject)
closemetafile:::::(hMF)
closeprinter:::::(hPrinter)
closeservicehandle:::::(hSCObject)
closesocket:::::(s)
closesocket:::::(s)
closewindow:::::(hWnd)
closewindowstation:::::(hWinSta)
clsid$:::::(ProgramID$)
cmyk:::::(c, m, y, k)
cmyk:::::(c, m, y, k)
cocreateguid:::::(pGuid)
cocreateinstance:::::(rclsid, pUnkOuter, dwClsContext, riid, ppv)
codeptr:::::({Label | functionname | subname})
cogetmalloc:::::(dwMemContext, ppMalloc)
coinitialize:::::(pvReserved)
coinitializeex:::::(pvReserved, dwCoInit)
colorcorrectpalette:::::(hDC, hPalette, dwFirstEntry, dwNumOfEntries)
colormatchtotarget:::::(hDC, hdcTarget, uiAction)
combinergn:::::(hDestRgn, hSrcRgn1, hSrcRgn2, nCombineMode)
combinetransform:::::(lpXFORMResult, lpXFORM1, lpXFORM2)
combo_addstring:::::(hComboBox, TEXT)
combo_deletestring:::::(hComboBox, Index)
combo_deletestring:::::(hComboBox, Index)
combo_dir:::::(hComboBox, Attr, FileSpec)
combo_findstring:::::(hComboBox, Start, TEXT)
combo_findstringexact:::::(hComboBox, Start, TEXT)
combo_getcount:::::(hComboBox)
combo_getcount:::::(hComboBox)
combo_getcursel:::::(hComboBox)
combo_getcursel:::::(hComboBox)
combo_getdroppedstate:::::(hComboBox)
combo_getdroppedstate:::::(hComboBox)
combo_getdroppedwidth:::::(hComboBox)
combo_getdroppedwidth:::::(hComboBox)
combo_geteditsel:::::(hComboBox, lpStart, lpEnd)
combo_getextendui:::::(hComboBox)
combo_getextendui:::::(hComboBox)
combo_getitemdata:::::(hComboBox, index)
combo_getitemdata:::::(hComboBox, index)
combo_getlbtext:::::(hComboBox, Index)
combo_gettopindex:::::(hComboBox)
combo_gettopindex:::::(hComboBox)
combo_initstorage:::::(hComboBox, items, cb)
combo_initstorage:::::(hComboBox, items, cb)
combo_insertstring:::::(hComboBox, TEXT)
combo_limittext:::::(hComboBox, chLimit)
combo_resetcontent:::::(hComboBox)
combo_selectstring:::::(hComboBox, Index, TEXT)
combo_setcursel:::::(hComboBox, Index)
combo_setcursel:::::(hComboBox, Index)
combo_seteditsel:::::(hComboBox, nStart, nEnd)
combo_seteditsel:::::(hComboBox, nStart, nEnd)
combo_setitemdata:::::(hComboBox, index, nData)
combo_setitemdata:::::(hComboBox, index, nData)
combo_settopindex:::::(hComboBox, index)
combo_settopindex:::::(hComboBox, index)
combo_showdropdown:::::(hComboBox, nShow)
combobox_getminvisible:::::(hwnd)
combobox_getminvisible:::::(hwnd)
combobox_setminvisible:::::(hwnd, iMinVisible)
combobox_setminvisible:::::(hwnd, iMinVisible)
comm:::::([#] hComm, Comfunc)
command$:::::(ArgNum)
commandlinetoargvw:::::(lpCmdLine, pNumArgs)
commconfigdialog:::::(lpszName, hWnd, lpCC)
commiturlcacheentry:::::( lpszUrlName, lpszLocalFileName, ExpireTime, LastModifiedTime, CacheEntryType, lpHeaderInfo, dwHeaderSize, lpszFileExtension, lpszOriginalUrl)
commiturlcacheentry:::::( lpszUrlName, lpszLocalFileName, ExpireTime, LastModifiedTime, CacheEntryType, lpHeaderInfo, dwHeaderSize, lpszFileExtension, lpszOriginalUrl)
comparefiletime:::::(lpFileTime1, lpFileTime2)
comparestring:::::(Locale, dwCmpFlags, lpString1, cchCount1, lpString2, cchCount2)
configureport:::::(pName, hWnd, pPortName)
connectnamedpipe:::::(hNamedPipe, lpOverlapped)
connecttoprinterdlg:::::(hWnd, flags)
continuedebugevent:::::(dwProcessId, dwThreadId, dwContinueStatus)
controlservice:::::(hService, dwControl, lpServiceStatus)
convertdefaultlocale:::::(Locale)
convertthreadtofiber:::::(lpParameter)
copyacceleratortable:::::(hAccelSrc, lpAccelDst, cAccelEntries)
copycursor:::::(hcur)
copyenhmetafile:::::(hemfSrc, lpszFile)
copyfile:::::(lpExistingFileName, lpNewFileName, bFailIfExists)
copyfileex:::::(lpExistingFileName, lpNewFileName, lpProgressRoutine, lpData, pbCancel, dwCopyFlags)
copyicon:::::(hIcon)
copyimage:::::(hImage, uType, cxDesired, cyDesired, fuFlags)
copylzfile:::::(n1, n2)
copymemory:::::(pDestination, pSource, cbLength)
copymetafile:::::(hMF, lpFileName)
copyrect:::::(lpDestRect, lpSourceRect)
copysid:::::(nDestinationSidLength, pDestinationSid, pSourceSid)
cos:::::(numeric_expression)
cotaskmemalloc:::::(cbSize)
cotaskmemfree:::::(pMem)
cotaskmemrealloc:::::(pMem, cbSize)
cqud:::::(numeric_expression)
createacceleratortable:::::(lpaccl, cEntries)
createbitmap:::::(nWidth, nHeight, nPlanes, nBitCount, lpBits)
createbitmapindirect:::::(lpBitmap)
createbrushindirect:::::(lpLogBrush)
createcaret:::::(hWnd, hBitmap, nWidth, nHeight)
createcolorspace:::::(lpLogColorSpace)
createcompatiblebitmap:::::(hdc, nWidth, nHeight)
createcompatibledc:::::(hdc)
createconsolescreenbuffer:::::(dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwFlags, lpScreenBufferData)
createcursor:::::(hInstance, nXhotspot, nYhotspot, nWidth, nHeight, lpANDbitPlane, lpXORbitPlane)
createdc:::::(lpDriverName, lpDeviceName, lpOutput, lpInitData)
createdesktop:::::(lpszDesktop, lpszDevice, pDevmode, dwFlags, dwDesiredAccess, lpsa)
createdialog:::::(hInstance, lpName, hwndParent, lpDialogFunc)
createdialogindirect:::::(hInstance, lpTemplate, hWndParent, lpDialogFunc)
createdialogindirect:::::(hInstance, lpTemplate, hWndParent, lpDialogFunc)
createdialogindirectparam:::::(hInstance, lpTemplate, hWndParent, lpDialogFunc, dwInitParam)
createdialogparam:::::(hInstance, lpName, hwndParent, lpDialogFunc, lParamInit)
createdibitmap:::::(hdc, lpInfoHeader, dwUsage, lpInitBits, lpInitInfo, wUsage)
createdibpatternbrush:::::(hPackedDIB, wUsage)
createdibpatternbrushpt:::::(lpPackedDIB, iUsage)
createdibsection:::::(hdc, pbmi, dwUsage, ppvBits, hSection, dwOffset)
createdirectory:::::(lpPathName, lpSecurityAttributes)
createdirectoryex:::::(lpTemplateDirectory, lpNewDirectory, lpSecurityAttributes)
creatediscardablebitmap:::::(hdc, nWidth, nHeight)
createellipticrgn:::::(X1, Y1, X2, Y2)
createellipticrgnindirect:::::(lpRect)
createenhmetafile:::::(hdcRef, lpFileName, lpRect, lpDescription)
createevent:::::(lpEventAttributes, bManualReset, bInitialState, lpName)
createfiber:::::(dwStackSize, lpStartAddress, lpParameter)
createfile:::::(lpFileName, dwDesiredAccess, dwShareMode, lpSecurityAttributes, dwCreationDisposition, dwFlagsAndAttributes, hTemplateFile)
createfilemapping:::::(hFile, lpFileMappigAttributes, flProtect, dwMaximumSizeHigh, dwMaximumSizeLow, lpName)
createfont:::::(nHeight, nWidth, nEscapement, nOrientation, fnWeight, fdwItalic, fdwUnderline, fdwStrikeOut, fdwCharSet, fdwOutputPrecision, fdwClipPrecision, fdwQuality, fdwPitchAndFamily, lpszFace)
createfontindirect:::::(lpLogFont)
createfontindirectex:::::(penumlfex)
createhalftonepalette:::::(hdc)
createhardlink:::::(lpFileName, lpExistingFileName, lpSecurity_Attributes)
createhatchbrush:::::(nIndex, crColor)
createic:::::(lpDriverName, lpDeviceName, lpOutput, lpInitData)
createicon:::::(hInstance, nWidth, nHeight, nPlanes, nBitsPixel, lpANDbits, lpXORbits)
createiconfromresource:::::(presbits, dwResSize, fIcon, dwVer)
createiconfromresource:::::(presbits, dwResSize, fIcon, dwVer)
createiconfromresourceex:::::(presbits, dwResSize, fIcon, dwVer, cxDesired, cyDesired, uFlags)
createiconfromresourceex:::::(presbits, dwResSize, fIcon, dwVer, cxDesired, cyDesired, uFlags)
createiconindirect:::::(piconinfo)
createiocompletionport:::::(FileHandle, ExistingCompletionPort, CompletionKey, NumberOfConcurrentThreads)
createipforwardentry:::::(pRoute)
createipnetentry:::::(pArpEntry)
createmailslot:::::(lpName, nMaxMessageSize, lReadTimeout, lpSecurityAttributes)
createmappedbitmap:::::(hInstance, idBitmap, wFlags, lpColorMap, iNumMaps)
createmdichild:::::(sWndClass, hClient, Title, Style)
createmdiwindow:::::(lpClassName, lpWindowName, dwStyle, x, y, nWidth, nHeight, hwndParent, hInstance, lParam)
createmetafile:::::(lpString)
createmutex:::::(lpMutexAttributes, bInitialOwner, lpName)
createnamedpipe:::::(lpName, dwOpenMode, dwPipeMode, nMaxInstances, nOutBufferSize, nInBufferSize, nDefaultTimeOut, lpSecurityAttributes)
createpalette:::::(lpLogPalette)
createpatternbrush:::::(hBitmap)
createpen:::::(nPenStyle, nWidth, crColor)
createpenindirect:::::(lpLogPen)
createpipe:::::(phReadPipe, phWritePipe, lpPipeAttributes, nSize)
createpolygonrgn:::::(lpPoint, nCount, nPolyFillMode)
createpolypolygonrgn:::::(lpPoint, lpPolyCounts, nCount, nPolyFillMode)
createprivateobjectsecurity:::::(ParentDescriptor, CreatorDescriptor, NewDescriptor, IsDirectoryObject, Token, GenericMapping)
createprocess:::::(lpApplicationName, lpCommandLine, lpProcessAttributes, lpThreadAttributes, bInheritHandles, dwCreationFlags, lpEnvironment, lpCurrentDirectory, lpStartupInfo, lpProcessInformation)
createprocessasuser:::::(hToken, lpApplicationName, lpCommandLine, lpProcessAttributes, lpThreadAttributes, bInheritHandles, dwCreationFlags, lpEnvironment, lpCurrentDirectory, lpStartupInfo, lpProcessInformation)
createpropertysheetpage:::::(lppsp)
createproxyarpentry:::::(dwAddress, dwMask, dwIfIndex)
createrectrgn:::::(X1, Y1, X2, Y2)
createrectrgnindirect:::::(lpRect)
createremotethread:::::(hProcess, lpThreadAttributes, dwStackSize, lpStartAddress, lpParameter, dwCreationFlags, lpThreadId)
createroundrectrgn:::::(X1, Y1, X2, Y2, X3, Y3)
createscalablefontresource:::::(fHidden, lpszResourceFile, lpszFontFile, lpszCurrentPath)
createsemaphore:::::(lpSemaphoreAttributes, lInitialCount, lMaximumCount, lpName)
createservice:::::(hSCManager, lpServiceName, lpDisplayName, dwDesiredAccess, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName, lpLoadOrderGroup, lpdwTagId, lpDependencies, lp, lpPassword)
createsolidbrush:::::(crColor)
createstatuswindow:::::(STYLE, lpszText, hWndParent, wId)
createtapepartition:::::(hDevice, dwPartitionMethod, dwCount, dwSize)
createthread:::::(lpThreadAttributes, dwStackSize, StartAddress, lpParameter, dwCreationFlags, lpThreadId)
createtoolbarex:::::(hWnd, ws, wID, nBitmaps, hBMInst, wBMID, lpButtons, iNumButtons, dxButton, dyButton, dxBitmap, dyBitmap, uStructSize)
createtoolhelp32snapshot:::::(dwFlags, th32ProcessID)
createupdowncontrol:::::(dwStyle, x, y, cx, cy, hParent, nID, hInst, hBuddy, nUpper, nLower, nPos)
createurlcacheentry:::::( lpszUrlName, dwExpectedFileSize, lpszFileExtension, lpszFileName, dwReserved)
createurlcachegroup:::::( dwFlags, lpReserved)
createurlcachegroup:::::( dwFlags, lpReserved)
createwaitabletimer:::::(lpTimerAttributes, bManualReset, lpTimerName)
createwindow:::::(lpClassName, lpWindowName, dwStyle, xx, yy, nWidth, nHeight, hwndParent, hMenu, hInstance, lpParam)
createwindowex:::::(dwExStyle, lpClassName, lpWindowName, dwStyle, x, y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam)
createwindowstation:::::(lpszwinsta, dwReserved, dwDesiredAccess, lpsa)
cset$:::::(string_expression, strlen& [USING ustring_expression])
cset:::::[ABS] result_var = string_expression [USING string_expression]
csng:::::(numeric_expression)
ctl_code:::::(xDeviceType, xFunction, xMethod, xAccess)
curdir$:::::[(drive$)]
cwrd:::::(numeric_expression)
data:::::["]item["] [[, ["]item["]] ...]
datetime_getmonthcal:::::(hdp)
datetime_getmonthcal:::::(hdp)
datetime_getmonthcalcolor:::::(hdp, iColor)
datetime_getmonthcalcolor:::::(hdp, iColor)
datetime_getmonthcalfont:::::(hdp)
datetime_getmonthcalfont:::::(hdp)
datetime_getrange:::::(hdp, rgst)
datetime_getrange:::::(hdp, rgst)
datetime_getsystemtime:::::(hdp, pst)
datetime_getsystemtime:::::(hdp, pst)
datetime_setformat:::::(hdp, sz)
datetime_setmonthcalcolor:::::(hdp, iColor, clr)
datetime_setmonthcalcolor:::::(hdp, iColor, clr)
datetime_setmonthcalfont:::::(hdp, hfont, fRedraw)
datetime_setrange:::::(hdp, gd, rgst)
datetime_setrange:::::(hdp, gd, rgst)
datetime_setsystemtime:::::(hdp, gd, pst)
datetime_setsystemtime:::::(hdp, gd, pst)
ddeabandontransaction:::::(idInst, hConv, idTransaction)
ddeaccessdata:::::(hData, pcbDataSize)
ddeadddata:::::(hData, pSrc, cb, cbOff)
ddeclienttransaction:::::(pData, cbData, hConv, hszItem, uFmt, uType, dwTimeout, pdwResult)
ddecmpstringhandles:::::(hsz1, hsz2)
ddeconnect:::::(idInst, hszService, hszTopic, pCC)
ddeconnectlist:::::(idInst, hszService, hszTopic, hConvList, pCC)
ddecreatedatahandle:::::(idInst, pSrc, cb, cbOff, hszItem, wFmt, afCmd)
ddecreatestringhandle:::::(idInst, psz, iCodePage)
ddedisconnect:::::(hConv)
ddedisconnectlist:::::(hConvList)
ddeenablecallback:::::(idInst, hConv, wCmd)
ddefreedatahandle:::::(hData)
ddefreestringhandle:::::(idInst, hsz)
ddegetdata:::::(hData, pDst, cbMax, cbOff)
ddegetlasterror:::::(idInst)
ddeimpersonateclient:::::(hConv)
ddeinitialize:::::(pidInst, pfnCallback, afCmd, ulRes)
ddekeepstringhandle:::::(idInst, hsz)
ddenameservice:::::(idInst, hsz1, hsz2, afCmd)
ddepostadvise:::::(idInst, hszTopic, hszItem)
ddequeryconvinfo:::::(hConv, idTransaction, pConvInfo)
ddequerynextserver:::::(hConvList, hConvPrev)
ddequerystring:::::(idInst, hsz, psz, cchMax, iCodePage)
ddereconnect:::::(hConv)
ddesetqualityofservice:::::(hWndClient, pqosNew, pqosPrev)
ddesetuserhandle:::::(hConv, ID, hUser)
ddeunaccessdata:::::(hData)
ddeuninitialize:::::(idInst)
debugactiveprocess:::::(dwProcessId)
declare:::::{Sub | Function} ProcName [BDECL | CDECL | SDECL] [LIB "LibName"] [ALIAS "AliasName"] [([arguments])] [AS Type]
decr:::::variable
decryptfile:::::(lpFileName, dwReserved)
defdlgproc:::::(hDlg, uMsg, wParam, lParam)
defdriverproc:::::(dwDriverIdentifier, hDriver, uMsg, lParam1, lParam2)
deferwindowpos:::::(hWinPosInfo, hWnd, hWndInsertAfter, x, y, cx, cy, wFlags)
defframeproc:::::(hWnd, hWndMDIClient, uMsg, wParam, lParam)
definedosdevice:::::(dwFlags, lpDeviceName, lpTargetPath)
defmdichildproc:::::(hWnd, uMsg, wParam, lParam)
defrawinputproc:::::(paRawInput, nInput, cbSizeHeader)
deftype:::::letter_range [, letter_range] [, ...]
defwindowproc:::::(hWnd, uMsg, wParam, lParam)
deleteace:::::(pAcl, dwAceIndex)
deleteatom:::::(nAtom)
deletecolorspace:::::(hColorSpace)
deletecriticalsection:::::(lpCriticalSection)
deletedc:::::(hdc)
deleteenhmetafile:::::(hemf)
deletefiber:::::(lpFiber)
deletefile:::::(lpFileName)
deleteform:::::(hPrinter, pFormName)
deleteipaddress:::::(NTEContext)
deleteipforwardentry:::::(pRoute)
deleteipnetentry:::::(pArpEntry)
deletemenu:::::(hMenu, nPosition, wFlags)
deletemetafile:::::(hMF)
deletemonitor:::::(pName, pEnvironment, pMonitorName)
deleteobject:::::(hObject)
deleteport:::::(pName, hWnd, pPortName)
deleteprinter:::::(hPrinter)
deleteprinterconnection:::::(pName)
deleteprinterdata:::::(hPrinter, pValueName)
deleteprinterdataex:::::(hPrinter, pKeyName, pValueName)
deleteprinterdriver:::::(pName, pEnvironment, pDriverName)
deleteprinterdriverex:::::(pName, pEnvironment, pDriverName, dwDeleteFlag, dwVersionFlag)
deleteprinterkey:::::(hPrinter, pKeyName)
deleteprintprocessor:::::(pName, pEnvironment, pPrintProcessorName)
deleteprintprovidor:::::(pName, pEnvironment, pPrintProvidorName)
deleteproxyarpentry:::::(dwAddress, dwMask, dwIfIndex)
deletepwrscheme:::::(uiIndex)
deleteservice:::::(hService)
deleteurlcacheentry:::::( lpszUrlName)
deleteurlcachegroup:::::( GroupId, dwFlags, lpReserved)
deleteurlcachegroup:::::( GroupId, dwFlags, lpReserved)
deregistereventsource:::::(hEventLog)
describepixelformat:::::(hDC, iPixelFormat, nBytes, ppfd)
destroyacceleratortable:::::(hAccel)
destroycursor:::::(hCursor)
destroyicon:::::(hIcon)
destroymenu:::::(hMenu)
destroyprivateobjectsecurity:::::(ObjectDescriptor)
destroypropertysheetpage:::::(hPSPage)
destroywindow:::::(hWnd)
device_type_from_ctl_code:::::(ctrlCode)
devicecapabilities:::::(lpDeviceName, lpPort, iIndex, lpOutput, lpDevMode)
deviceiocontrol:::::(hDevice, dwIoControlCode, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesReturned, lpOverlapped)
dialogbox:::::(hInstance, lpTemplateName, hwndParent, lpDialogFunc)
dialogboxindirect:::::(hInstance, hDialogTemplate, hWndParent, lpDialogFunc)
dialogboxindirect:::::(hInstance, hDialogTemplate, hWndParent, lpDialogFunc)
dialogboxindirectparam:::::(hInstance, hDialogTemplate, hwndParent, lpDialogFunc, dwInitParam)
dialogboxparam:::::(hInstance, lpTemplateName, hwndParent, lpDialogFunc, dwInitParam)
dim:::::ident1, ident2, ...]]
dim:::::var
dim:::::var, ...]
dim:::::var[(subscripts)] ' var may include a type-specifier
dim:::::var[(subscripts)] [AS [Global | Instance | Local | Static | Threaded]Type] [PTR | POINTER] [AT address] [, ...]
dir$:::::Close
dir$:::::([Next] [TO DirDataVar])
dir$:::::(mask$ [, [ONLY] attribute&, TO DirDataVar])
disablethreadlibrarycalls:::::(hLibModule)
disconnectnamedpipe:::::(hNamedPipe)
diskfree:::::(drive$)
disksize:::::(drive$)
dispatchmessage:::::(lpMsg)
dlgdirlist:::::(hDlg, lpPathSpec, nIDListBox, nIDStaticPath, uFileType)
dlgdirlistcombobox:::::(hDlg, lpPathSpec, nIDComboBox, nIDStaticPath, uFileType)
dlgdirselectcomboboxex:::::(hWndDlg, lpszPath, cbPath, idComboBox)
dlgdirselectex:::::(hWndDlg, lpszPath, cbPath, idListBox)
dlgpreview:::::(hDlgMain, sTitle, sText, pd)
do:::::While | Until
documentproperties:::::(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput, fMode)
doenvironmentsubst:::::(szString, cbString)
dosdatetimetofiletime:::::(wFatDate, wFatTime, lpFileTime)
dosdatetimetovarianttime:::::(wDosDate, wDosTime, vbTime)
dptolp:::::(hdc, lpPoint, nCount)
dragacceptfiles:::::(hwnd, fAccept)
dragdetect:::::(hWnd, pt)
dragfinish:::::(hDrop)
dragobject:::::(hwnd1, hwnd2, ui, ui2, hCursor)
dragqueryfile:::::(hDrop, uiFile, lpStr, cch)
dragquerypoint:::::(hDrop, lpPoint)
drawanimatedrects:::::(hWnd, idAni, lprcFrom, lprcTo)
drawcaption:::::(hWnd, hDC, pcRect, uFlags)
drawedge:::::(hDC, qrc, edge, grfFlags)
drawescape:::::(hdc, nEscape, cbInput, lpszInData)
drawfocusrect:::::(hDC, lpRect)
drawframecontrol:::::(hDC, lpRect, un1, un2)
drawicon:::::(hDC, x, y, hIcon)
drawiconex:::::(hDC, xLeft, yTop, hIcon, cxWidth, cyWidth, istepIfAniCur, hbrFlickerFreeDraw, diFlags)
drawinsert:::::(handParent, hLB, nItem)
drawmenubar:::::(hWnd)
drawstate:::::(hDC, hBrush, lpDrawStateProc, lParam, wParam, x, y, cx, cy, fuFlags)
drawstatustext:::::(hDc, lprec, sztext, uFlags)
drawtext:::::(hDC, lpStr, nCount, lpRect, uFormat)
drawtextex:::::(hDC, lpsz, n, lpRect, dwDTFormat, lpDrawTextParams)
drvgetmodulehandle:::::(hDriver)
duplicatehandle:::::(hSourceProcessHandle, hSourceHandle, hTargetProcessHandle, lpTargetHandle, dwDesiredAccess, bInheritHandle, dwOptions)
duplicateicon:::::(hInst, hIcon)
duplicatetoken:::::(ExistingTokenHandle, ImpersonationLevel, DuplicateTokenHandle)
duplicatetokenex:::::(ExistingTokenHandle, dwDesiredAccess, lpTokenAttributes, ImpersonationLevel, TokenType, phNewToken)
edit_canundo:::::(hEdit)
edit_charfrompos:::::(hEdit, x, y)
edit_charfrompos:::::(hEdit, x, y)
edit_emptyundobuffer:::::(hEdit)
edit_fmtlines:::::(hEdit, AddEolFlag)
edit_fmtlines:::::(hEdit, AddEolFlag)
edit_getcuebannertext:::::(hwnd, lpwText, cchText)
edit_getcuebannertext:::::(hwnd, lpwText, cchText)
edit_getfirstvisibleline:::::(hEdit)
edit_getfirstvisibleline:::::(hEdit)
edit_gethandle:::::(hEdit)
edit_gethandle:::::(hEdit)
edit_getlimittext:::::(hEdit)
edit_getlimittext:::::(hEdit)
edit_getline:::::(hEdit, which)
edit_getline:::::(hEdit, which)
edit_getlinecount:::::(hEdit)
edit_getlinecount:::::(hEdit)
edit_getmargins:::::(hEdit)
edit_getmargins:::::(hEdit)
edit_getmodify:::::(hEdit)
edit_getmodify:::::(hEdit)
edit_getpasswordchar:::::(hEdit)
edit_getpasswordchar:::::(hEdit)
edit_getrect:::::(hEdit, r)
edit_getsel:::::(hEdit)
edit_getsel:::::(hEdit)
edit_gettext:::::(hEdit)
edit_gettext:::::(hEdit)
edit_gettextlength:::::(hEdit)
edit_gettextlength:::::(hEdit)
edit_getthumb:::::(hEdit)
edit_getthumb:::::(hEdit)
edit_hideballoontip:::::(hwnd)
edit_hideballoontip:::::(hwnd)
edit_limittext:::::(hEdit, chMax)
edit_linefromchar:::::(hEdit, index)
edit_linefromchar:::::(hEdit, index)
edit_lineindex:::::(hEdit, nLine)
edit_lineindex:::::(hEdit, nLine)
edit_linelength:::::(hEdit, index)
edit_linelength:::::(hEdit, index)
edit_linescroll:::::(hEdit, x, y)
edit_linescroll:::::(hEdit, x, y)
edit_posfromchar:::::(hEdit, index)
edit_posfromchar:::::(hEdit, index)
edit_setcuebannertext:::::(hwnd, lpcwText)
edit_setcuebannertext:::::(hwnd, lpcwText)
edit_settext:::::(hEdit, TEXT)
edit_settext:::::(hEdit, TEXT)
edit_showballoontip:::::(hwnd, peditballoontip)
edit_showballoontip:::::(hwnd, peditballoontip)
ellipse:::::(hdc, X1, Y1, X2, Y2)
else:::::{Sub | Label | statements}]
elseif:::::integer_expression Then
enablemenuitem:::::(hMenu, uIDEnableItem, uEnable)
enablerouter:::::(pHandle, pOverlapped)
enablescrollbar:::::(hWnd, uSBflags, uArrows)
enablewindow:::::(hWnd, fEnable)
encryptfile:::::(lpFileName)
enddeferwindowpos:::::(hWinPosInfo)
enddialog:::::(hDlg, nResult)
enddoc:::::(hdc)
enddocprinter:::::(hPrinter)
endpage:::::(hdc)
endpageprinter:::::(hPrinter)
endpaint:::::(hWnd, lpPaint)
endpath:::::(hdc)
endupdateresource:::::(hUpdate, fDiscard)
entercriticalsection:::::(lpCriticalSection)
enumcalendarinfo:::::(lpCalInfoEnumProc, Locale, Calendar, CalType)
enumcalendarinfoex:::::(lpCalInfoEnumProc, Locale, Calendar, CalType)
enumchildwindows:::::(hwndParent, lpEnumFunc, lParam)
enumclipboardformats:::::(uFormat)
enumdateformats:::::(lpDateFmtEnumProc, Locale, dwFlags)
enumdateformatsex:::::(lpDateFmtEnumProc, Locale, dwFlags)
enumdependentservices:::::(hService, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned)
enumdesktops:::::(hWinSta, lpEnumFunc, lParam)
enumdesktopwindows:::::(hDesktop, lpfn, lParam)
enumdisplaydevices:::::(lpszDevice, iDevNum, lpDisplayDevice, dwFlags)
enumdisplaymonitors:::::(hdc, lprcClip, lpfnEnum, dwData)
enumdisplaysettings:::::(lpszDeviceName, iModeNum, lpDevMode)
enumdisplaysettingsex:::::(lpszDeviceName, iModeNum, lpDevMode, dwFlags)
enumenhmetafile:::::(hdc, hemf, lpEnhMetaFunc, lpData, lpRect)
enumfontfamilies:::::(hdc, lpszFamily, lpEnumFontFamProc, lParam)
enumfontfamiliesex:::::(hdc, lpLogFont, lpEnumFontProc, lParam, dw)
enumfonts:::::(hDC, lpsz, lpFontEnumProc, lParam)
enumforms:::::(hPrinter, Level, pForm, cbBuf, pcbNeeded, pcReturned)
enumicmprofiles:::::(hdc, icmEnumProc, lParam)
enumjobs:::::(hPrinter, FirstJob, NoJobs, Level, pJob, cbBuf, pcbNeeded, pcReturned)
enummetafile:::::(hDC, hMetafile, lpMFEnumProc, lParam)
enummonitors:::::(pName, Level, pMonitors, cbBuf, pcbNeeded, pcReturned)
enumobjects:::::(hDC, n, lpGOBJEnumProc, lpVoid)
enumports:::::(pName, Level, lpbPorts, cbBuf, pcbNeeded, pcReturned)
enumprinterdata:::::(hPrinter, dwIndex, pValueName, cbValueName, pcbValueName, pType, pData, cbData, pcbData)
enumprinterdataex:::::(hPrinter, pKeyName, pEnumValues, cbEnumValues, pcbEnumValues, pnEnumValues)
enumprinterdataex:::::(hPrinter, pKeyName, pEnumValues, cbEnumValues, pcbEnumValues, pnEnumValues)
enumprinterdrivers:::::(pName, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded, pcReturned)
enumprinterkey:::::(hPrinter, pKeyName, pSubkey, cbSubkey, pcbSubkey)
enumprinterpropertysheets:::::(hPrinter, hWnd, lpfnAdd, lParam)
enumprinters:::::(dwFlags, xname, Level, pPrinterEnum, cbBuf, pcbNeeded, pcReturned)
enumprintprocessordatatypes:::::(pName, pPrintProcessorName, Level, pDatatypes, cbBuf, pcbNeeded, pcReturned)
enumprintprocessors:::::(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded, pcReturned)
enumprops:::::(hWnd, lpEnumFunc)
enumpropsex:::::(hWnd, lpEnumFunc, lParam)
enumpwrschemes:::::(lpfnPwrSchemesEnumProc, lParam)
enumresourcelanguages:::::(hModule, lpType, lpName, lpEnumFunc, lParam)
enumresourcenames:::::(hModule, lpType, lpEnumFunc, lParam)
enumresourcetypes:::::(hModule, lpEnumFunc, lParam)
enumservicesstatus:::::(hSCManager, dwServiceType, dwServiceState, lpServices, cbBufSize, pcbBytesNeeded, lpServicesReturned, lpResumeHandle)
enumsystemcodepages:::::(lpCodePageEnumProc, dwFlags)
enumsystemgeoid:::::(GeoClass, ParentGeoId, lpGeoEnumProc)
enumsystemlanguagegroups:::::(lpLanguageGroupEnumProc, dwFlags, lParam)
enumsystemlocales:::::(lpLocaleEnumProc, dwFlags)
enumthreadwindows:::::(dwThreadId, lpfn, lParam)
enumtimeformats:::::(lpTimeFmtEnumProc, Locale, dwFlags)
enumuilanguages:::::(lpUILanguageEnumProc, dwFlags, lParam)
enumwindows:::::(lpEnumFunc, lParam)
enumwindowstations:::::(lpEnumFunc, lParam)
environ$:::::({parameter_string | n})
environ:::::envstring$
eof:::::([#] filenum&)
equalprefixsid:::::(pSid1, pSid2)
equalrect:::::(lpRect1, lpRect2)
equalrgn:::::(hSrcRgn1, hSrcRgn2)
equalsid:::::(pSid1, pSid2)
erase:::::Array[()] [, Array[()]] ...
erasetape:::::(hDevice, dwEraseType, bimmediate)
error$:::::[(ErrNum)]
escape:::::(hdc, nEscape, nCount, lpInData, lpOutData)
escapecommlib "kernel32.dll" alias "escapecommfunction":::::(nCid, nFunc)
excludecliprect:::::(hdc, X1, Y1, X2, Y2)
excludeupdatergn:::::(hDC, hWnd)
exist:::::(FileSpec)
exitprocess:::::(uExitCode)
exitthread:::::(dwExitCode)
exitwindows:::::(dwReserved, uReturnCode)
exitwindowsex:::::(uFlags, dwReserved)
exp:::::(n)
exp10:::::(n)
exp2:::::(n)
expandenvironmentstrings:::::(lpSrc, lpDst, nSize)
extcreatepen:::::(dwPenStyle, dwWidth, lplb, dwStyleCount, lpStyle)
extcreateregion:::::(lpXform, nCount, lpRgnData)
extescape:::::(hdc, nEscape, cbInput, lpszInData, cbOutput, lpszOutData)
extfloodfill:::::(hdc, x, y, crColor, wFillType)
extract$:::::([start,] MainStr, [ANY] MatchStr)
extractassociatedicon:::::(hInst, lpIconPath, lpwIcon)
extracticon:::::(hInst, lpszExeFileName, nIconIndex)
extracticonex:::::(lpszFile, nIconIndex, phiconLarge, phiconSmall, nIcons)
extselectcliprgn:::::(hdc, hRgn, fnMode)
exttextout:::::(hdc, x, y, dwOptions, lpRect, lpString, nCount, lpDx)
failed:::::(nStatus)
failed:::::(nStatus)
fatalappexit:::::(uAction, lpMessageText)
fatalexit:::::(CODE)
fd_clr:::::(xfd, xset)
fd_isset:::::(xfd, xset)
fd_set:::::(xfd, xset)
fd_zero:::::(xset)
field:::::# filenum, nSize, [FROM] nStart TO nEnd,...]
field:::::DynamicStr, nSize, [FROM] nStart TO nEnd,...]
fileattr:::::([#] filenum&, fattr)
filecopy:::::sourcefile, destfile
filename$:::::(filenum&)
filescan:::::[#] fnum&, RECORDS TO y& [, Width TO x&]
filetimetodosdatetime:::::(lpFileTime, lpFatDate, lpFatTime)
filetimetolocalfiletime:::::(lpFileTime, lpLocalFileTime)
filetimetosystemtime:::::(lpFileTime, lpSystemTime)
fillconsoleoutputattribute:::::(hConsoleOutput, dwAttribute, nLength, dwWriteCoord, lpNumberOfAttrsWritten)
fillconsoleoutputcharacter:::::(hConsoleOutput, bCharacter, nLength, dwWriteCoord, lpNumberOfCharsWritten)
fillmemory:::::(pDestination, cbLength, bFill)
fillpath:::::(hdc)
fillrect:::::(hDC, lpRect, hBrush)
fillrgn:::::(hdc, hRgn, hBrush)
findatom:::::(lpString)
findclose:::::(hFindFile)
findclosechangenotification:::::(hChangeHandle)
findcloseprinterchangenotification:::::(hChange)
findcloseurlcache:::::( hEnumHandle)
findexecutable:::::(lpFile, lpDirectory, lpResult)
findfirstchangenotification:::::(lpPathName, bWatchSubtree, dwNotifyFilter)
findfirstfile:::::(lpFileName, lpFindFileData)
findfirstfileex:::::(lpFileName, fInfoLevelId, lpFindFileData, fSearchOp, lpSearchFilter, dwAdditionalFlags)
findfirstfreeace:::::(pAcl, pAce)
findfirstprinterchangenotification:::::(hPrinter, fdwFlags, fdwOptions, pPrinterNotifyOptions)
findfirsturlcacheentry:::::( lpszUrlSearchPattern, lpFirstCacheEntryInfo, lpdwFirstCacheEntryInfoBufferSize)
findfirsturlcacheentryex:::::( lpszUrlSearchPattern, dwFlags, dwFilter, GroupId, lpFirstCacheEntryInfo, lpdwFirstCacheEntryInfoBufferSize, lpGroupAttributes, pcbGroupAttributes, lpReserved)
findfirsturlcachegroup:::::( dwFlags, dwFilter, lpSearchCondition, dwSearchCondition, GroupId, lpReserved)
findnextchangenotification:::::(hChangeHandle)
findnextfile:::::(hFindFile, lpFindFileData)
findnextprinterchangenotification:::::(hChange, pdwChange, pPrinterNotifyOptions, ppPrinterNotifyInfo)
findnextprinterchangenotification:::::(hChange, pdwChange, pPrinterNotifyOptions, ppPrinterNotifyInfo)
findnexturlcacheentry:::::( hEnumHandle, lpNextCacheEntryInfo, lpdwNextCacheEntryInfoBufferSize)
findnexturlcacheentryex:::::( hEnumHandle, lpFirstCacheEntryInfo, lpdwFirstCacheEntryInfoBufferSize, lpGroupAttributes, pcbGroupAttributes, lpReserved)
findnexturlcachegroup:::::( hFind, lpGroupId, lpReserved)
findresource:::::(hInstance, lpName, lpType)
findresourceex:::::(hModule, lpType, lpName, wLanguage)
findtext:::::(lpfr)
findwindow:::::(lpClassName, lpWindowName)
findwindowex:::::(hWnd1, hWnd2, lpsz1, lpsz2)
first_ipaddress:::::(x)
first_ipaddress:::::(x)
fix:::::(numeric_expression)
fixbrushorgex:::::(hDC, n1, n2, lpPoint)
flashwindow:::::(hWnd, bInvert)
flashwindowex:::::(pfwi)
flatsb_enablescrollbar:::::(hWnd, wSBflags, dArrows)
flatsb_getscrollinfo:::::(hWnd, typecode, si)
flatsb_getscrollpos:::::(hWnd, typecode)
flatsb_getscrollprop:::::(hWnd, propIndex, nValue)
flatsb_getscrollrange:::::(hWnd, typecode, MinPos, MaxPos)
flatsb_setscrollinfo:::::(hWnd, typecode, si, fRedraw)
flatsb_setscrollpos:::::(hWnd, typecode, nPos, fRedraw)
flatsb_setscrollprop:::::(hWnd, propIndex, newValue, fRedraw)
flatsb_setscrollrange:::::(hWnd, typecode, nMinPos, nMaxPos, fRedraw)
flatsb_showscrollbar:::::(hWnd, typecode, fShow)
flattenpath:::::(hdc)
floodfill:::::(hdc, x, y, crColor)
flush:::::[[#] filenum& [, [#] filenum&] ...]
flushconsoleinputbuffer:::::(hConsoleInput)
flushfilebuffers:::::(hFile)
flushinstructioncache:::::(hProcess, lpBaseAddress, dwSize)
flushipnettable:::::(dwIfIndex)
flushprinter:::::(hPrinter, pBuf, cbBuf, pcWritten, cSleep)
flushviewoffile:::::(lpBaseAddress, dwNumberOfBytesToFlush)
foldstring:::::(dwMapFlags, lpSrcStr, cchSrc, lpDestStr, cchDest)
for:::::Counter = start TO stop [Step increment]
format$:::::(num_expression [, [digits& | fmt$]])
formatmessage:::::(dwFlags, lpSource, dwMessageId, dwLanguageId, lpBuffer, nSize, Arguments)
fourth_ipaddress:::::(x)
fourth_ipaddress:::::(x)
frac:::::(float_expression)
framerect:::::(hDC, lpRect, hBrush)
framergn:::::(hdc, hRgn, hBrush, nWidth, nHeight)
freeddelparam:::::(msg, lParam)
freeenvironmentstrings:::::(lpsz)
freeinheritedfromarray:::::( pInheritArray, AceCnt, pfnArray)
freeinheritedfromarray:::::( pInheritArray, AceCnt, pfnArray)
freelibrary:::::(hLibModule)
freelibraryandexitthread:::::(hLibModule, dwExitCode)
freeprinternotifyinfo:::::(pPrinterNotifyInfo)
freeprinternotifyinfo:::::(pPrinterNotifyInfo)
freeresource:::::(hResData)
freesid:::::(pSid)
ftpcommand:::::( hConnect, fExpectResponse, dwFlags, lpszCommand, dwContext, phFtpCommand)
ftpcreatedirectory:::::( hConnect, lpszDirectory)
ftpdeletefile:::::( hConnect, lpszFileName)
ftpfindfirstfile:::::( hConnect, lpszSearchFile, lpFindFileData, dwFlags, dwContext)
ftpgetcurrentdirectory:::::( hConnect, lpszCurrentDirectory, lpdwCurrentDirectory)
ftpgetfile:::::( hConnect, lpszRemoteFile, lpszNewFile, fFailIfExists, dwFlagsAndAttributes, dwFlags, dwContext)
ftpgetfileex:::::( hFtpSession, lpszRemoteFile, lpszNewFile, fFailIfExists, dwFlagsAndAttributes, dwFlags, dwContext)
ftpgetfileex:::::( hFtpSession, lpszRemoteFile, lpszNewFile, fFailIfExists, dwFlagsAndAttributes, dwFlags, dwContext)
ftpgetfilesize:::::( hFile, lpdwFileSizeHigh)
ftpopenfile:::::( hConnect, lpszFileName, dwAccess, dwFlags, dwContext)
ftpputfile:::::( hConnect, lpszLocalFile, lpszNewRemoteFile, dwFlags, dwContext)
ftpputfileex:::::( hFtpSession, lpszLocalFile, lpszNewRemoteFile, dwFlags, dwContext)
ftpputfileex:::::( hFtpSession, lpszLocalFile, lpszNewRemoteFile, dwFlags, dwContext)
ftpremovedirectory:::::( hConnect, lpszDirectory)
ftprenamefile:::::( hConnect, lpszExisting, lpszNew)
ftpsetcurrentdirectory:::::( hConnect, lpszDirectory)
gdicomment:::::(hdc, cbSize, lpData)
gdisetbatchlimit:::::(dwLimit)
generateconsolectrlevent:::::(dwCtrlEvent, dwProcessGroupId)
get$:::::[#] filenum&, Count&, sVar$
get:::::[#] filenum& [, Rec]
get:::::[#] filenum&, [Rec], [ABS] Var
get:::::[#] filenum&, [RecPos], Arr() [RECORDS rcds] [TO Count]
get:::::[#] filenum&, [RecPos], Var
getacceptexsockaddrs:::::(lpOutputBuffer, dwReceiveDataLength, dwLocalAddressLength, dwRemoteAddressLength, LocalSockaddr, LocalSockaddrLength, RemoteSockaddr, RemoveSockaddrLength)
getace:::::(pAcl, dwAceIndex, pAce)
getaclinformation:::::(pAcl, pAclInformation, nAclInformationLength, dwAclInformationClass)
getactivepwrscheme:::::(puiID)
getadapterindex:::::(AdapterName, IfIndex)
getadaptersinfo:::::(pAdapterInfo, pOutBufLen)
getalttabinfo:::::(hwnd, iItem, pati, pszItemText, cchItemText)
getancestor:::::(hwnd, gaFlags)
getarcdirection:::::(hdc)
getaspectratiofilterex:::::(hdc, lpAspectRatio)
getasynckeystate:::::(vKey)
getatomname:::::(nAtom, lpBuffer, nSize)
getattr:::::(filespec$)
getauditedpermissionsfromacl:::::( pacl, pTrustee, pSuccessfulAuditedRights, pFailedAuditRights)
getbestinterface:::::(dwDestAddr, pdwBestIfIndex)
getbestroute:::::(dwDestAddr, dwSourceAddr, pBestRoute)
getbinarytype:::::(lpApplicationName, lpBinaryType)
getbitmapbits:::::(hBitmap, cbBuffer, lpBits)
getbitmapdimensionex:::::(hBitmap, lpDimension)
getbkcolor:::::(hdc)
getbkmode:::::(hdc)
getboundsrect:::::(hdc, lprcBounds, flags)
getbrushorgex:::::(hDC, lpPoint)
getbvalue:::::(drgb)
getbvalue:::::(drgb)
getcalendarinfo:::::(Locale, Calendar, CalType, lpCalData, cchData, lpValue)
getcaretpos:::::(lpPoint)
getcharabcwidths:::::(hdc, dFirstChar, dLastChar, lpabc)
getcharabcwidthsfloat:::::(hdc, dFirstChar, dLastChar, lpABCF)
getcharabcwidthsi:::::(hdc, giFirst, cgi, pgi, lpabc)
getcharacterplacement:::::(hdc, lpsz, n1, n2, lpGcpResults, dw)
getcharwidth:::::(hdc, dFirstChar, dLastChar, lpBuffer)
getcharwidth32:::::(hdc, dFirstChar, dLastChar, lpBuffer)
getcharwidthfloat:::::(hdc, dFirstChar, dLastChar, pxBuffer)
getcharwidthi:::::(hdc, giFirst, cgi, pgi, lpBuffer)
getclassinfo:::::(hInstance, lpClassName, lpWndClass)
getclassinfoex:::::(hInst, lpszClass, lpWndClass)
getclasslong:::::(hwnd, nIndex)
getclassname:::::(hwnd, lpClassName, nMaxCount)
getclassword:::::(hwnd, nIndex)
getclientrect:::::(hwnd, lpRect)
getclipboarddata:::::(uFormat)
getclipboardformatname:::::(uFormat, lpString, nMaxCount)
getclipbox:::::(hdc, lpRect)
getclipcursor:::::(lprc)
getcliprgn:::::(hdc, hRgn)
getcoloradjustment:::::(hdc, lpca)
getcolorspace:::::(hdc)
getcomboboxinfo:::::(hwndCombo, pbci)
getcommconfig:::::(hCommDev, lpCC, lpdwSize)
getcommmask:::::(hFile, lpEvtMask)
getcommmodemstatus:::::(hFile, lpModemStat)
getcommproperties:::::(hFile, lpCommProp)
getcommstate:::::(nCid, lpDCB)
getcommtimeouts:::::(hFile, lpCommTimeouts)
getcompressedfilesize:::::(lpFileName, lpFileSizeHigh)
getcomputername:::::(lpBuffer, nSize)
getcomputerobjectname:::::( NameFormat, lpNameBuffer, nSize)
getconsolecursorinfo:::::(hConsoleOutput, lpConsoleCursorInfo)
getconsolemode:::::(hConsoleHandle, lpMode)
getconsolescreenbufferinfo:::::(hConsoleOutput, lpConsoleScreenBufferInfo)
getconsoletitle:::::(lpConsoleTitle, nSize)
getcpinfo:::::(CodePag, lpCPInfo)
getcpinfoex:::::(CodePag, dwFlags, lpCPInfo)
getcurrencyformat:::::(Locale, dwFlags, lpValue, lpFormat, lpCurrencyStr, cchCurrency)
getcurrentdirectory:::::(nBufferLength, lpBuffer)
getcurrenthwprofile:::::(lpHwProfileInfo)
getcurrentobject:::::(hdc, uObjectType)
getcurrentpositionex:::::(hdc, lpPoint)
getcurrentpowerpolicies:::::(pGlobalPowerPolicy, pPowerPolicy)
getcursorinfo:::::(pci)
getcursorpos:::::(lpPoint)
getcvalue:::::(dwCMYK)
getcvalue:::::(dwCMYK)
getdateformat:::::(Locale, dwFlags, lpDate, lpFormat, lpDateStr, cchDate)
getdc:::::(hWnd)
getdcbrushcolor:::::(hdc)
getdcex:::::(hWnd, hRgnClip, fdwOptions)
getdcorgex:::::(hdc, lpPoint)
getdcpencolor:::::(hdc)
getdefaultcommconfig:::::(lpszName, lpCC, lpdwSize)
getdefaultprinter:::::(pszBuffer, pcchBuffer)
getdevicecaps:::::(hdc, nIndex)
getdevicegammaramp:::::(hDC, lpRamp)
getdibcolortable:::::(hDC, uStartIndex, cEntries, pRGBQuad)
getdibits:::::(hdc, hBitmap, nStartScan, nNumScans, lpBits, lpBI, wUsage)
getdiskfreespace:::::(lpRootPathName, lpSectorsPerCluster, lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters)
getdiskfreespaceex:::::(lpPathName, lpFreeBytesAvailableToCaller, lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes)
getdlgctrlid:::::(hWnd)
getdlgitem:::::(hDlg, nIDDlgItem)
getdlgitemint:::::(hDlg, nIDDlgItem, lpTranslated, bSigned)
getdlgitemtext:::::(hDlg, nIDDlgItem, lpString, nMaxCount)
getdrivermodulehandle:::::(hDriver)
getdrivetype:::::(nDrive)
geteffectiveclientrect:::::(hWnd, lprc, lpInfo)
geteffectiverightsfromacl:::::( pacl, pTrustee, pAccessRights)
getenhmetafile:::::(lpszMetaFile)
getenhmetafilebits:::::(hemf, cbBuffer, lpbBuffer)
getenhmetafiledescription:::::(hemf, cchBuffer, lpszDescription)
getenhmetafileheader:::::(hemf, cbBuffer, lpemh)
getenhmetafilepaletteentries:::::(hemf, cEntries, lppe)
getenhmetafilepixelformat:::::(hemf, cbBuffer, ppfd)
getenvironmentvariable:::::(lpName, lpBuffer, nSize)
getexitcodeprocess:::::(hProcess, lpExitCode)
getexitcodethread:::::(hThread, lpExitCode)
getexpandedname:::::(lpszSource, lpszBuffer)
getexplicitentriesfromacl:::::( pacl, pcCountOfExplicitEntries, pListOfExplicitEntries)
getexplicitentriesfromacl:::::( pacl, pcCountOfExplicitEntries, pListOfExplicitEntries)
getfileattributes:::::(lpFileName)
getfileattributesex:::::(lpFileName, fInfoLevelId, lpFileInformation)
getfiledate:::::(sFileName, iYear, iMonth, iDay, iHour, iMinute, iSecond)
getfileinformationbyhandle:::::(hFile, lpFileInformation)
getfilesecurity:::::(lpFileName, RequestedInformation, pSecurityDescriptor, nLength, lpnLengthNeeded)
getfilesize:::::(hFile, lpFileSizeHigh)
getfilesizeex:::::(hFile, lpFileSizeHigh)
getfiletime:::::(hFile, lpCreationTime, lpLastAccessTime, lpLastWriteTime)
getfiletitle:::::(lpszFile, lpszTitle, cbBuf)
getfiletype:::::(hFile)
getfileversioninfo:::::(lptstrFilename, dwHandle, dwLen, lpData)
getfileversioninfosize:::::(lptstrFilename, lpdwHandle)
getfontdata:::::(hdc, dwTable, dwOffset, lpvBuffer, cbData)
getfontlanguageinfo:::::(hdc)
getform:::::(hPrinter, pFormName, Level, pForm, cbBuf, pcbNeeded)
getfriendlyifindex:::::(IfIndex)
getfullpathname:::::(lpFileName, nBufferLength, lpBuffer, lpFilePart)
getgeoinfo:::::(Location, GeoType, lpGeoData, cchData, LangId)
getglyphindices:::::(hdc, lpstr, c, pgi, fl)
getglyphoutline:::::(hdc, uChar, ufFormat, lpgm, cbBuffer, lpBuffer, lpmat2)
getgraphicsmode:::::(hdc)
getguiresources:::::(hProcess, uiFlags)
getguithreadinfo:::::(idThread, pgui)
getgvalue:::::(drgb)
getgvalue:::::(drgb)
gethandleinformation:::::(hObject, lpdwFlags)
gethostbyaddr:::::(address, addr_len, addr_type)
gethostbyaddr:::::(saAddr, addr_len, addr_type)
gethostbyname:::::(hname)
gethostbyname:::::(ost_name)
gethostname:::::(host_name, namelen)
gethostname:::::(host_name, namelen)
geticmprofile:::::(hDC, lpcbName, lpszFilename)
geticmpstatistics:::::(pStats)
geticoninfo:::::(hIcon, piconinfo)
getifentry:::::(pIfRow)
getiftable:::::(pIfTable, pdwSize, bOrder)
getinheritancesource:::::( pObjectName, ObjectType, SecurityInfo, Container, pObjectClassGuids, GuidCount, pAcl, pfnArray, pGenericMapping, pInheritArray)
getinterfaceinfo:::::(pIfTable, dwOutBufLen)
getipaddrtable:::::(pIpAddrTable, pdwSize, bOrder)
getipforwardtable:::::(pIpForwardTable, pdwSize, bOrder)
getipnettable:::::(pIpNetTable, pdwSize, bOrder)
getipstatistics:::::(pStats)
getjob:::::(hPrinter, JobId, Level, pJob, cbBuf, pcbNeeded)
getkernelobjectsecurity:::::(xHandle, RequestedInformation, pSecurityDescriptor, nLength, lpnLengthNeeded)
getkerningpairs:::::(hdc, cPairs, lpkrnpair)
getkeyboardlayout:::::(dwLayout)
getkeyboardlayoutlist:::::(nBuff, lpList)
getkeyboardlayoutname:::::(pwszKLID)
getkeyboardstate:::::(pbKeyState)
getkeyboardtype:::::(nTypeFlag)
getkeynametext:::::(lParam, lpBuffer, nSize)
getkeystate:::::(nVirtKey)
getkvalue:::::(dwCMYK)
getkvalue:::::(dwCMYK)
getlargestconsolewindowsize:::::(hConsoleOutput)
getlastactivepopup:::::(hWndOwner)
getlastinputinfo:::::(plii)
getlayeredwindowattributes:::::(hwnd, pcrKey, pbAlpha, pdwFlags)
getlengthsid:::::(pSid)
getlistboxinfo:::::(hwnd)
getlocaleinfo:::::(Locale, LCType, lpLCData, cchData)
getlocaltime:::::(lpSystemTime)
getlogcolorspace:::::(hColorSpace, lpBuffer, nSize)
getlogicaldrivestrings:::::(nBufferLength, lpBuffer)
getlongpathname:::::(lpszShortPath, lpszLongPath, cchBuffer)
getmailslotinfo:::::(hMailSlot, lpMaxMessageSize, lpNextSize, lpMessageCount, lpReadTimeout)
getmapmode:::::(hdc)
getmenu:::::(hWnd)
getmenubarinfo:::::(hwnd, idObject, idItem, pmbi)
getmenucontexthelpid:::::(hMenu)
getmenudefaultitem:::::(hMenu, fByPos, gmdiFlags)
getmenuinfo:::::(hmenu, lpcmi)
getmenuitemcount:::::(hMenu)
getmenuitemid:::::(hMenu, nPos)
getmenuiteminfo:::::(hMenu, uItem, fByPosition, lpMenuItemInfo)
getmenuitemrect:::::(hWnd, hMenu, uItem, lprcItem)
getmenustate:::::(hMenu, dwID, dwFlags)
getmenustring:::::(hMenu, uIDItem, lpString, nMaxCount, uFlag)
getmessage:::::(lpMsg, hWnd, uMsgFilterMin, uMsgFilterMax)
getmetafile:::::(lpFileName)
getmetafilebitsex:::::(hMF, nSize, lpvData)
getmetargn:::::(hdc, hRgn)
getmiterlimit:::::(hdc, peLimit)
getmodulefilename:::::(hModule, lpFileName, nSize)
getmodulehandle:::::(lpModuleName)
getmonitorinfo:::::(hMonitor, lpmi)
getmousemovepointsex:::::(cbSize, lppt, lpptBuf, nBufPoints, resolution)
getmultipletrustee:::::( pTrustee)
getmultipletrusteeoperation:::::( pTrustee)
getmvalue:::::(dwCMYK)
getmvalue:::::(dwCMYK)
getnamedpipehandlestate:::::(hNamedPipe, lpState, lpCurInstances, lpMaxCollectionCount, lpCollectDataTimeout, lpUserName, nMaxUserNameSize)
getnamedpipeinfo:::::(hNamedPipe, lpFlags, lpOutBufferSize, lpInBufferSize, lpMaxInstances)
getnamedsecurityinfo:::::( pObjectName, ObjectType, SecurityInfo, ppsidOwner, ppsidGroup, ppDacl, ppSacl, ppSecurityDescriptor)
getnearestcolor:::::(hdc, crColor)
getnearestpaletteindex:::::(hPalette, crColor)
getnetworkparams:::::(pFixedInfo, pOutBufLen)
getnextdlggroupitem:::::(hDlg, hCtl, bPrevious)
getnextdlgtabitem:::::(hDlg, hCtl, bPrevious)
getnextwindow:::::(hWnd, uCmd)
getnextwindow:::::(hWnd, uCmd)
getnumberformat:::::(Locale, dwFlags, lpValue, lpFormat, lpNumberStr, cchNumber)
getnumberofconsoleinputevents:::::(hConsoleInput, lpNumberOfEvents)
getnumberofconsolemousebuttons:::::(lpNumberOfMouseButtons)
getnumberofeventlogrecords:::::(hEventLog, NumberOfRecords)
getnumberofinterfaces:::::(pdwNumIf)
getobject:::::(hObject, nCount, lpObject)
getobjecttype:::::(hgdiobj)
getoldesteventlogrecord:::::(hEventLog, OldestRecord)
getopenfilename:::::(lpofn)
getoutlinetextmetrics:::::(hdc, cbData, lpotm)
getoverlappedresult:::::(hFile, lpOverlapped, lpNumberOfBytesTransferred, bWait)
getpaletteentries:::::(hPalette, wStartIndex, wNumEntries, lpPaletteEntries)
getparent:::::(hWnd)
getpath:::::(hdc, lpPoint, lpTypes, nSize)
getpeername:::::(s, sname, namelen)
getpeername:::::(s, sname, namelen)
getperadapterinfo:::::(IfIndex, pPerAdapterInfo, pOutBufLen)
getpixel:::::(hdc, x, y)
getpixelformat:::::(hDC)
getpolyfillmode:::::(hdc)
getprinter:::::(hPrinter, Level, pPrinter, cbBuf, pcbNeeded)
getprinterdata:::::(hPrinter, pValueName, pType, pData, nSize, pcbNeeded)
getprinterdataex:::::(hPrinter, pValueName, pType, pData, nSize, pcbNeeded)
getprinterdriver:::::(hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded)
getprinterdriverdirectory:::::(pName, pEnvironment, Level, pDriverDirectory, cbBuf, pcbNeeded)
getprintprocessordirectory:::::(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded)
getpriorityclass:::::(hProcess)
getpriorityclipboardformat:::::(lpPriorityList, nCount)
getprivateobjectsecurity:::::(ObjectDescriptor, SecurityInformation, ResultantDescriptor, DescriptorLength, ReturnLength)
getprivateprofileint:::::(lpApplicationName, lpKeyName, nDefault, lpFileName)
getprivateprofilesection:::::(lpAppName, lpReturnedString, nSize, lpFileName)
getprivateprofilesectionnames:::::(lpszReturnBuffer, nSize, lpFileName)
getprivateprofilestring:::::(lpApplicationName, lpKeyName, lpDefault, lpReturnedString, nSize, lpFileName)
getprivateprofilestruct:::::(lpApplicationName, lpKeyName, lpStruct, nSize, lpFileName)
getprocaddress:::::(hModule, lpProcName)
getprocessaffinitymask:::::(hProcess, lpProcessAffinityMask, lpSystemAffinityMask)
getprocessdefaultlayout:::::(pdwDefaultLayout)
getprocessheaps:::::(NumberOfHeaps, ProcessHeaps)
getprocesspriorityboost:::::(hProcess, pDisablePriorityBoost)
getprocessshutdownparameters:::::(lpdwLevel, lpdwFlags)
getprocesstimes:::::(hProcess, lpCreationTime, lpExitTime, lpKernelTime, lpUserTime)
getprocessversion:::::(hProcess)
getprocessworkingsetsize:::::(hProcess, lpMinimumWorkingSetSize, lpMaximumWorkingSetSize)
getprofileint:::::(lpAppName, lpKeyName, nDefault)
getprofilesection:::::(lpAppName, lpReturnedString, nSize)
getprofilestring:::::(lpAppName, lpKeyName, lpDefault, lpReturnedString, nSize)
getprop:::::(hWnd, lpString)
getprotobyname:::::(proto_name)
getprotobyname:::::(proto_name)
getprotobynumber:::::(proto)
getprotobynumber:::::(proto)
getpwrcapabilities:::::(pSystemPowerCapabilities)
getpwrdiskspindownrange:::::(RangeMax, RangeMin)
getqueuedcompletionstatus:::::(CompletionPort, lpNumberOfBytesTransferred, lpCompletionKey, lpOverlapped, dwMilliseconds)
getqueuestatus:::::(fuFlags)
getrasterizercaps:::::(lpraststat, cb)
getrawinputbuffer:::::(pData, pcbSize, cbSizeHeader)
getrawinputdata:::::(hRawInput, uiCommand, pData, pcbSize, cbSizeHeader)
getrawinputdeviceinfo:::::(hDevice, uiCommand, pData, pcbSize)
getrawinputdevicelist:::::(pRawInputDeviceList, puiNumDevices, cbSize)
getregiondata:::::(hRgn, dwCount, lpRgnData)
getregisteredrawinputdevices:::::(pRawInputDevices, puiNumDevices, cbSize)
getrgnbox:::::(hRgn, lpRect)
getrop2:::::(hdc)
getrttandhopcount:::::(DestIpAddress, HopCount, MaxHops, RTT)
getrvalue:::::(drgb)
getrvalue:::::(drgb)
getsavefilename:::::(lpofn)
getscrollbarinfo:::::(hwnd, idObject, psbi)
getscrollinfo:::::(hWnd, n, lpScrollInfo)
getscrollpos:::::(hWnd, nBar)
getscrollrange:::::(hWnd, nBar, lpMinPos, lpMaxPos)
getsecuritydescriptorcontrol:::::(pSecurityDescriptor, pControl, lpdwRevision)
getsecuritydescriptordacl:::::(pSecurityDescriptor, lpbDaclPresent, pDacl, lpbDaclDefaulted)
getsecuritydescriptorgroup:::::(pSecurityDescriptor, pGroup, lpbGroupDefaulted)
getsecuritydescriptorlength:::::(pSecurityDescriptor)
getsecuritydescriptorowner:::::(pSecurityDescriptor, pOwner, lpbOwnerDefaulted)
getsecuritydescriptorsacl:::::(pSecurityDescriptor, lpbSaclPresent, pSacl, lpbSaclDefaulted)
getsecurityinfo:::::( shandle, ObjectType, SecurityInfo, ppsidOwner, ppsidGroup, ppDacl, ppSacl, ppSecurityDescriptor)
getservbyname:::::(serv_name, proto)
getservbyname:::::(serv_name, proto)
getservbyport:::::(lPort, proto)
getservbyport:::::(lPort, proto)
getservicedisplayname:::::(hSCManager, lpServiceName, lpDisplayName, lpcchBuffer)
getservicekeyname:::::(hSCManager, lpDisplayName, lpServiceName, lpcchBuffer)
getshortpathname:::::(lpszLongPath, lpszShortPath, cchBuffer)
getsididentifierauthority:::::(dwFlags)
getsidlengthrequired:::::(nSubAuthorityCount)
getsidsubauthority:::::(dwFlags, nSubAuthority)
getsidsubauthoritycount:::::(pSid)
getsockname:::::(s, sname, namelen)
getsockname:::::(s, sname, namelen)
getsockopt:::::(s, level, optname, optval, optlen)
getsockopt:::::(s, level, optname, optval, optlen)
getstartupinfo:::::(lpStartupInfo)
getstdhandle:::::(nStdHandle)
getstockobject:::::(nIndex)
getstretchbltmode:::::(hdc)
getstringtypea:::::(lcid, dwInfoType, lpSrcStr, cchSrc, lpCharType)
getstringtypeex:::::(Locale, dwInfoType, lpSrcStr, cchSrc, lpCharType)
getstringtypew:::::(dwInfoType, lpSrcStr, cchSrc, lpCharType)
getsubmenu:::::(hMenu, nPos)
getsyscolor:::::(nIndex)
getsyscolorbrush:::::(nIndex)
getsysfilever:::::(Fname AS STRING) EXPORT AS CURRENCYX
getsystemdirectory:::::(lpBuffer, nSize)
getsysteminfo:::::(lpSystemInfo)
getsystemmenu:::::(hWnd, bRevert)
getsystemmetrics:::::(nIndex)
getsystempaletteentries:::::(hdc, wStartIndex, wNumEntries, lpPaletteEntries)
getsystempaletteuse:::::(hdc)
getsystempowerstatus:::::(lpSystemPowerStatus)
getsystemtime:::::(lpSystemTime)
getsystemtimeadjustment:::::(lpTimeAdjustment, lpTimeIncrement, lpTimeAdjustmentDisabled)
getsystemtimeasfiletime:::::(lpFileTime)
gettabbedtextextent:::::(hDC, lpString, nCount, nTabPositions, lpnTabStopPositions)
gettapeparameters:::::(hDevice, dwOperation, lpdwSize, lpTapeInformation)
gettapeposition:::::(hDevice, dwPositionType, lpdwPartition, lpdwOffsetLow, lpdwOffsetHigh)
gettapestatus:::::(hDevice)
gettcpstatistics:::::(pStats)
gettcptable:::::(pTcpTable, pdwSize, bOrder)
gettempfilename:::::(lpszPath, lpPrefixString, dwUnique, lpTempFileName)
gettemppath:::::(nBufferLength, lpBuffer)
gettextalign:::::(hdc)
gettextcharacterextra:::::(hdc)
gettextcharset:::::(hdc)
gettextcharsetinfo:::::(hdc, lpSig, dwFlags)
gettextcolor:::::(hdc)
gettextextentexpoint:::::(hdc, lpszStr, cchString, nMaxExtent, lpnFit, alpDx, lpSize)
gettextextentexpointi:::::(hdc, pgiIn, cgi, nMaxExtent, lpnFit, alpDx, lpSize)
gettextextentpoint:::::(hdc, lpszString, cbString, lpSize)
gettextextentpoint32:::::(hdc, lpsz, cbString, lpSize)
gettextextentpointi:::::(hdc, pgiIn, cgi, lpSize)
gettextface:::::(hdc, nCount, lpFacename)
gettextmetrics:::::(hdc, lpMetrics)
getthreadcontext:::::(hThread, lpContext)
getthreaddesktop:::::(dwThread)
getthreadpriority:::::(hThread)
getthreadpriorityboost:::::(hThread, pDisablePriorityBoost)
getthreadselectorentry:::::(hThread, dwSelector, lpSelectorEntry)
getthreadtimes:::::(hThread, lpCreationTime, lpExitTime, lpKernelTime, lpUserTime)
gettimeformat:::::(Locale, dwFlags, lpTime, lpFormat, lpTimeStr, cchTime)
gettimezoneinformation:::::(lpTimeZoneInformation)
gettitlebarinfo:::::(hwnd, pti)
gettokeninformation:::::(TokenHandle, TokenInformationClass, TokenInformation, TokenInformationLength, ReturnLength)
gettopwindow:::::(hWnd)
gettrusteeform:::::( pTrustee)
gettrusteename:::::( pTrustee)
gettrusteetype:::::( pTrustee)
getudpstatistics:::::(pStats)
getudptable:::::(pUdpTable, pdwSize, bOrder)
getunidirectionaladapterinfo:::::(pIPIfInfo, dwOutBufLen)
getupdaterect:::::(hWnd, lpRect, bErase)
getupdatergn:::::(hWnd, hRgn, fErase)
geturlcacheentryinfo:::::( lpszUrlName, lpCacheEntryInfo, lpdwCacheEntryInfoBufferSize)
geturlcacheentryinfoex:::::( lpszUrl, lpCacheEntryInfo, lpdwCacheEntryInfoBufSize, lpszReserved, lpdwReserved, lpReserved, dwFlags)
geturlcachegroupattribute:::::( gid, dwFlags, dwAttributes, lpGroupInfo, lpdwGroupInfo, lpReserved)
getusergeoid:::::(GeoClass)
getusername:::::(lpBuffer, nSize)
getusernameex:::::( NameFormat, lpNameBuffer, nSize)
getuserobjectinformation:::::(hObj, nIndex, pvInfo, nLength, lpnLengthNeeded)
getuserobjectsecurity:::::(hObj, pSIRequested, pSd, nLength, lpnLengthNeeded)
getversionex:::::(lpVersionInformation)
getviewportextex:::::(hdc, lpSize)
getviewportorgex:::::(hdc, lpPoint)
getvolumeinformation:::::(lpRootPathName, lpVolumeNameBuffer, nVolumeNameSize, lpVolumeSerialNumber, lpMaximumComponentLength, lpFileSystemFlags, lpFileSystemNameBuffer, nFileSystemNameSize)
getvolumenameforvolumemountpoint:::::(lpszVolumeMountPoint, lpszVolumeName, cchBufferLength)
getvolumepathname:::::(lpszFileName, lpszVolumePathName, cchBufferLength)
getvolumepathnamesforvolumename:::::(lpszVolumeName, lpszVolumePathNames, cchBufferLength, lpcchReturnLength)
getwindow:::::(hWnd, wCmd)
getwindowcontexthelpid:::::(hWnd)
getwindowdc:::::(hWnd)
getwindowextex:::::(hdc, lpSize)
getwindowinfo:::::(hwnd, pwi)
getwindowlong:::::(hWnd, nIndex)
getwindowmodulefilename:::::(hWnd, lpFileName, nSize)
getwindoworgex:::::(hdc, lpPoint)
getwindowplacement:::::(hWnd, lpwndpl)
getwindowrect:::::(hWnd, lpRect)
getwindowrgn:::::(hWnd, hRgn)
getwindowrgnbox:::::(hWnd, lprc)
getwindowsdirectory:::::(lpBuffer, nSize)
getwindowtext:::::(hWnd, lpString, cch)
getwindowtextlength:::::(hWnd)
getwindowthreadprocessid:::::(hWnd, lpdwProcessId)
getwindowword:::::(hWnd, nIndex)
getwinmetafilebits:::::(hemf, cbBuffer, lpbBuffer, fnMapMode, hdcRef)
getworldtransform:::::(hdc, lpXform)
getyvalue:::::(dwCMYK)
getyvalue:::::(dwCMYK)
global:::::variable[()] [, variable[()]] [, ...]
global:::::variable[()] [, variable[()]] [, ...] AS Type
globaladdatom:::::(lpString)
globalalloc:::::(wFlags, dwBytes)
globalcompact:::::(dwMinFree)
globaldeleteatom:::::(nAtom)
globalfindatom:::::(lpString)
globalfix:::::(hMem)
globalflags:::::(hMem)
globalfree:::::(hMem)
globalgetatomname:::::(nAtom, lpBuffer, nSize)
globalhandle:::::(pMem)
globallock:::::(hMem)
globalmemorystatus:::::(lpBuffer)
globalmemorystatusex:::::(lpBuffer)
globalrealloc:::::(hMem, dwBytes, uFlags)
globalsize:::::(hMem)
globalunfix:::::(hMem)
globalunlock:::::(hMem)
globalunwire:::::(hMem)
globalwire:::::(hMem)
gophercreatelocator:::::( lpszHost, nServerPost, lpszDisplayString, lpszSelectorString, dwGopherType, lpszLocator, lpdwBufferLength)
gopherfindfirstfile:::::( hConnect, lpszLocator, lpszSearchString, lpFindData, dwFlags, dwContext)
gophergetattribute:::::( hConnect, lpszLocator, lpszAttributeName, lpBuffer, dwBufferLength, lpdwCharactersReturned, lpfnEnumerator, dwContext)
gophergetlocatortype:::::( lpszLocator, lpdwGopherType)
gopheropenfile:::::( hConnect, lpszLocator, lpszView, dwFlags, dwContext)
gosub:::::{Label | line_number} [, {Label | line_number}] ...
gosub:::::{Label | linenumber}
goto:::::{Label | line_number} [, {Label | line_number}] ...
gradientfill:::::(hdc, pVertex, dwNumVertex, pMesh, dwNumMesh, dwMode)
graystring:::::(hDC, hBrush, lpOutputFunc, lpData, nCount, X, Y, nWidth, nHeight)
guid$:::::(guidtext$)
guid$:::::[()]
guidtxt$:::::(guid16$)
header_clearallfilters:::::(hwnd)
header_clearallfilters:::::(hwnd)
header_clearfilter:::::(hwnd, i)
header_clearfilter:::::(hwnd, i)
header_createdragimage:::::(hwnd, i)
header_createdragimage:::::(hwnd, i)
header_deleteitem:::::(hWndHD, i)
header_deleteitem:::::(hWndHD, i)
header_editfilter:::::(hwnd, i, fDiscardChanges)
header_editfilter:::::(hwnd, i, fDiscardChanges)
header_getbitmapmargin:::::(hwnd)
header_getbitmapmargin:::::(hwnd)
header_getimagelist:::::(hwnd)
header_getimagelist:::::(hwnd)
header_getitem:::::(hWndHD, i, phdi)
header_getitem:::::(hWndHD, i, phdi)
header_getitemcount:::::(hWndHD)
header_getitemcount:::::(hWndHD)
header_getitemrect:::::(hwnd, iItem, lprc)
header_getitemrect:::::(hwnd, iItem, lprc)
header_getorderarray:::::(hwnd, iCount, lpi)
header_getorderarray:::::(hwnd, iCount, lpi)
header_getunicodeformat:::::(hwnd)
header_getunicodeformat:::::(hwnd)
header_insertitem:::::(hWndHD, i, phdi)
header_insertitem:::::(hWndHD, i, phdi)
header_layout:::::(hWndHD, playout)
header_layout:::::(hWndHD, playout)
header_ordertoindex:::::(hwnd, i)
header_ordertoindex:::::(hwnd, i)
header_setbitmapmargin:::::(hwnd, iWidth)
header_setbitmapmargin:::::(hwnd, iWidth)
header_setfilterchangetimeout:::::(hwnd, i)
header_setfilterchangetimeout:::::(hwnd, i)
header_sethotdivider:::::(hwnd, fPos, dw)
header_sethotdivider:::::(hwnd, fPos, dw)
header_setimagelist:::::(hwnd, himl)
header_setimagelist:::::(hwnd, himl)
header_setitem:::::(hWndHD, i, phdi)
header_setitem:::::(hWndHD, i, phdi)
header_setorderarray:::::(hwnd, iCount, lpi)
header_setorderarray:::::(hwnd, iCount, lpi)
header_setunicodeformat:::::(hwnd, fUnicode)
header_setunicodeformat:::::(hwnd, fUnicode)
heap32first:::::(lphe, th32ProcessID, th32HeapID)
heap32listfirst:::::(hSnapshot, lphl)
heap32listnext:::::(hSnapshot, lphl)
heap32next:::::(lphe)
heapalloc:::::(hHeap, dwFlags, dwBytes)
heapcompact:::::(hHeap, dwFlags)
heapcreate:::::(flOptions, dwInitialSize, dwMaximumSize)
heapdestroy:::::(hHeap)
heapfree:::::(hHeap, dwFlags, lpMem)
heaplock:::::(hHeap)
heaprealloc:::::(hHeap, dwFlags, lpMem, dwBytes)
heapsize:::::(hHeap, dwFlags, lpMem)
heapunlock:::::(hHeap)
heapvalidate:::::(hHeap, dwFlags, lpMem)
hex$:::::(numeric_expression [, digits])
hi:::::(Type, value)
hibyt:::::(sixteenbitvalue)
hidecaret:::::(hWnd)
hiint:::::(thirtytwobitvalue)
hilitemenuitem:::::(hWnd, hMenu, dwIDHiliteItem, dwHilite)
hiwrd:::::(thirtytwobitvalue)
hread:::::(hFile, lpBuffer, lBytes)
hresult_code:::::(hr)
hresult_code:::::(hr)
hresult_facility:::::(hr)
hresult_facility:::::(hr)
hresult_from_nt:::::(x)
hresult_from_nt:::::(x)
hresult_from_setupapi:::::(x)
hresult_from_setupapi:::::(x)
hresult_from_win32:::::(x)
hresult_from_win32:::::(x)
hresult_severity:::::(nStatus)
hresult_severity:::::(hr)
htmlhelp:::::(hwndCaller, pszFile, uCommand, dwData)
htonl:::::(hostlong)
htonl:::::(hostlong)
htons:::::(hostshort)
htons:::::(hostshort)
httpaddrequestheaders:::::( hRequest, lpszHeaders, dwHeadersLength, dwModifiers)
httpendrequest:::::( hRequest, lpBuffersOut, dwFlags, dwContext)
httpopenrequest:::::( hConnect, lpszVerb, lpszObjectName, lpszVersion, lpszReferrer, lplpszAcceptTypes, dwFlags, dwContext)
httpqueryinfo:::::( hRequest, dwInfoLevel, lpBuffer, lpdwBufferLength, lpdwIndex)
httpsendrequest:::::( hRequest, lpszHeaders, dwHeadersLength, lpOptional, dwOptionalLength)
httpsendrequestex:::::( hRequest, lpBuffersIn, lpBuffersOut, dwFlags, dwContext)
hwrite:::::(hFile, lpBuffer, lBytes)
i_netlogoncontrol:::::( servername, FunctionCode, QueryLevel, Buffer)
i_netlogoncontrol2:::::( ServerName, FunctionCode, QueryLevel, pData, Buffer)
icmpclosehandle:::::(IcmpHandle)
icmpsendecho:::::(IcmpHandle, DestinationAddress, RequestData, RequestSize, RequestOptions, ReplyBuffer, ReplySize, Tymeout)
if:::::integer_expression Then
iif$:::::(num_expression, truepart$, falsepart$)
iif&:::::(num_expression, truepart&, falsepart&)
iif:::::(num_expression, truepart, falsepart)
imagelist_add:::::(himl, hbmImage, hbmMask)
imagelist_addicon:::::(hIml, hIcon)
imagelist_addmasked:::::(himl, hbmImage, crMask)
imagelist_begindrag:::::(himlTrack, iTrack, dxHotSpot, dyHotSpot)
imagelist_copy:::::(himlDst, iDst, himlSrc, iSrc, uFlags)
imagelist_create:::::(cx, cy, flags, cInitial, cGrow)
imagelist_destroy:::::(himl)
imagelist_dragenter:::::(hWndLock, x, y)
imagelist_dragleave:::::(hWndLock)
imagelist_dragmove:::::(x, y)
imagelist_dragshownolock:::::(fShow)
imagelist_draw:::::(himl, i, hdcDst, x, y, fStyle)
imagelist_drawex:::::(himl, i, hdcDst, x, y, dx, dy, rgbBk, rgbFg, fStyle)
imagelist_drawindirect:::::(pimldp)
imagelist_duplicate:::::(himl)
imagelist_extracticon:::::(dhI, hIml, i)
imagelist_getbkcolor:::::(himl)
imagelist_getdragimage:::::(ppt, pptHotSpot)
imagelist_geticon:::::(himl, i, flags)
imagelist_geticonsize:::::(himl, cx, cy)
imagelist_getimagecount:::::(himl)
imagelist_getimageinfo:::::(himl, i, pImageInfo)
imagelist_loadbitmap:::::(dhI, lpBmp, cx, cGrow, crMask)
imagelist_loadimage:::::(dhi, lpBmp, cx, cGrow, crMask, uTypw, uFlags)
imagelist_merge:::::(himl1, i1, himl2, i2, dx, dy)
imagelist_read:::::(pstm)
imagelist_readex:::::(dwFlags, pstm, riid, ppv)
imagelist_remove:::::(himl, i)
imagelist_removeall:::::(hIml)
imagelist_replace:::::(himl, i, hbmImage, hbmMask)
imagelist_replaceicon:::::(himl, i, hIcon)
imagelist_setbkcolor:::::(himl, clrBk)
imagelist_setdragcursorimage:::::(himlDrag, iDrag, dxHotSpot, dyHotSpot)
imagelist_seticonsize:::::(himl, cx, cy)
imagelist_setimagecount:::::(himl, uNewCount)
imagelist_setoverlayimage:::::(himl, iImage, iOverlay)
imagelist_write:::::(himl, pstm)
imagelist_writeex:::::(himl, dwFlags, pstm)
immassociatecontext:::::(hwnd, himc)
immassociatecontextex:::::(hwnd, himc, dwFlags)
immconfigureime:::::(hkl, hwnd, dwMode, lpData)
immdestroycontext:::::(himc)
immdisableime:::::(idThread)
immdisabletextframeservice:::::(idThread)
immenuminputcontext:::::(idThread, lpfn, lParam)
immenumregisterword:::::(hkl, RegisterWordEnumProc, lpszReading, dwStyle, lpszRegister, lpData)
immescape:::::(hkl, himc, uEscape, lpData)
immgetcandidatelist:::::(himc, deIndex, lpCandidateList, dwBufLen)
immgetcandidatelistcount:::::(himc, lpdwListCount)
immgetcandidatewindow:::::(himc, dwIndex, lpCandidateForm)
immgetcompositionfont:::::(himc, lpLogFont)
immgetcompositionstring:::::(himc, dwIndex, lpv, dwBufLen)
immgetcompositionwindow:::::(himc, lpCompositionForm)
immgetcontext:::::(hwnd)
immgetconversionlist:::::(hkl, himc, lpSrc, lpCandidateList, dwBufLen, uFlag)
immgetconversionstatus:::::(himc, lpdwConversion, lpdwfSentence)
immgetdefaultimewnd:::::(hwnd)
immgetdescription:::::(hkl, lpsz, uBufLen)
immgetguideline:::::(himc, dwIndex, lpStr, dwBufLen)
immgetimefilename:::::(hkl, lpStr, uBufLen)
immgetimemenuitems:::::(hIMC, dwFlags, dwType, lpImeParentMenu, lpImeMenu, dwSize)
immgetopenstatus:::::(himc)
immgetproperty:::::(hkl, dwIndex)
immgetregisterwordstyle:::::(hkl, nItem, lpStyleBuf)
immgetstatuswindowpos:::::(himc, lpPoint)
immgetvirtualkey:::::(hwnd)
imminstallime:::::(lpszIMEFileName, lpszLayoutText)
immisime:::::(hkl)
immisuimessage:::::(hwnd, uMsg, wParam, lParam)
immnotifyime:::::(himc, dwAction, dwIndex, dwValue)
immregisterword:::::(hkl, lpszReading, dwStyle, lpszRegister)
immreleasecontext:::::(hwnd, himc)
immsetcandidatewindow:::::(himc, lpCandidateForm)
immsetcompositionfont:::::(himc, lpLogFont)
immsetcompositionstring:::::(himc, dwIndex, lpComp, dwCompLen, lpRead, dwReadLen)
immsetcompositionwindow:::::(himc, lpCompositionForm)
immsetconversionstatus:::::(himc, dwfConversion, dwfSentence)
immsetopenstatus:::::(himc, fOpen)
immsetstatuswindowpos:::::(himc, lpPoint)
immsimulatehotkey:::::(hwnd, dwHotKeyID)
immunregisterword:::::(hkl, lpszReading, dwStyle, lpszUnregister)
impersonateanonymoustoken:::::(hToken)
impersonateddeclientwindow:::::(hWndClient, hWndServer)
impersonateloggedonuser:::::(hToken)
impersonatenamedpipeclient:::::(hNamedPipe)
impersonateself:::::(ImpersonationLevel)
in_classa:::::(i)
in_classa:::::(i)
in_classb:::::(i)
in_classb:::::(i)
in_classc:::::(i)
in_classc:::::(i)
in_classc:::::(i)
in_classd:::::(i)
in_multicast:::::(i)
incr:::::variable
indextooverlaymask:::::(i)
indextostateimagemask:::::(i)
indextostateimagemask:::::(i)
indextostateimagemask:::::(i)
indextostateimagemask:::::(i)
inet_addr:::::(cp)
inet_addr:::::(cp)
inet_ntoa:::::(inn)
inet_ntoa:::::(inn)
inflaterect:::::(lpRect, x, y)
initatomtable:::::(nSize)
initcomctl32:::::([iccClasses AS DWORD]) EXPORT AS CURRENCYX
initcomctl32:::::(OPTIONAL iccClasses AS DWORD) EXPORT AS CURRENCYX
initcommoncontrolsex:::::(icc)
initializeacl:::::(pAcl, nAclLength, dwAclRevision)
initializecriticalsection:::::(lpCriticalSection)
initializecriticalsectionandspincount:::::(lpCriticalSection, dwSpinCount)
initializeflatsb:::::(hWnd)
initializesecuritydescriptor:::::(pSecurityDescriptor, dwRevision)
initializesid:::::(pSid, pIdentifierAuthority, nSubAuthorityCount)
initiatesystemshutdown:::::(lpMachineName, lpMessage, dwTimeout, bForceAppsClosed, bRebootAfterShutdown)
initiatesystemshutdownex:::::(lpMachineName, lpMessage, dwTimeout, bForceAppsClosed, bRebootAfterShutdown, dwReason)
initmuilanguage:::::(uiLang)
initpreviewbuf:::::(hDlg)
initpreviewdlg:::::(pd)
input:::::#filenum&, variable_list
inputbox$:::::(prompt$ [[, title$], default$] [, xpos%, ypos%])
insendmessageex:::::(lpReserved)
insertmenu:::::(hMenu, dwPosition, dwFlags, dwIDNewItem, lpNewItem)
insertmenuitem:::::(hMenu, uItem, fByPosition, lpcMenuItemInfo)
instance:::::variable[()] [, variable[()]] [, ...] AS Type
instance:::::variable[()] [AS Type] [, variable[()]]
instr:::::([n&,] MainString, [ANY] MatchString)
int:::::(numeric_expression)
interface:::::IDBIND interfacename
interface:::::interfacename [$GUID] [AS EVENT] [AS HIDDEN]
interlockeddecrement:::::(lpAddend)
interlockedexchange:::::(xTarget, xValue)
interlockedincrement:::::(lpAddend)
internetattemptconnect:::::( dwReserved)
internetautodial:::::( dwFlags, dwReserved)
internetautodialhangup:::::( dwReserved)
internetautoproxyurl:::::( lpszAutoProxyUrl, dwAutoProxyUrlLength, dwDetectFlags)
internetcanonicalizeurl:::::( lpszUrl, lpszBuffer, lpdwBufferLength, dwFlags)
internetcheckconnection:::::( lpszUrl, dwFlags, dwReserved)
internetclosehandle:::::( hInternet)
internetcombineurl:::::( lpszBaseUrl, lpszRelativeUrl, lpszBuffer, lpdwBufferLength, dwFlags)
internetconfirmzonecrossing:::::( hWnd, szUrlPrev, szUrlNew, bPost)
internetconnect:::::( hInternet, lpszServerName, nServerPort, lpszUserName, lpszPassword, dwService, dwFlags, dwContext)
internetconnecturl:::::(hInternet, lpszUrl, dwFlags, dwContext)
internetcrackurl:::::( lpszUrl, dwUrlLength, dwFlags, lpUrlComponents)
internetcreateurl:::::( lpUrlComponents, dwFlags, lpszUrl, lpdwUrlLength)
internetdial:::::( hwndParent, lpszConnectoid, dwFlags, lpdwConnection, dwReserved)
internetenumpersitecookiedecision:::::( pszSiteName, pcSiteNameSize, pdwDecision, dwIndex)
interneterrordlg:::::( hWnd, hRequest, dwError, dwFlags, lppvData)
internetfindnextfile:::::( hFind, lpvFindData)
internetgetconnectedstate:::::( lpdwFlags, dwReserved)
internetgetconnectedstateex:::::( lpdwFlags, lpszConnectionName, dwNameLen, dwReserved)
internetgetcookie:::::( lpszUrl, lpszCookieName, lpCookieData, lpdwSize)
internetgetcookieex:::::( lpszUrl, lpszCookieName, lpCookieData, pcchCookieData, dwFlags, lpReserved)
internetgetlastresponseinfo:::::( lpdwError, lpszBuffer, lpdwBufferLength)
internetgetpersitecookiedecision:::::( pResult)
internetgoonline:::::( lpszURL, hwndParent, dwFlags)
internethangup:::::( dwConnection, dwReserved)
internetinitializeautoproxydll:::::( dwReserved)
internetlockrequestfile:::::( hInternet, lphLockRequestInfo)
internetopen:::::( lpszAgent, dwAccessType, lpszProxy, lpszProxyBypass, dwFlags)
internetopenurl:::::( hInternet, lpszUrl, lpszHeaders, dwHeadersLength, dwFlags, dwContext)
internetquerydataavailable:::::( hFile, lpdwNumberOfBytesAvailable, dwFlags, dwContext)
internetqueryoption:::::( hInternet, dwOption, lpBuffer, lpdwBufferLength)
internetreadfile:::::( hFile, lpBuffer, dwNumberOfBytesToRead, lpdwNumberOfBytesRead)
internetreadfileex:::::( hFile, lpBuffersOut, dwFlags, dwContext)
internetsetcookie:::::( lpszUrl, lpszCookieName, lpszCookieData)
internetsetcookieex:::::( lpszUrl, lpszCookieName, lpszCookieData, dwFlags, dwReserved)
internetsetdialstate:::::( lpszConnectoid, dwState, dwReserved)
internetsetfilepointer:::::( hFile, lDistanceToMove, pReserved, dwMoveMethod, dwContext)
internetsetoption:::::( hInternet, dwOption, lpBuffer, dwBufferLength)
internetsetoptionex:::::( hInternet, dwOption, lpBuffer, dwBufferLength, dwFlags)
internetsetpersitecookiedecision:::::( pszHostName, dwDecision)
internetsetstatuscallback:::::( hInternet, lpfnInternetCallback)
internettimefromsystemtime:::::( pst, dwRFC,lpszTime, cbTime)
internettimetosystemtime:::::( lpszTime, pst, dwReserved)
internetunlockrequestfile:::::( hLockRequestInfo)
internetwritefile:::::( hFile, lpBuffer, dwNumberOfBytesToWrite, lpdwNumberOfBytesWritten)
intersectcliprect:::::(hdc, X1, Y1, X2, Y2)
intersectrect:::::(lpDestRect, lpSrc1Rect, lpSrc2Rect)
invalidaterect:::::(hWnd, lpRect, bErase)
invalidatergn:::::(hWnd, hRgn, bErase)
invertrect:::::(hDC, lpRect)
invertrgn:::::(hdc, hRgn)
io:::::(x, y)
ioctlsocket:::::(s, cmd, argp)
ioctlsocket:::::(s, cmd, argp)
ior:::::(x, y, t)
iow:::::(x, y, t)
ipreleaseaddress:::::(AdapterInfo)
iprenewaddress:::::(AdapterInfo)
iptostring:::::(ip)
is_error:::::(nStatus)
is_error:::::(nStatus)
is_gopher_ask:::::(nType)
is_gopher_ask:::::(nType)
is_gopher_backup_server:::::(nType)
is_gopher_backup_server:::::(nType)
is_gopher_directory:::::(nType)
is_gopher_directory:::::(nType)
is_gopher_error:::::(nType)
is_gopher_error:::::(nType)
is_gopher_file:::::(nType)
is_gopher_file:::::(nType)
is_gopher_index_server:::::(nType)
is_gopher_index_server:::::(nType)
is_gopher_phone_server:::::(nType)
is_gopher_phone_server:::::(nType)
is_gopher_plus:::::(nType)
is_gopher_plus:::::(nType)
is_gopher_telnet_session:::::(nType)
is_gopher_telnet_session:::::(nType)
is_gopher_tn3280_session:::::(nType)
is_gopher_tn3280_session:::::(nType)
is_gopher_type_known:::::(nType)
is_gopher_type_known:::::(nType)
isadminoverrideactive:::::(pAdministratorPowerPolicy)
isbadcodeptr:::::(lpfn)
isbadhugereadptr:::::(lp, ucb)
isbadhugewriteptr:::::(lp, ucb)
isbadreadptr:::::(lp, ucb)
isbadstringptr:::::(lpsz, ucchMax)
isbadwriteptr:::::(lp, ucb)
ischaralpha:::::(cChar)
ischaralphanumeric:::::(cChar)
ischarlower:::::(cChar)
ischarupper:::::(cChar)
ischild:::::(hwndParent, hWnd)
isclipboardformatavailable:::::(dwFormat)
iscontainerpartition:::::(PartitionType)
isdbcsleadbyte:::::(bTestChar)
isdbcsleadbyteex:::::(CodePag, bTestChar)
isdestinationreachable:::::(lpszDestination, lpQOCInfo)
isdialogmessage:::::(hDlg, lpMsg)
isdlgbuttonchecked:::::(hDlg, nIDButton)
isfalse:::::expr
isfile:::::(FileName$)
isftpartition:::::(PartitionType)
isguithread:::::(bConvert)
isiconic:::::(hWnd)
isinterface:::::(ObjectVar, InterfaceName)
ismenu:::::(hMenu)
ismissing:::::(ParamVar)
isnetworkalive:::::(lpdwFlags)
isnothing:::::(objectvar)
isobject:::::(objectvar)
isrecognizedpartition:::::(PartitionType)
isrectempty:::::(lpRect)
istextunicode:::::(lpBuffer, cb, lpi)
istokenrestricted:::::(hToken)
istokenuntrusted:::::(hToken)
istrue:::::expr
isvalidacl:::::(pAcl)
isvalidcodepage:::::(CodePag)
isvaliddevmode:::::(pDevmode, DevmodeSize)
isvaliddevmode:::::(pDevmode, DevmodeSize)
isvalidlanguagegroup:::::(LanguageGroup, dwFlags)
isvalidlocale:::::(Locale, dwFlags)
isvalidsecuritydescriptor:::::(pSecurityDescriptor)
isvalidsid:::::(dwFlags)
iswin:::::(hDlg&)
iswin:::::(hParentDlg&, Ident&)
iswindow:::::(hWnd)
iswindowenabled:::::(hWnd)
iswindowunicode:::::(hWnd)
iswindowvisible:::::(hWnd)
iswineventhookinstalled:::::(dEvent)
iszoomed:::::(hWnd)
iterate:::::[Do | Loop | For]
iterate:::::Loop
join$:::::(Array(), {delim$ | BINARY})
joygetdevcaps:::::(ID, lpCaps, uSize)
joygetpos:::::(uJoyId, pji)
joygetposex:::::(uJoyId, pji)
joygetthreshold:::::(ID, lpuThreshold)
joyreleasecapture:::::(ID)
joysetcapture:::::(hWnd, uId, uPeriod, bChanged)
joysetthreshold:::::(ID, uThreshold)
kerb_is_ms_principal:::::(x)
kerb_is_ms_principal:::::(x)
keybd_event:::::(bVk, bScan, dwFlags, dwExtraInfo)
kill:::::filespec
killtimer:::::(hWnd, nIDEvent)
lbitemfrompt:::::(hLB, x, y, bAutoScroll)
lbound:::::(Array [(dimension)])
lbound:::::(Array, dimension)
lcase$:::::(string_expression [,ANSI | OEM])
lclose:::::(hFile)
lcmapstring:::::(Locale, dwMapFlags, lpSrcStr, cchSrc, lpDestStr, cchDest)
lcreat:::::(lpPathName, iAttribute)
leavecriticalsection:::::(lpCriticalSection)
left$:::::(string_expression, n&)
len:::::(target)
linedda:::::(n1, n2, n3, n4, lpLineDDAProc, lParam)
lineto:::::(hdc, x, y)
listbox_addfile:::::(hListBox, FILENAME)
listbox_addstring:::::(hListBox, TEXT)
listbox_deletestring:::::(hListBox, Index)
listbox_deletestring:::::(hListBox, Index)
listbox_dir:::::(hListBox, Attr, FileSpec)
listbox_findstring:::::(hListBox, indexStart, szCtStr)
listbox_findstringexact:::::(hListBox, indexStart, szCtStr)
listbox_getanchorindex:::::(hListBox)
listbox_getanchorindex:::::(hListBox)
listbox_getcaretindex:::::(hListBox)
listbox_getcaretindex:::::(hListBox)
listbox_getcount:::::(hListBox)
listbox_getcount:::::(hListBox)
listbox_getcursel:::::(hListBox)
listbox_getcursel:::::(hListBox)
listbox_gethorizontalextent:::::(hListBox)
listbox_gethorizontalextent:::::(hListBox)
listbox_getitemdata:::::(hListBox, index)
listbox_getitemdata:::::(hListBox, index)
listbox_getlocale:::::(hListBox)
listbox_getlocale:::::(hListBox)
listbox_getsel:::::(hListBox, Index)
listbox_getsel:::::(hListBox, Index)
listbox_getselcount:::::(hListBox)
listbox_getselcount:::::(hListBox)
listbox_getselitems:::::(hListBox, items, FirstItem)
listbox_getselitems:::::(hListBox, items, FirstItem)
listbox_gettext:::::(hListBox, Index)
listbox_gettopindex:::::(hListBox)
listbox_gettopindex:::::(hListBox)
listbox_insertstring:::::(hListBox, Index, TEXT)
listbox_resetcontent:::::(hListBox)
listbox_selectstring:::::(hListBox, Start, TEXT)
listbox_setanchorindex:::::(hListBox, index)
listbox_setanchorindex:::::(hListBox, index)
listbox_setcursel:::::(hListBox, Index)
listbox_setcursel:::::(hListBox, Index)
listbox_sethorizontalextent:::::(hListBox, cxExtent)
listbox_setlocale:::::(hListBox, wLocaleID)
listbox_setlocale:::::(hListBox, wLocaleID)
listbox_setsel:::::(hListBox, fSelect, index)
listbox_setsel:::::(hListBox, fSelect, index)
listbox_settabstops:::::(hListBox, TabStops, TabStopsCnt)
listbox_settopindex:::::(hListBox, index)
listbox_settopindex:::::(hListBox, index)
listen:::::(s, backlog)
listen:::::(s, backlog)
listview_approximateviewrect:::::(hwnd, iWidth, iHeight, iCount)
listview_approximateviewrect:::::(hwnd, iWidth, iHeight, iCount)
listview_arrange:::::(hWndLV, CODE)
listview_arrange:::::(hWndLV, CODE)
listview_canceleditlabel:::::(hwnd)
listview_createdragimage:::::(hWnd, i, lpptUpLeft)
listview_createdragimage:::::(hWnd, i, lpptUpLeft)
listview_deleteallitems:::::(hWnd)
listview_deleteallitems:::::(hWnd)
listview_deletecolumn:::::(hWnd, iCol)
listview_deletecolumn:::::(hWnd, iCol)
listview_deleteitem:::::(hWnd, i)
listview_deleteitem:::::(hWnd, i)
listview_editlabel:::::(hWndLV, i)
listview_editlabel:::::(hWndLV, i)
listview_enablegroupview:::::(hwnd, fEnable)
listview_enablegroupview:::::(hwnd, fEnable)
listview_ensurevisible:::::(hWndLV, i, fPartialOK)
listview_ensurevisible:::::(hWndLV, i, fPartialOk)
listview_finditem:::::(hWnd, iStart, plvfi)
listview_finditem:::::(hWnd, iStart, plvfi)
listview_getbkcolor:::::(hWnd)
listview_getbkcolor:::::(hWnd)
listview_getbkimage:::::(hwnd, plvbki)
listview_getbkimage:::::(hwnd, plvbki)
listview_getcallbackmask:::::(hWnd)
listview_getcallbackmask:::::(hWnd)
listview_getcheckstate:::::(hwndLV, i)
listview_getcheckstate:::::(hwndLV, i)
listview_getcolumn:::::(hWnd, iCol, pcol)
listview_getcolumn:::::(hWnd, iCol, pcol)
listview_getcolumnorderarray:::::(hwnd, iCount, pii)
listview_getcolumnorderarray:::::(hwnd, iCount, pii)
listview_getcolumnwidth:::::(hWnd, iCol)
listview_getcolumnwidth:::::(hWnd, iCol)
listview_getcountperpage:::::(hWndLV)
listview_getcountperpage:::::(hWndLV)
listview_geteditcontrol:::::(hWndLV)
listview_geteditcontrol:::::(hWndLV)
listview_getextendedlistviewstyle:::::(hwndLV)
listview_getgroupinfo:::::(hwnd, iGroupId, pgrp)
listview_getgroupinfo:::::(hwnd, iGroupId, pgrp)
listview_getgroupmetrics:::::(hwnd, pGroupMetrics)
listview_getheader:::::(hwnd)
listview_getheader:::::(hwnd)
listview_gethotcursor:::::(hwnd)
listview_gethotcursor:::::(hwnd)
listview_gethotitem:::::(hwnd)
listview_gethotitem:::::(hwnd)
listview_gethovertime:::::(hwndLV)
listview_gethovertime:::::(hwndLV)
listview_getimagelist:::::(hWnd, iImageList)
listview_getimagelist:::::(hWnd, iImageList)
listview_getinsertmark:::::(hwnd, lvim)
listview_getinsertmark:::::(hwnd, lvim)
listview_getinsertmarkcolor:::::(hwnd)
listview_getinsertmarkcolor:::::(hwnd)
listview_getinsertmarkrect:::::(hwnd, rc)
listview_getinsertmarkrect:::::(hwnd, rc)
listview_getisearchstring:::::(hWndLV, lpsz)
listview_getitem:::::(hWnd, pitem)
listview_getitem:::::(hWnd, pitem)
listview_getitemcount:::::(hWnd)
listview_getitemcount:::::(hWnd)
listview_getitemposition:::::(hWndLV, i, pt)
listview_getitemposition:::::(hWndLV, i, pt)
listview_getitemrect:::::(hWnd, i, prc, CODE)
listview_getitemrect:::::(hwnd, i, prc, CODE)
listview_getitemspacing:::::(hWndLV, fSmall)
listview_getitemspacing:::::(hWndLV, fSmall)
listview_getitemstate:::::(hWndLV, i, mask)
listview_getitemstate:::::(hWndLV, i, mask)
listview_getnextitem:::::(hWnd, i, flags)
listview_getnextitem:::::(hWnd, i, flags)
listview_getnumberofworkareas:::::(hwnd, pnWorkAreas)
listview_getnumberofworkareas:::::(hwnd, pnWorkAreas)
listview_getorigin:::::(hWndLV, pt)
listview_getorigin:::::(hWndLV, pt)
listview_getoutlinecolor:::::(hwnd)
listview_getoutlinecolor:::::(hwnd)
listview_getselectedcolumn:::::(hwnd)
listview_getselectedcolumn:::::(hwnd)
listview_getselectedcount:::::(hWndLV)
listview_getselectedcount:::::(hWndLV)
listview_getselectionmark:::::(hwnd)
listview_getselectionmark:::::(hwnd)
listview_getstringwidth:::::(hWndLV, psz)
listview_getstringwidth:::::(hWndLV, psz)
listview_getsubitemrect:::::(hwnd, iItem, iSubItem, CODE, prc)
listview_getsubitemrect:::::(hwnd, iItem, iSubItem, CODE, prc)
listview_getsubitemrect:::::(hwnd, iItem, iSubItem, CODE, prc)
listview_gettextbkcolor:::::(hWnd)
listview_gettextbkcolor:::::(hWnd)
listview_gettextcolor:::::(hWnd)
listview_gettextcolor:::::(hWnd)
listview_gettileinfo:::::(hwnd, pti)
listview_gettileviewinfo:::::(hwnd, ptvi)
listview_gettooltips:::::(hwndLV)
listview_gettooltips:::::(hwndLV)
listview_gettopindex:::::(hWndLV)
listview_gettopindex:::::(hWndLV)
listview_getunicodeformat:::::(hwnd)
listview_getunicodeformat:::::(hwnd)
listview_getview:::::(hwnd)
listview_getview:::::(hwnd)
listview_getviewrect:::::(hWnd, prc)
listview_getviewrect:::::(hWnd, prc)
listview_getworkareas:::::(hwnd, nWorkAreas, prc)
listview_getworkareas:::::(hwnd, nWorkAreas, prc)
listview_hasgroup:::::(hwnd, iGroupId)
listview_hasgroup:::::(hwnd, iGroupId)
listview_hittest:::::(hWndLV, pinfo)
listview_hittest:::::(hWndLV, pinfo)
listview_insertcolumn:::::(hWnd, iCol, pcol)
listview_insertcolumn:::::(hWnd, iCol, pcol)
listview_insertgroup:::::(hwnd, index, pgrp)
listview_insertgroup:::::(hwnd, index, pgrp)
listview_insertgroupsorted:::::(hwnd, structInsert)
listview_insertitem:::::(hWnd, pitem)
listview_insertitem:::::(hWnd, pitem)
listview_insertmarkhittest:::::(hwnd, ppoint, lvim)
listview_insertmarkhittest:::::(hwnd, ppoint, lvim)
listview_isgroupviewenabled:::::(hwnd)
listview_isgroupviewenabled:::::(hwnd)
listview_mapidtoindex:::::(hwnd, ID)
listview_mapidtoindex:::::(hwnd, ID)
listview_mapindextoid:::::(hwnd, index)
listview_mapindextoid:::::(hwnd, index)
listview_movegroup:::::(hwnd, iGroupId, toIndex)
listview_moveitemtogroup:::::(hwnd, idItemFrom, idGroupTo)
listview_redrawitems:::::(hWndLV, iFirst, iLast)
listview_redrawitems:::::(hWndLV, iFirst, iLast)
listview_removeallgroups:::::(hwnd)
listview_removegroup:::::(hwnd, iGroupId)
listview_removegroup:::::(hwnd, iGroupId)
listview_scroll:::::(hWndLV, dx, dy)
listview_scroll:::::(hWndLV, dx, dy)
listview_setbkcolor:::::(hWnd, clrBk)
listview_setbkcolor:::::(hwnd, clrBk)
listview_setbkimage:::::(hwnd, plvbki)
listview_setbkimage:::::(hwnd, plvbki)
listview_setcallbackmask:::::(hWnd, mask)
listview_setcallbackmask:::::(hWnd, mask)
listview_setcheckstate:::::(hWndLV, i, fCheck)
listview_setcolumn:::::(hWnd, iCol, pcol)
listview_setcolumn:::::(hWnd, iCol, pcol)
listview_setcolumnorderarray:::::(hwnd, iCount, pii)
listview_setcolumnorderarray:::::(hwnd, iCount, pii)
listview_setcolumnwidth:::::(hWnd, iCol, cx)
listview_setcolumnwidth:::::(hWnd, iCol, cx)
listview_setextendedlistviewstyle:::::(hwndLV, dw)
listview_setextendedlistviewstyle:::::(hwndLV, dw)
listview_setextendedlistviewstyleex:::::(hwndLV, dwMask, dw)
listview_setextendedlistviewstyleex:::::(hwndLV, dwMask, dw)
listview_setgroupinfo:::::(hwnd, iGroupId, pgrp)
listview_setgroupinfo:::::(hwnd, iGroupId, pgrp)
listview_setgroupmetrics:::::(hwnd, pGroupMetrics)
listview_sethotcursor:::::(hwnd, hcur)
listview_sethotcursor:::::(hwnd, hcur)
listview_sethotitem:::::(hwnd, i)
listview_sethotitem:::::(hwnd, i)
listview_sethovertime:::::(hwndLV, dwHoverTimeMs)
listview_sethovertime:::::(hwndLV, dwHoverTimeMs)
listview_seticonspacing:::::(hwndLV, cx, cy)
listview_seticonspacing:::::(hwndLV, cx, cy)
listview_setimagelist:::::(hWnd, himl, iImageList)
listview_setimagelist:::::(hWnd, himl, iImageList)
listview_setinfotip:::::(hwndLV, plvInfoTip)
listview_setinfotip:::::(hwndLV, plvInfoTip)
listview_setinsertmark:::::(hwnd, lvim)
listview_setinsertmark:::::(hwnd, lvim)
listview_setinsertmarkcolor:::::(hwnd, colr)
listview_setinsertmarkcolor:::::(hwnd, colr)
listview_setitem:::::(hWnd, pitem)
listview_setitem:::::(hWnd, pitem)
listview_setitemcount:::::(hwndLV, cItems)
listview_setitemcountex:::::(hwndLV, cItems, dwFlags)
listview_setitemposition:::::(hWndLV, i, x, y)
listview_setitemposition:::::(hWndLV, i, x, y)
listview_setitemposition32:::::(hWndLV, i, x, y)
listview_setitemstate:::::(hWndLV, i, nData, mask)
listview_setoutlinecolor:::::(hwnd, colr)
listview_setoutlinecolor:::::(hwnd, colr)
listview_setselectedcolumn:::::(hwnd, iCol)
listview_setselectionmark:::::(hwnd, i)
listview_setselectionmark:::::(hwnd, i)
listview_settextbkcolor:::::(hWnd, clrTextBk)
listview_settextbkcolor:::::(hWnd, clrTextBk)
listview_settextcolor:::::(hWnd, clrText)
listview_settextcolor:::::(hWnd, clrText)
listview_settileinfo:::::(hwnd, pti)
listview_settileinfo:::::(hwnd, pti)
listview_settileviewinfo:::::(hwnd, ptvi)
listview_settileviewinfo:::::(hwnd, ptvi)
listview_settilewidth:::::(hwnd, cpWidth)
listview_settilewidth:::::(hwnd, cpWidth)
listview_settooltips:::::(hwndLV, hwndNewHwnd)
listview_settooltips:::::(hwndLV, hwndNewHwnd)
listview_setunicodeformat:::::(hwnd, fUnicode)
listview_setunicodeformat:::::(hwnd, fUnicode)
listview_setview:::::(hwnd, dView)
listview_setview:::::(hwnd, dView)
listview_setworkareas:::::(hwnd, nWorkAreas, prc)
listview_setworkareas:::::(hwnd, nWorkAreas, prc)
listview_sortgroups:::::(hwnd, pfnGroupCompate, plv)
listview_sortgroups:::::(hwnd, pfnGroupCompate, plv)
listview_sortitems:::::(hWndLV, pfnCompare, lPrm)
listview_sortitems:::::(hWndLV, pfnCompare, lPrm)
listview_sortitemsex:::::(hwndLV, pfnCompare, lParamSort)
listview_sortitemsex:::::(hwndLV, pfnCompare, lParamSort)
listview_subitemhittest:::::(hwnd, plvhti)
listview_subitemhittest:::::(hwnd, plvhti)
listview_update:::::(hWndLV, i)
listview_update:::::(hWndLV, i)
llseek:::::(hFile, lOffset, iOrigin)
lo:::::(Type, value)
loadaccelerators:::::(hInstance, lpTableName)
loadbitmap:::::(hInstance, lpBitmapName)
loadbmpfromfile:::::(Filename)
loadcursor:::::(hInstance, lpCursorName)
loadcursorfromfile:::::(lpFileName)
loadicon:::::(hInstance, lpIconName)
loadimage:::::(hInst, lpsz, uType, cxDesired, cyDesired, fuLoad)
loadkeyboardlayout:::::(pwszKLID, flags)
loadlibrary:::::(lpLibFileName)
loadlibraryex:::::(lpLibFileName, hFile, dwFlags)
loadmenu:::::(hInstance, lpString)
loadmenuindirect:::::(lpMenuTemplate)
loadmodule:::::(lpModuleName, lpParameterBlock)
loadresource:::::(hInstance, hResInfo)
loadstring:::::(hInstance, uID, lpBuffer, nBufferMax)
lobyt:::::(sixteenbitvalue)
loc:::::([#] filenum&)
local:::::variable[()] [, variable[()]] [, ...] AS Type
local:::::variable[()] [AS Type] [, variable[()]] [...]
localalloc:::::(uFlags, lBytes)
localcompact:::::(uMinFree)
localfiletimetofiletime:::::(lpLocalFileTime, lpFileTime)
localflags:::::(hMem)
localfree:::::(hMem)
localhandle:::::(pMem)
locallock:::::(hMem)
localrealloc:::::(hMem, lBytes, uFlags)
localshrink:::::(hMem, cbNewSize)
localsize:::::(hMem)
localunlock:::::(hMem)
lock:::::[#] filenum& [, {record&& | start&& TO end&&}]
lockfile:::::(hFile, dwFileOffsetLow, dwFileOffsetHigh, nNumberOfBytesToLockLow, nNumberOfBytesToLockHigh)
lockfileex:::::(hFile, dwFlags, dwReserved, nNumberOfBytesToLockLow, nNumberOfBytesToLockHigh, lpOverlapped)
lockresource:::::(hResData)
lockservicedatabase:::::(hSCManager)
locksetforegroundwindow:::::(uLockCode)
lockwindowupdate:::::(hWndLock)
lof:::::([#] filenum&)
log:::::(numeric_expression)
log10:::::(numeric_expression)
log2:::::(numeric_expression)
logonuser:::::(lpszUsername, lpszDomain, lpszPassword, dwLogonType, dwLogonProvider, phToken)
loint:::::(thirtytwobitvalue)
longtoshort:::::(InPath)
lookupaccountname:::::(lpSystemName, lpAccountName, pSid, cbSid, ReferencedDomainName, cbReferencedDomainName, peUse)
lookupaccountsid:::::(lpSystemName, pSid, xName, cbName, ReferencedDomainName, cbReferencedDomainName, peUse)
lookupiconidfromdirectory:::::(presbits, fIcon)
lookupiconidfromdirectoryex:::::(presbits, fIcon, cxDesired, cyDesired, Flags)
lookupprivilegedisplayname:::::(lpSystemName, lpName, lpDisplayName, cbDisplayName, lpLanguageID)
lookupprivilegename:::::(lpSystemName, lpLuid, lpName, cbName)
lookupprivilegevalue:::::(lpSystemName, lpName, lpLuid)
lookupsecuritydescriptorparts:::::( pOwner, pGroup, cCountOfAccessEntries, pListOfAccessEntries, cCountOfAuditEntries, pListOfAuditEntries, pSD)
lookupsecuritydescriptorparts:::::( pOwner, pGroup, cCountOfAccessEntries, pListOfAccessEntries, cCountOfAuditEntries, pListOfAuditEntries, pSD)
loop:::::While | Until
lopen:::::(lpPathName, iReadWrite)
lowrd:::::(thirtytwobitvalue)
lprint:::::[expression] [SPC(n)] [Tab(n)] [,] [;]
lptodp:::::(hdc, lpPoint, nCount)
lread:::::(hFile, lpBuffer, uBytes)
lsa_success:::::(nError)
lsa_success:::::(nError)
lsaaddaccountrights:::::( PolicyHandle, AccountSid, UserRights, CountOfRights)
lsacallauthenticationpackage:::::( LsaHandle, AuthenticationPackage, ProtocolSubmitBuffer, SubmitBufferLength, ProtocolReturnBuffer, ReturnBufferLength, ProtocolStatus)
lsaclose:::::( ObjectHandle)
lsaconnectuntrusted:::::( LsaHandle)
lsacreatetrusteddomainex:::::( PolicyHandle, TrustedDomainInformation, AuthenticationInformation, DesiredAccess, TrustedDomainHandle)
lsadeletetrusteddomain:::::( PolicyHandle, TrustedDomainSid)
lsaderegisterlogonprocess:::::( LsaHandle)
lsaenumerateaccountrights:::::( PolicyHandle, AccountSid, UserRights, CountOfRights)
lsaenumerateaccountswithuserright:::::( PolicyHandle, UserRights, EnumerationBuffer, CountReturned)
lsaenumeratelogonsessions:::::( LogonSessionCount, LogonSessionList)
lsaenumeratetrusteddomains:::::( PolicyHandle, EnumerationContext, Buffer, PreferedMaximumLength, CountReturned)
lsaenumeratetrusteddomainsex:::::( PolicyHandle, EnumerationContext, Buffer, PreferedMaximumLength, CountReturned)
lsaforesttrustfindmatch:::::( PolicyHandle, dType, uName, Match)
lsafreememory:::::( Buffer)
lsafreereturnbuffer:::::( Buffer)
lsagetlogonsessiondata:::::( LogonId, ppLogonSessionData)
lsalogonuser:::::( LsaHandle, OriginName, LogonType, AuthenticationPackage, AuthenticationInformation, AuthenticationInformationLength, LocalGroups, SourceContext, ProfileBuffer, ProfileBufferLength, LogonId, Token, Quotas, SubStatus)
lsalookupauthenticationpackage:::::( LsaHandle, PackageName, AuthenticationPackage)
lsalookupnames:::::( PolicyHandle, Count, Names, ReferencedDomains, Sids)
lsalookupnames:::::( PolicyHandle, Count, Names, ReferencedDomains, Sids)
lsalookupnames2:::::( PolicyHandle, Flags, Count, Names, ReferencedDomains, Sids)
lsalookupnames2:::::( PolicyHandle, Flags, Count, Names, ReferencedDomains, Sids)
lsalookupsids:::::( PolicyHandle, Count, Sids, ReferencedDomains, Names)
lsalookupsids:::::( PolicyHandle, Count, Sids, ReferencedDomains, Names)
lsantstatustowinerror:::::( Status)
lsaopenpolicy:::::( SystemName, ObjectAttributes, DesiredAccess, PolicyHandle)
lsaopentrusteddomainbyname:::::( PolicyHandle, TrustedDomainName, DesiredAccess, TrustedDomainHandle)
lsaquerydomaininformationpolicy:::::( PolicyHandle, InformationClass, Buffer)
lsaqueryforesttrustinformation:::::( PolicyHandle, TrustedDomainName, ForestTrustInfo)
lsaqueryinformationpolicy:::::( PolicyHandle, InformationClass, Buffer)
lsaquerytrusteddomaininfo:::::( PolicyHandle, TrustedDomainSid, InformationClass, Buffer)
lsaquerytrusteddomaininfobyname:::::( PolicyHandle, TrustedDomainName, InformationClass, Buffer)
lsaregisterlogonprocess:::::( LogonProcessName, LsaHandle, SecurityMode)
lsaregisterpolicychangenotification:::::( InformationClass, NotificationEventHandle)
lsaremoveaccountrights:::::( PolicyHandle, AccountSid, AllRights, UserRights, CountOfRights)
lsaretrieveprivatedata:::::( PolicyHandle, KeyName, PrivateData)
lsasetdomaininformationpolicy:::::( PolicyHandle, InformationClass, Buffer)
lsasetforesttrustinformation:::::( PolicyHandle, TrustedDomainName, ForestTrustInfo, CheckOnly, CollisionInfo)
lsasetinformationpolicy:::::( PolicyHandle, InformationClass, Buffer)
lsasettrusteddomaininfobyname:::::( PolicyHandle, TrustedDomainName, InformationClass, Buffer)
lsasettrusteddomaininformation:::::( PolicyHandle, TrustedDomainSid, InformationClass, Buffer)
lsastoreprivatedata:::::( PolicyHandle, KeyName, PrivateData)
lsaunregisterpolicychangenotification:::::( InformationClass, NotificationEventHandle)
lset$:::::(string_expression, strlen& [USING ustring_expression])
lset:::::[ABS] result_var = string_expression [USING ustring_expression]
lstrcat:::::(lpString1, lpString2)
lstrcmp:::::(lpString1, lpString2)
lstrcmpi:::::(lpString1, lpString2)
lstrcpy:::::(lpString1, lpString2)
lstrcpyn:::::(lpString1, lpString2, iMaxLength)
lstrlen:::::(lpString)
lstrlenw:::::(lpString)
ltrim$:::::(MainString [, [ANY] MatchString])
lwrite:::::(hFile, lpBuffer, uBytes)
lzclose:::::(hfFile)
lzcopy:::::(hfSource, hfDest)
lzinit:::::(hfSrc)
lzopenfile:::::(lpszFile, lpOf, STYLE)
lzread:::::(hfFile, lpvBuf, cbread)
lzseek:::::(hfFile, lOffset, nOrigin)
macro:::::macroname [(prm1, prm2, ...)] = replacementtext
macrotemp:::::ident1 [, ident2, ...]
mak:::::(datatype, loworderval, highorderval)
makdwd:::::(loword, hiword)
make_hresult:::::(sev, fac, CODE)
make_hresult:::::(sev, fac, CODE)
make_scode:::::(sev, fac, CODE)
make_scode:::::(sev, fac, CODE)
makeabsolutesd:::::(pSelfRelativeSecurityDescriptor, pAbsoluteSecurityDescriptor, lpdwAbsoluteSecurityDescriptorSize, pDacl, lpdwDaclSize, pSacl, lpdwSaclSize, pOwner, lpdwOwnerSize, pPrimaryGroup, lpdwPrimaryGroupSize)
makedraglist:::::(hLB)
makeipaddress:::::(b1, b2, b3, b4)
makeipaddress:::::(b1, b2, b3, b4)
makeiprange:::::(low, high)
makeiprange:::::(low, high)
makelangid:::::(p, s)
makelangid:::::(p, s)
makerop4:::::(dFore, dBack)
makerop4:::::(dFore, dBack)
makeselfrelativesd:::::(pAbsoluteSecurityDescriptor, pSelfRelativeSecurityDescriptor, lpdwBufferLength)
makint:::::(lobyte, hibyte)
maklng:::::(loword, hiword)
makptr:::::(loword, hiword)
makwrd:::::(lobyte, hibyte)
mapdialogrect:::::(hDlg, lpRect)
mapgenericmask:::::(AccessMask, GenericMapping)
mapviewoffile:::::(hFileMappingObject, dwDesiredAccess, dwFileOffsetHigh, dwFileOffsetLow, dwNumberOfBytesToMap)
mapviewoffileex:::::(hFileMappingObject, dwDesiredAccess, dwFileOffsetHigh, dwFileOffsetLow, dwNumberOfBytesToMap, lpBaseAddress)
mapvirtualkey:::::(dwCode, dwMapType)
mapvirtualkeyex:::::(uCode, uMapType, dwHKL)
mapwindowpoints:::::(hWndFrom, hWndTo, lppt, cPoints)
maskblt:::::(hdcDest, nXDest, nYDest, nWidth, nHeight, hdcSrc, nXSrc, nYSrc, hbmMask, xMask, yMask, dwRop)
max$:::::(arg$ [, arg$] ...)
mcase$:::::(string_expression [,ANSI | OEM])
mciexecute:::::(lpstrCommand)
mcigetcreatortask:::::(wDeviceId)
mcigetdeviceid:::::(lpstrName)
mcigetdeviceidfromelementid:::::(dwElementId, lpstrType)
mcigeterrorstring:::::(dwError, lpstrBuffer, uLength)
mcigetyieldproc:::::(mciId, pdwYieldData)
mcisendcommand:::::(wDeviceId, uMessage, dwParam1, dwParam2)
mcisendstring:::::(lpstrCommand, lpstrReturnString, uReturnLength, hwndCallback)
mcisetyieldproc:::::(mciId, fpYieldProc, dwYieldData)
mdiactivate:::::(hClient, hWnd)
mdiactivate:::::(hClient, hWnd)
mdicascade:::::(hClient)
mdicascade:::::(hClient)
mdidestroy:::::(hClient, hWnd)
mdidestroy:::::(hClient, hWnd)
mdigetactive:::::(hClient)
mdigetactive:::::(hClient)
mdigetactivemax:::::(hClient, lpMaximized)
mdigetactivemax:::::(hClient, lpMaximized)
mdiiconarrange:::::(hClient)
mdimaximize:::::(hClient, hWnd)
mdimaximize:::::(hClient, hWnd)
mdinext:::::(hClient, hWnd, fNext)
mdinext:::::(hClient, hWnd, fNext)
mdirestore:::::(hClient, hWnd)
mdirestore:::::(hClient, hWnd)
mditile:::::(hClient, How)
mditile:::::(hClient, How)
member:::::{Call | Get | Set | Let} membername <dispid> ( [[OPTIONAL
menuhelp:::::(uMsg, wParam, lParam, hMainMenu, hInst, hWndStatus, lpwIds)
menuitemfrompoint:::::(hWnd, hMenu, x, y)
messagebeep:::::(dwType)
messagebox:::::(hWnd, lpText, lpCaption, dwType)
messageboxex:::::(hWnd, lpText, lpCaption, uType, wLanguageId)
messageboxindirect:::::(lpMsgBoxParams)
method:::::Name [(paramlist) [AS Type]
method:::::Name [<DispID>] [ALIAS "altname"] (var AS
mid$:::::(string_expression, start& [, length&])
mid$:::::(string_var, start& [, length&])
midiconnect:::::(hmi, hmo, pReserved)
mididisconnect:::::(hmi, hmo, pReserved)
midiinaddbuffer:::::(hMidiIn, lpMidiInHdr, uSize)
midiinclose:::::(hMidiIn)
midiingetdevcaps:::::(uDeviceID, lpCaps, uSize)
midiingeterrortext:::::(xerr, lpText, uSize)
midiingetid:::::(hMidiIn, lpuDeviceId)
midiinmessage:::::(hMidiIn, msg, dw1, dw2)
midiinopen:::::(lphMidiIn, uDeviceID, dwCallback, dwInstance, dwFlags)
midiinprepareheader:::::(hMidiIn, lpMidiInHdr, uSize)
midiinreset:::::(hMidiIn)
midiinstart:::::(hMidiIn)
midiinstop:::::(hMidiIn)
midiinunprepareheader:::::(hMidiIn, lpMidiInHdr, uSize)
midioutcachedrumpatches:::::(hMidiOut, uPatch, lpKeyArray, uFlags)
midioutcachepatches:::::(hMidiOut, uBank, lpPatchArray, uFlags)
midioutclose:::::(hMidiOut)
midioutgetdevcaps:::::(uDeviceID, lpCaps, uSize)
midioutgeterrortext:::::(xerr, lpText, uSize)
midioutgetid:::::(hMidiOut, lpuDeviceId)
midioutgetvolume:::::(uDeviceID, lpdwVolume)
midioutlongmsg:::::(hMidiOut, lpMidiOutHdr, uSize)
midioutmessage:::::(hMidiOut, msg, dw1, dw2)
midioutopen:::::(lphMidiOut, uDeviceID, dwCallback, dwInstance, dwFlags)
midioutprepareheader:::::(hMidiOut, lpMidiOutHdr, uSize)
midioutreset:::::(hMidiOut)
midioutsetvolume:::::(uDeviceID, dwVolume)
midioutshortmsg:::::(hMidiOut, dwMsg)
midioutunprepareheader:::::(hMidiOut, lpMidiOutHdr, uSize)
midistreamclose:::::(hms)
midistreamopen:::::(phms, puDeviceId, cMidi, dwCallback, dwInstance, fdwOpen)
midistreamout:::::(hms, pmh, cbMidiHdr)
midistreampause:::::(hms)
midistreamposition:::::(hms, lpmmt, cbmmt)
midistreamproperty:::::(hms, lppropdata, dwProperty)
midistreamrestart:::::(hms)
midistreamstop:::::(hms)
min$:::::(arg$, arg$ [, arg$] ...)
mixerclose:::::(hmx)
mixergetcontroldetails:::::(hmxobj, pmxcd, fdwDetails)
mixergetdevcaps:::::(uMxId, pmxcaps, cbmxcaps)
mixergetid:::::(hmxobj, pumxId, fdwId)
mixergetlinecontrols:::::(hmxobj, pmxlc, fdwControls)
mixergetlineinfo:::::(hmxobj, pmxl, fdwInfo)
mixermessage:::::(hmx, uMsg, dwParam1, dwParam2)
mixeropen:::::(phmx, uMxId, dwCallback, dwInstance, fdwOpen)
mixersetcontroldetails:::::(hmxobj, pmxcd, fdwDetails)
mkbyt$:::::(byte_expr)
mkcur$:::::(currency_expr)
mkcux$:::::(extended_currency_expr)
mkd$:::::(double_precision_expr)
mkdir$:::::path$
mkdwd$:::::(double_word_expr)
mke$:::::(extended_precision_expr)
mki$:::::(integer_expr)
mkl$:::::(long_integer_expr)
mkq$:::::(quad_integer_expr)
mks$:::::(single_precision_expr)
mkwrd$:::::(word_expr)
mmioadvance:::::(hmmio, lpmmioinfo, uFlags)
mmioascend:::::(hmmio, lpck, uFlags)
mmioclose:::::(hmmio, uFlags)
mmiocreatechunk:::::(hmmio, lpck, uFlags)
mmiodescend:::::(hmmio, lpck, lpckParent, uFlags)
mmioflush:::::(hmmio, uFlags)
mmiogetinfo:::::(hmmio, lpmmioinfo, uFlags)
mmioinstallioproca:::::(fccIOProc, pIOProc, dwFlags)
mmioopen:::::(szFileName, lpmmioinfo, dwOpenFlags)
mmioread:::::(hmmio, pch, cch)
mmiorename:::::(szFileName, SzNewFileName, lpmmioinfo, dwRenameFlags)
mmioseek:::::(hmmio, lOffset, iOrigin)
mmiosendmessage:::::(hmmio, uMsg, lParam1, lParam2)
mmiosetbuffer:::::(hmmio, pchBuffer, cchBuffer, uFlags)
mmiosetinfo:::::(hmmio, lpmmioinfo, uFlags)
mmiostringtofourcc:::::(sz, uFlags)
mmiowrite:::::(hmmio, pch, cch)
modifymenu:::::(hMenu, dwPosition, dwFlags, dwIDNewItem, lpString)
modifyworldtransform:::::(hdc, lpXform, dwMode)
module32first:::::(hSnapshot, lpme)
module32next:::::(hSnapshot, lpme)
monitorfrompoint:::::(x, y, dwFlags)
monitorfromrect:::::(lprc, dwFlags)
monitorfromwindow:::::(hwnd, dwFlags)
monthcal_getcolor:::::(hmc, iColor)
monthcal_getcolor:::::(hmc, iColor)
monthcal_getcursel:::::(hmc, pst)
monthcal_getcursel:::::(hmc, pst)
monthcal_getfirstdayofweek:::::(hmc)
monthcal_getfirstdayofweek:::::(hmc)
monthcal_getmaxselcount:::::(hmc)
monthcal_getmaxselcount:::::(hmc)
monthcal_getmaxtodaywidth:::::(hmc)
monthcal_getmaxtodaywidth:::::(hmc)
monthcal_getminreqrect:::::(hmc, prc)
monthcal_getminreqrect:::::(hmc, prc)
monthcal_getmonthdelta:::::(hmc)
monthcal_getmonthdelta:::::(hmc)
monthcal_getmonthrange:::::(hmc, gmr, rgst)
monthcal_getmonthrange:::::(hmc, gmr, rgst)
monthcal_getrange:::::(hmc, rgst)
monthcal_getrange:::::(hmc, rgst)
monthcal_getselrange:::::(hmc, rgst)
monthcal_getselrange:::::(hmc, rgst)
monthcal_gettoday:::::(hmc, pst)
monthcal_gettoday:::::(hmc, pst)
monthcal_getunicodeformat:::::(hwnd)
monthcal_getunicodeformat:::::(hwnd)
monthcal_hittest:::::(hmc, pinfo)
monthcal_hittest:::::(hmc, pinfo)
monthcal_setcolor:::::(hmc, iColor, clr)
monthcal_setcolor:::::(hmc, iColor, clr)
monthcal_setcursel:::::(hmc, pst)
monthcal_setcursel:::::(hmc, pst)
monthcal_setdaystate:::::(hmc, cbds, rgds)
monthcal_setdaystate:::::(hmc, cbds, rgds)
monthcal_setfirstdayofweek:::::(hmc, iDay)
monthcal_setfirstdayofweek:::::(hmc, iDay)
monthcal_setmaxselcount:::::(hmc, n)
monthcal_setmaxselcount:::::(hmc, n)
monthcal_setmonthdelta:::::(hmc, n)
monthcal_setmonthdelta:::::(hmc, n)
monthcal_setrange:::::(hmc, gd, rgst)
monthcal_setrange:::::(hmc, gd, rgst)
monthcal_setselrange:::::(hmc, rgst)
monthcal_setselrange:::::(hmc, rgst)
monthcal_settoday:::::(hmc, pst)
monthcal_settoday:::::(hmc, pst)
monthcal_setunicodeformat:::::(hwnd, fUnicode)
monthcal_setunicodeformat:::::(hwnd, fUnicode)
mouse_event:::::(dwFlags, dx, dy, cButtons, dwExtraInfo)
mouseptr:::::Style [TO var&]
movefile:::::(lpExistingFileName, lpNewFileName)
movefileex:::::(lpExistingFileName, lpNewFileName, dwFlags)
movefilewithprogress:::::(lpExistingFileName, lpNewFileName, lpProgressRoutine, lpData, dwFlags)
movememory:::::(pDestination, pSource, cbLength)
moveto:::::(hDC, x, y)
moveto:::::(hDC, x, y)
movetoex:::::(hdc, x, y, lpPoint)
movewindow:::::(hWnd, x, y, nWidth, nHeight, bRepaint)
msgbox:::::txt$ [, [style%], title$]
msgwaitformultipleobjects:::::(nCount, pHandles, fWaitAll, dwMilliseconds, dwWakeMask)
msv1_0subauthenticationfilter alias "msv1_0subauthenticationfilter":::::( LogonLevel, LogonInformation, Flags, UserAll, WhichFields, UserFlags, Authoritative, LogoffTime, KickoffTime)
msv1_0subauthenticationroutine alias "msv1_0subauthenticationroutine":::::( LogonLevel, LogonInformation, Flags, UserAll, WhichFields, UserFlags, Authoritative, LogoffTime, KickoffTime)
msv1_0subauthenticationroutineex alias "msv1_0subauthenticationroutineex":::::( LogonLevel, LogonInformation, Flags, UserAll, UserHandle, ValidationInfo, ActionsPerformed)
msv1_0subauthenticationroutinegeneric alias "msv1_0subauthenticationroutinegeneric":::::( SubmitBuffer, SubmitBufferLength, ReturnBufferLength, ReturnBuffer)
muldiv:::::(nNumber, nNumerator, nDenominator)
multibytetowidechar:::::(CodePag, dwFlags, lpMultiByteStr, cchMultiByte, lpWideCharStr, cchWideChar)
multibytetowidechar:::::(CodePage, dwFlags, lpMultiByteStr, cchMultiByte, lpWideCharStr, cchWideChar)
multinetgetconnectionperformance:::::(lpNetResource, lpNetConnectInfoStruct)
name:::::filespec1$ AS filespec2$
netaccessadd:::::( servername, level, buf, parm_err)
netaccessdel:::::( servername, resource)
netaccessenum:::::( servername, BasePath, Recursive, level, bufptr, prefmaxlen, entriesread, totalentries, resume_handle)
netaccessgetinfo:::::( servername, resource, level, bufptr)
netaccessgetuserperms:::::( servername, UGname, resource, Perms)
netaccesssetinfo:::::( servername, resource, level, buf, parm_err)
netapibufferallocate:::::(ByteCount, pBuffer)
netapibufferfree:::::(pBuffer)
netapibufferreallocate:::::(pOldBuffer, NewByteCount, pNewBuffer)
netapibuffersize:::::(pBuffer, ByteCount)
netbios:::::(pncb)
netenumeratetrusteddomains:::::( ServerName, DomainNames)
netgetanydcname:::::( servername, domainname, bufptr)
netgetdcname:::::( servername, domainname, bufptr)
netgetdisplayinformationindex:::::( ServerName, Level, Prefix, Index)
netgroupadd:::::( servername, level, buf, parm_err)
netgroupadduser:::::( servername, GroupName, username)
netgroupdel:::::( servername, GroupName)
netgroupdeluser:::::( servername, GroupName, UserName)
netgroupenum:::::( servername, level, bufptr, prefmaxlen, entriesread, totalentries, resume_handle)
netgroupgetinfo:::::( servername, GroupName, level, bufptr)
netgroupgetusers:::::( servername, GroupName, level, bufptr, prefmaxlen, entriesread, totalentries, resume_handle)
netgroupsetinfo:::::( servername, GroupName, level, buf, parm_err)
netgroupsetusers:::::( servername, GroupName, level, buf, totalentries)
netlocalgroupadd:::::( servername, level, buf, parm_err)
netlocalgroupaddmember:::::( servername, GroupName, membersid)
netlocalgroupaddmembers:::::( servername, GroupName, level, buf, totalentries)
netlocalgroupdel:::::( servername, GroupName)
netlocalgroupdelmember:::::( servername, GroupName, membersid)
netlocalgroupdelmembers:::::( servername, GroupName, level, buf, totalentries)
netlocalgroupenum:::::( servername, level, bufptr, prefmaxlen, entriesread, totalentries, resumehandle)
netlocalgroupgetinfo:::::( servername, GroupName, level, bufptr)
netlocalgroupgetmembers:::::( servername, GroupName, level, bufptr, prefmaxlen, entriesread, totalentries, resumehandle)
netlocalgroupsetinfo:::::( servername, GroupName, level, buf, parm_err)
netlocalgroupsetmembers:::::( servername, GroupName, level, buf, totalentries)
netquerydisplayinformation:::::( ServerName, Level, Index, EntriesRequested, PreferredMaximumLength, ReturnedEntryCount, SortedBuffer)
netremotetod:::::(UncServerName, pBuffer)
netuseadd:::::(UncServerName, Level, Buf, ParmError)
netusedel:::::(UncServerName, UseName, ForceCond)
netuseenum:::::(UncServerName, Level, BufPtr, PreferedMaximumSize, EntriesRead, TotalEntries, ResumeHandle)
netusegetinfo:::::(UncServerName, UseName, Level, BufPtr)
netuseradd:::::( servername, level, buf, parm_err)
netuserchangepassword:::::( domainname, username, oldpassword, newpassword)
netuserdel:::::( servername, username)
netuserenum:::::( servername, level, filter, bufptr, prefmaxlen, entriesread, totalentries, resume_handle)
netusergetgroups:::::( servername, username, level, bufptr, prefmaxlen, entriesread, totalentries)
netusergetinfo:::::( servername, username, level, bufptr)
netusergetlocalgroups:::::( servername, username, level, flags, bufptr, prefmaxlen, entriesread, totalentries)
netusermodalsget:::::( servername, level, bufptr)
netusermodalsset:::::( servername, level, buf, parm_err)
netusersetgroups:::::( servername, username, level, buf, num_entries)
netusersetinfo:::::( servername, username, level, buf, parm_err)
netvalidatepasswordpolicy:::::( ServerName, Qualifier, ValidationType, InputArg, OutputArg)
netwkstagetinfo:::::( servername, level, bufptr)
netwkstasetinfo:::::( servername, level, buffer, parm_err)
netwkstatransportadd:::::( servername, level, buf, parm_err)
netwkstatransportdel:::::( servername, transportname, ucond)
netwkstatransportenum:::::( servername, level, bufptr, prefmaxlen, entriesread, totalentries, resumehandle)
netwkstauserenum:::::( servername, level, bufptr, prefmaxlen, entriesread, totalentries, resumehandle)
netwkstausergetinfo:::::( reserved, level, bufptr)
netwkstausersetinfo:::::( reserved, level, buf, parm_err)
next:::::[Counter]
notifyaddrchange:::::(pHandle, pOverlapped)
notifybootconfigstatus:::::(BootAcceptable)
notifychangeeventlog:::::(hEventLog, hEvent)
notifyroutechange:::::(pHandle, pOverlapped)
notifywinevent:::::(dEvent, hwnd, idObject, idChild)
nt_success:::::(Status)
nt_success:::::(Status)
ntohl:::::(netlong)
ntohl:::::(netlong)
ntohs:::::(netshort)
ntohs:::::(netshort)
nul$:::::(Count)
objactive:::::(ProgID$)
objectcloseauditalarm:::::(SubsystemName, HandleId, GenerateOnClose)
objectopenauditalarm:::::(SubsystemName, HandleId, ObjectTypeName, ObjectName, pSecurityDescriptor, ClientToken, DesiredAccess, GrantedAccess, Privileges, ObjectCreation, AccessGranted, GenerateOnClose)
objectprivilegeauditalarm:::::(SubsystemName, HandleId, ClientToken, DesiredAccess, Privileges, AccessGranted)
objptr:::::(objectvar)
objresult$:::::([nexp&])
oct$:::::(numeric_expression [, digits])
oemkeyscan:::::(wOemChar)
oemtochar:::::(lpszSrc, lpszDst)
oemtocharbuff:::::(lpszSrc, lpszDst, cchDstLength)
offsetcliprgn:::::(hdc, x, y)
offsetrect:::::(lpRect, x, y)
offsetrgn:::::(hRgn, x, y)
offsetviewportorgex:::::(hdc, nX, nY, lpPoint)
offsetwindoworgex:::::(hdc, nX, nY, lpPoint)
on:::::n GoSub {Label | line_number} [, {Label | line_number}] ...
on:::::n GoTo {Label | line_number} [, {Label | line_number}] ...
open:::::filespec [For Mode] [ACCESS access] [Lock Lock] AS [#] filenum& [Len = record_size] [BASE = base]
openbackupeventlog:::::(lpUNCServerName, lpFileName)
openclipboard:::::(hWnd)
opendesktop:::::(lpszDesktop, dwFlags, fInherit, dwDesiredAccess)
opendriver:::::(szDriverName, szSectionName, lParam2)
openevent:::::(dwDesiredAccess, bInheritHandle, lpName)
openeventlog:::::(lpUNCServerName, lpSourceName)
openfile:::::(lpFileName, lpReOpenBuff, uStyle)
openfiledialog:::::(hWnd, sCaption, sFileSpec, sInitialDir, sFilter, sDefExtension, dFlags)
openfilemapping:::::(dwDesiredAccess, bInheritHandle, lpName)
openicon:::::(hWnd)
openinputdesktop:::::(dwFlags, fInherit, dwDesiredAccess)
openmutex:::::(dwDesiredAccess, bInheritHandle, lpName)
openprinter:::::(pPrinterName, phPrinter, pDefault)
openprocess:::::(dwDesiredAccess, bInheritHandle, dwProcessId)
openprocesstoken:::::(ProcessHandle, DesiredAccess, TokenHandle)
openscmanager:::::(lpMachineName, lpDatabaseName, dwDesiredAccess)
opensemaphore:::::(dwDesiredAccess, bInheritHandle, lpName)
openservice:::::(hSCManager, lpServiceName, dwDesiredAccess)
openthread:::::(dwDesiredAccess, bInheritHandle, dwThreadId)
openthreadtoken:::::(ThreadHandle, DesiredAccess, OpenAsSelf, TokenHandle)
openwaitabletimer:::::(dwDesiredAccess, bInheritHandle, lpTimerName)
openwindowstation:::::(lpszWinSta, fInherit, dwDesiredAccess)
outputdebugstr:::::(lpszOutputString)
outputdebugstring:::::(lpOutputString)
packddelparam:::::(msg, uiLo, uiHi)
pager_forwardmouse:::::(hwnd, bForward)
pager_getbkcolor:::::(hwnd)
pager_getbkcolor:::::(hwnd)
pager_getborder:::::(hwnd)
pager_getborder:::::(hwnd)
pager_getbuttonsize:::::(hwnd)
pager_getbuttonsize:::::(hwnd)
pager_getbuttonstate:::::(hwnd, iButton)
pager_getbuttonstate:::::(hwnd, iButton)
pager_getdroptarget:::::(hwnd, ppdt)
pager_getpos:::::(hwnd)
pager_getpos:::::(hwnd)
pager_recalcsize:::::(hwnd)
pager_setbkcolor:::::(hwnd, clr)
pager_setbkcolor:::::(hwnd, clr)
pager_setborder:::::(hwnd, iBorder)
pager_setborder:::::(hwnd, iBorder)
pager_setbuttonsize:::::(hwnd, iSize)
pager_setbuttonsize:::::(hwnd, iSize)
pager_setchild:::::(hwnd, hwndChild)
pager_setpos:::::(hwnd, iPos)
pager_setpos:::::(hwnd, iPos)
pagesetupdlg:::::(lpPageSetupDlg)
paintdesktop:::::(hDC)
paintrgn:::::(hdc, hRgn)
paletteindex:::::(ix)
paletteindex:::::(ix)
palettergb:::::(bRed, bGreen, bBlue)
palettergb:::::(bRed, bGreen, bBlue)
parse$:::::(string_expr [, {[ANY] string_delimiter | BINARY}], index&)
parse:::::main$, array$() [, {[ANY] delim$ | BINARY}]
parsecount:::::(string_expr [, {[ANY] string_delimiter | BINARY}])
patblt:::::(hdc, x, y, nWidth, nHeight, dwRop)
pathaddbackslash:::::(pszPath)
pathaddextension:::::(pszPath, pszExt)
pathappend:::::(pszPath, pMore)
pathbuildroot:::::(szRoot, iDrive)
pathcanonicalize:::::(pszBuf, pszPath)
pathcombine:::::(szDest, lpszDir, lpszFile)
pathcommonprefix:::::(pszFile1, pszFile2, achPath)
pathcompactpath:::::(hDC, pszPath, dx)
pathcompactpathex:::::(pszOut, pszSrc, cchMax, dwFlags)
pathfileexists:::::(pszPath)
pathfindextension:::::(pszPath)
pathfindfilename:::::(pszPath)
pathfindnextcomponent:::::(pszPath)
pathfindonpath:::::(pszPath, ppszOtherDirs)
pathgetargs:::::(pszPath)
pathgetchartype:::::(ch)
pathgetdrivenumber:::::(pszPath)
pathiscontenttype:::::(pszPath, pszContentType)
pathisdirectory:::::(pszPath)
pathisfilespec:::::(pszPath)
pathisprefix:::::(pszPrefix, pszPath)
pathisrelative:::::(pszPath)
pathisroot:::::(pszPath)
pathissameroot:::::(pszPath1, pszPath2)
pathissystemfolder:::::(pszPath, dwAttrb)
pathisunc:::::(pszPath)
pathisuncserver:::::(pszPath)
pathisuncservershare:::::(pszPath)
pathisurl:::::(pszPath)
pathmakepretty:::::(pszPath)
pathmakesystemfolder:::::(pszPath)
pathmatchspec:::::(pszFile, pszSpec)
pathname$:::::(director, filespec$)
pathparseiconlocation:::::(pszIconFile)
pathquotespaces:::::(lpsz)
pathrelativepathto:::::(pszPath, pszFrom, dwAttrFrom, pszTo, dwAttrTo)
pathremoveargs:::::(pszPath)
pathremovebackslash:::::(pszPath)
pathremoveblanks:::::(pszPath)
pathremoveextension:::::(pszPath)
pathremovefilespec:::::(pszPath)
pathrenameextension:::::(pszPath, pszExt)
pathscan$:::::(director, filespec$[, pathspec$])
pathsearchandqualify:::::(pszPath, pszBuf, cchBuf)
pathsetdlgitempath:::::(hDlg, ID, pszPath)
pathskiproot:::::(pszPath)
pathstrippath:::::(pszPath)
pathstriptoroot:::::(pszPath)
pathtoregion:::::(hdc)
pathunmakesystemfolder:::::(pszPath)
pathunquotespaces:::::(lpsz)
pbformsinitcomctls:::::(icc)
pbformsinitcommoncontrolsex:::::(iccex)
pbformsmakefont:::::(sFntName, fFntSize, lWeight, lUnderlined, lItalic, lStrike, lCharSet)
pbformsrichedit:::::(OPTIONAL fUnLoad)
pbstringtovb:::::(s)
peek$:::::([ASCIIZ,] address???, count&)
peek:::::([datatype,] address???)
peekconsoleinput:::::(hConsoleInput, lpBuffer, nLength, lpNumberOfEventsWritten)
peekmessage:::::(lpMsg, hWnd, dwMsgFilterMin, dwMsgFilterMax, dwRemoveMsg)
peeknamedpipe:::::(hNamedPipe, lpBuffer, nBufferSize, lpBytesRead, lpTotalBytesAvail, lpBytesLeftThisMessage)
pie:::::(hdc, X1, Y1, X2, Y2, X3, Y3, X4, Y4)
playenhmetafile:::::(hdc, hemf, lpRect)
playenhmetafilerecord:::::(hdc, lpHandletable, lpEnhMetaRecord, nHandles)
playmetafile:::::(hdc, hMF)
playmetafilerecord:::::(hdc, lpHandletable, lpMetaRecord, nHandles)
playsound:::::(lpszName, hModule, dwFlags)
plgblt:::::(hdcDest, lpPoint, hdcSrc, nXSrc, nYSrc, nWidth, nHeight, hbmMask, xMask, yMask)
poke$:::::[ASCIIZ,] address???, string_expr
poke:::::[datatype,] address???, datavalue
polybezier:::::(hdc, lppt, cPoints)
polybezierto:::::(hdc, lppt, cCount)
polydraw:::::(hdc, lppt, lpbTypes, cCount)
polygon:::::(hdc, lpPoint, nCount)
polyline:::::(hdc, lpPoint, nCount)
polylineto:::::(hdc, lppt, cCount)
polypolygon:::::(hdc, lpPoint, lpPolyCounts, nCount)
polypolyline:::::(hdc, lppt, lpdwPolyPoints, cCount)
polytextout:::::(hdc, pptxt, cStrings)
pop3connect:::::(Pop3Host, USER, password)
pop3getstat:::::(nTCP, Messages, MsgSize)
pop3quit:::::(nTCP)
postmessage:::::(hWnd, dwMsg, wParam, lParam)
postquitmessage:::::(nExitCode)
postthreadmessage:::::(idThread, uMsg, wParam, lParam)
preparetape:::::(hDevice, dwOperation, bimmediate)
print:::::# fNum&
print:::::# fNum&, [ExpList] [SPC(n)] [Tab(n)] [,] [;] [...]
print:::::# fNum&, array$()
printdlg:::::(lpPd)
printdlgex:::::(lpPde)
printer$:::::([Name | PORT], printernum&)
printerdialog:::::(hWnd, Flags, hDC, nCopies, nFromPage, nToPage, nMinPage, nMaxPage)
printermessagebox:::::(hPrinter, xerror, hWnd, pText, pCaption, dwType)
printerproperties:::::(hWnd, hPrinter)
printersetup:::::(hWnd)
printwindow:::::(hwnd, hdcBlt, nFlags)
privilegecheck:::::(ClientToken, RequiredPrivileges, pfResult)
privilegedserviceauditalarm:::::(SubsystemName, ServiceName, ClientToken, Privileges, AccessGranted)
process32first:::::(hSnapshot, lppe)
process32next:::::(hSnapshot, lppe)
processidtosessionid:::::(dwProcessId, pSessionId)
profile:::::diskfilename$
progid$:::::(ClassID$)
property:::::Name [(paramlist) [AS Type]
propertysheet:::::(pshead)
propsheet_addpage:::::(hDlg, hpage)
propsheet_addpage:::::(hDlg, hpage)
propsheet_apply:::::(hDlg)
propsheet_apply:::::(hDlg)
propsheet_canceltoclose:::::(hDlg)
propsheet_changed:::::(hDlg, hwnd)
propsheet_changed:::::(hDlg, hwnd)
propsheet_getcurrentpagehwnd:::::(hDlg)
propsheet_getcurrentpagehwnd:::::(hDlg)
propsheet_getresult:::::(hDlg)
propsheet_getresult:::::(hDlg)
propsheet_gettabcontrol:::::(hDlg)
propsheet_gettabcontrol:::::(hDlg)
propsheet_hwndtoindex:::::(hDlg, hwnd)
propsheet_hwndtoindex:::::(hDlg, hwnd)
propsheet_idtoindex:::::(hDlg, iPageID)
propsheet_idtoindex:::::(hDlg, iPageID)
propsheet_indextohwnd:::::(hDlg, i)
propsheet_indextohwnd:::::(hDlg, i)
propsheet_indextoid:::::(hDlg, i)
propsheet_indextoid:::::(hDlg, i)
propsheet_indextopage:::::(hDlg, i)
propsheet_indextopage:::::(hDlg, i)
propsheet_insertpage:::::(hDlg, iindex, hpage)
propsheet_insertpage:::::(hDlg, iindex, hpage)
propsheet_isdialogmessage:::::(hDlg, pMsg)
propsheet_isdialogmessage:::::(hDlg, pMsg)
propsheet_pagetoindex:::::(hDlg, hpage)
propsheet_pagetoindex:::::(hDlg, hpage)
propsheet_pressbutton:::::(hDlg, iButton)
propsheet_querysiblings:::::(hDlg, wParam, lParam)
propsheet_querysiblings:::::(hDlg, wParam, lParam)
propsheet_rebootsystem:::::(hDlg)
propsheet_recalcpagesizes:::::(hDlg)
propsheet_recalcpagesizes:::::(hDlg)
propsheet_removepage:::::(hDlg, iindex, hpage)
propsheet_restartwindows:::::(hDlg)
propsheet_setcursel:::::(hDlg, hpage, iindex)
propsheet_setcursel:::::(hDlg, hpage, iindex)
propsheet_setcurselbyid:::::(hDlg, id)
propsheet_setcurselbyid:::::(hDlg, id)
propsheet_settitle:::::(hDlg, dwStyle, lpszText)
propsheet_setwizbuttons:::::(hDlg, dwFlags)
propsheet_unchanged:::::(hDlg, hwndPage)
ptinrect:::::(lpRect, ptx, pty)
ptinregion:::::(hRgn, x, y)
ptvisible:::::(hdc, x, y)
pulseevent:::::(hEvent)
purgecomm:::::(hFile, dwFlags)
put$:::::[#] filenum&, string_expression
put:::::[#] fNum& [, RecPos]
put:::::[#] fNum&, [RecPos], [ABS] VarName
put:::::[#] fNum&, [RecPos], Arr()
querydosdevice:::::(lpDeviceName, lpTargetPath, ucchMax)
queryperformancecounter:::::(lpPerformanceCount)
queryperformancefrequency:::::(lpFrequency)
queryserviceconfig:::::(hService, lpServiceConfig, cbBufSize, pcbBytesNeeded)
queryservicelockstatus:::::(hSCManager, lpLockStatus, cbBufSize, pcbBytesNeeded)
queryserviceobjectsecurity:::::(hService, dwSecurityInformation, lpSecurityDescriptor, cbBufSize, pcbBytesNeeded)
queryservicestatus:::::(hService, lpServiceStatus)
queueuserapc:::::(pfnAPC, hThread, dwData)
raiseevent:::::ObjVar.Method()
raiseexception:::::(dwExceptionCode, dwExceptionFlags, nNumberOfArguments, lpArguments)
randomize:::::[number]
rasdial:::::( lpRasDialExtensions, lpszPhoneBook, lpRasDialParams, dwNotiferTYPE, lpvNotifier, lphRasConn)
rasenumconnections:::::( lpRasConn, lpcb, lpcConnections)
rasenumentries:::::( zReserved, zPhoneBook, lpRasEntry, lpCb, lpcEntries)
rasgetconnectstatus:::::( hRasConn, lpRasConnStatus)
rasgetentrydialparams:::::( zPhoneBook, rDialParams, iPassword)
rasgetentryproperties:::::( lpszPhoneBook, szEntry, lpbEntry, lpdwEntrySize, lpBuffer, lpdwSize)
rashangup:::::( hRasConn)
rassetentryproperties:::::( lpszPhoneBook, szEntry, lpbEntry, dwEntrySize, lpBuffer, dwSize)
rasvalidateentryname:::::( lpszPhoneBook, lpszName)
read$:::::(n%)
readconsole:::::(hConsoleInput, lpBuffer, nNumberOfCharsToRead, lpNumberOfCharsRead, lpReserved)
readconsoleinput:::::(hConsoleInput, lpBuffer, nNumberOfCharsToRead, lpNumberOfCharsRead)
readconsoleoutput:::::(hConsoleOutput, lpBuffer, dwBufferSize, dwBufferCoord, lpReadRegion)
readconsoleoutputattribute:::::(hConsoleOutput, lpdwAttribute, nLength, dwReadCoord, lpNumberOfAttrsRead)
readconsoleoutputcharacter:::::(hConsoleOutput, szCharacter, nLength, dwReadCoord, lpNumberOfCharsRead)
readeventlog:::::(hEventLog, dwReadFlags, dwRecordOffset, lpBuffer, nNumberOfBytesToRead, pnBytesRead, pnMinNumberOfBytesNeeded)
readfile:::::(hFile, lpBuffer, nNumberOfBytesToRead, lpNumberOfBytesRead, lpOverlapped)
readfileex:::::(hFile, lpBuffer, nNumberOfBytesToRead, lpOverlapped, lpCompletionRoutine)
readglobalpwrpolicy:::::(pGlobalPowerPolicy)
readprinter:::::(hPrinter, pBuf, cbBuf, pNoBytesRead)
readprocessmemory:::::(hProcess, lpBaseAddress, lpBuffer, nSize, lpNumberOfBytesWritten)
readprocessorpwrscheme:::::(uiID, pMachineProcessorPowerPolicy)
readpwrscheme:::::(uiID, pPowerPolicy)
readurlcacheentrystream:::::( hUrlCacheStream, dwLocation, lpBuffer, lpdwLen, dwReserved)
realchildwindowfrompoint:::::(hwndParent, ptX, ptY)
realgetwindowclass:::::(hwnd, pszType, cchType)
realizepalette:::::(hdc)
rectangle:::::(hdc, X1, Y1, X2, Y2)
rectinregion:::::(hRgn, lpRect)
rectvisible:::::(hdc, lpRect)
recvfrom:::::(s, buf, buflen, flags, saFrom, fromlen)
recvfrom:::::(s, buf, buflen, flags, Sockstruct, strulen)
redim:::::[PRESERVE] Array[(subscripts)] [AS Type] [AT address] [, ...]
redrawwindow:::::(hWnd, lprcUpdate, hRgnUpdate, fuRedraw)
regclosekey:::::(hKey)
regconnectregistry:::::(lpMachineName, hKey, phkResult)
regcreatekey:::::(hKey, lpSubKey, phkResult)
regcreatekeyex:::::(hKey, lpSubKey, Reserved, lpClass, dwOptions, samDesired, lpSecurityAttributes, phkResult, lpdwDisposition)
regdeletekey:::::(hKey, lpSubKey)
regdeletevalue:::::(hKey, lpValueName)
regenumkey:::::(hKey, dwIndex, lpName, cbName)
regenumkeyex:::::(hKey, dwIndex, lpName, lpcbName, lpReserved, lpClass, lpcbClass, lpftLastWriteTime)
regenumvalue:::::(hKey, dwIndex, lpValueName, lpcbValueName, lpReserved, lpType, lpData, lpcbData)
regexpr:::::mask$ IN main$ [AT start&] TO iPos& [, iLen&]
regflushkey:::::(hKey)
reggetkeysecurity:::::(hKey, SecurityInformation, pSecurityDescriptor, lpcbSecurityDescriptor)
register:::::variable [AS Type] [, variable [AS Type]]
registerclass:::::(pcWndClass)
registerclassex:::::(pcWndClassEx)
registerclipboardformat:::::(lpString)
registerdevicenotification:::::(hRecipient, NotificationFilter, Flags)
registereventsource:::::(lpUNCServerName, lpSourceName)
registerhotkey:::::(hWnd, ID, fsModifiers, vk)
registerrawinputdevices:::::(pRawInputDevices, uiNumDevices, cbSize)
registerservicectrlhandler:::::(lpServiceName, lpHandlerProc)
registerservicectrlhandlerex:::::(lpServiceName, lpHandlerProc, lpContext)
registerwindowmessage:::::(lpString)
regloadkey:::::(hKey, lpSubKey, lpFile)
regnotifychangekeyvalue:::::(hKey, bWatchSubtree, dwNotifyFilter, hEvent, fAsynchronus)
regopencurrentuser:::::(samDesired, phkResult)
regopenkey:::::(hKey, lpSubKey, phkResult)
regopenkeyex:::::(hKey, lpSubKey, ulOptions, samDesired, phkResult)
regopenuserclassesroot:::::(hToken, dwOptions, samDesired, phkResult)
regoverridepredefkey:::::(hKey, hNewHKey)
regqueryinfokey:::::(hKey, lpClass, lpcbClass, lpReserved, lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime)
regquerymultiplevalues:::::(hKey, pvallist, numvals, lpValueBuf, pdwTotSize)
regquerymultiplevalues:::::(hKey, pvallist, numvals, lpValueBuf, pdwTotSize)
regqueryvalue:::::(hKey, lpSubKey, lpValue, lpcbValue)
regqueryvalueex:::::(hKey, lpValueName, lpReserved, lpType, lpData, lpcbData)
regrepl:::::mask$ IN main$ WITH repl$ [AT start&] TO iPos&, newmain$
regreplacekey:::::(hKey, lpSubKey, lpNewFile, lpOldFile)
regrestorekey:::::(hKey, lpFile, dwFlags)
regsavekey:::::(hKey, lpFile, lpSecurityAttributes)
regsavekeyex:::::(hKey, lpFile, lpSecurityAttributes, dwFlags)
regsetkeysecurity:::::(hKey, SecurityInformation, pSecurityDescriptor)
regsetvalue:::::(hKey, lpSubKey, dwType, lpData, cbData)
regsetvalueex:::::(hKey, lpValueName, dwReserved, dwType, lpData, cbData)
regunloadkey:::::(hKey, lpSubKey)
releasedc:::::(hWnd, hDC)
releasemutex:::::(hMutex)
releasesemaphore:::::(hSemaphore, lReleaseCount, lpPreviousCount)
rem:::::comment text
remain$:::::([position&,] main$, [ANY] match$)
remove$:::::(MainString, [ANY] MatchString)
removedirectory:::::(lpPathName)
removefontmemresourceex:::::(fh)
removefontresource:::::(lpFileName)
removefontresourceex:::::(lpFileName, fl, pdv)
removemenu:::::(hMenu, nPosition, wFlags)
removeprop:::::(hWnd, lpString)
repeat$:::::(count&, string_expr)
replace:::::[ANY] MatchString WITH NewString IN MainString
replacetext:::::(lpfr)
replymessage:::::(lReply)
reportevent:::::(hEventLog, wType, wCategory, dwEventId, lpUserSid, wNumStrings, dwDataSize, lpStrings, lpRawData)
requestwakeuplatency:::::(latency)
reset:::::variable [, ...]
resetdc:::::(hdc, lpInitData)
resetevent:::::(hEvent)
resetprinter:::::(hPrinter, pDefault)
resizepalette:::::(hPalette, nNumEntries)
restoredc:::::(hdc, nSavedDC)
resume:::::[Label | Next]
resumesuspendeddownload:::::( hRequest, dwResultCode)
resumethread:::::(hThread)
retain$:::::(main$, [ANY] match$)
retrieveurlcacheentryfile:::::( lpszUrlName, lpCacheEntryInfo, lpdwCacheEntryInfoBufferSize, dwReserved)
retrieveurlcacheentrystream:::::( lpszUrlName, lpCacheEntryInfo, lpdwCacheEntryInfoBufferSize, fRandomRead, dwReserved)
reuseddelparam:::::(lParam, msgIn, msgOut, uiLo, uiHi)
rgb:::::(bgrexpr&)
rgb:::::(red&, green&, blue&)
right$:::::(string_expression, n&)
rmdir:::::path
rnd:::::(a, b)
rnd:::::(numeric_expression)
rotate:::::{LEFT | RIGHT} ivar, Count
round(:::::numeric_expression, n)
roundrect:::::(hdc, X1, Y1, X2, Y2, X3, Y3)
rrecv:::::(s, buf, buflen, flags)
rrecv:::::(s, buf, buflen, flags)
rset$:::::(string_expression, strlen& [USING ustring_expression])
rset:::::[ABS] result_var = string_expression [USING ustring_expression]
rtrim$:::::(MainString [, [ANY] MatchString])
safearraygetdim:::::(psa)
safearraygetelement:::::(psa, rgIndices, pData)
safearraygetlbound:::::(psa, nDim, lbDim)
safearraygetubound:::::(psa, nDim, ubDim)
safearraylock:::::(psa)
safearrayredim:::::(psa, BoundNew)
safearrayunlock:::::(psa)
savedc:::::(hdc)
savefiledialog:::::(hWnd, sCaption, sFileSpec, sInitialDir, sFilter, sDefExtension, dFlags)
scaleviewportextex:::::(hdc, nXnum, nXdenom, nYnum, nYdenom, lpSize)
scalewindowextex:::::(hdc, nXnum, nXdenom, nYnum, nYdenom, lpSize)
schedulejob:::::(hPrinter, JobId)
scode_code:::::(sc)
scode_code:::::(sc) 
scode_facility:::::(hr)
scode_facility:::::(sc) 
scode_severity:::::(nStatus)
scode_severity:::::(sc) 
screentoclient:::::(hWnd, lpPoint)
scrollconsolescreenbuffer:::::(hConsoleOutput, lpScrollRectangle, lpClipRectangle, dwDestinationOrigin, lpFill)
scrolldc:::::(hDC, dx, dy, lprcScroll, lprcClip, hRgnUpdate, lprcUpdate)
scrollwindow:::::(hWnd, XAmount, YAmount, lpRect, lpClipRect)
scrollwindowex:::::(hWnd, dx, dy, lprcScroll, lprcClip, hRgnUpdate, lprcUpdate, fuScroll)
searchpath:::::(lpPath, lpFileName, lpExtension, nBufferLength, lpBuffer, lpFilePart)
second_ipaddress:::::(x)
second_ipaddress:::::(x)
seek:::::[#] filenum&, position&&
seek:::::([#] filenum&)
selectclippath:::::(hdc, iMode)
selectcliprgn:::::(hdc, hRgn)
selectobject:::::(hdc, hObject)
selectpalette:::::(hdc, hPalette, bForceBackground)
sendarp:::::(DestIP, SrcIP, pMacAddr, PhyAddrLen)
senddlgitemmessage:::::(hDlg, nIDDlgItem, wMsg, wParam, lParam)
senddrivermessage:::::(hDriver, message, lParam1, lParam2)
sendimemessageex:::::(hWnd, lParam)
sendimemessageexw:::::(hWnd, lParam)
sendinput:::::(cInputs, pInputs, cbSize)
sendmessage:::::(hWnd, dwMsg, wParam, lParam)
sendmessagecallback:::::(hWnd, dwMsg, wParam, lParam, lpResultCallBack, dwData)
sendmessagetimeout:::::(hWnd, dwMsg, wParam, lParam, fuFlags, uTimeout, lpdwResult)
sendnotifymessage:::::(hWnd, dwMsg, wParam, lParam)
sendto:::::(s, buf, buflen, flags, to_addr, tolen)
sendto:::::(s, buf, buflen, flags, to_addr, tolen)
setabortproc:::::(hDC, lpAbortProc)
setaclinformation:::::(pAcl, pAclInformation, nAclInformationLength, dwAclInformationClass)
setactivepwrscheme:::::(uiID, pGlobalPowerPolicy, pPowerPolicy)
setactivewindow:::::(hWnd)
setarcdirection:::::(hdc, ArcDirection)
setattr:::::filespec$, attribute
setbitmapbits:::::(hBitmap, dwCount, lpBits)
setbitmapdimensionex:::::(hbm, nX, nY, lpSize)
setbkcolor:::::(hdc, crColor)
setbkmode:::::(hdc, nBkMode)
setboundsrect:::::(hdc, lprcBounds, flags)
setbrushorgex:::::(hdc, nXOrg, nYOrg, lppt)
setcalendarinfo:::::(Locale, Calendar, CalType, lpCalData)
setcapture:::::(hWnd)
setcaretblinktime:::::(dwMillieconds)
setcaretpos:::::(x, y)
setclasslong:::::(hWnd, nIndex, dwNewLong)
setclassword:::::(hWnd, nIndex, wNewWord)
setclipboarddata:::::(dwFormat, hMem)
setclipboardviewer:::::(hWnd)
setcoloradjustment:::::(hdc, lpca)
setcolorspace:::::(hdc, hColorSpace)
setcommbreak:::::(nCid)
setcommconfig:::::(hCommDev, lpCC, dwSize)
setcommmask:::::(hFile, dwEventMask)
setcommstate:::::(hCommDev, lpDCB)
setcommtimeouts:::::(hFile, lpCommTimeouts)
setcomputername:::::(lpComputerName)
setconsoleactivescreenbuffer:::::(hConsoleOutput)
setconsolecp:::::(dwCodePageID)
setconsolectrlhandler:::::(HandlerRoutine, nAdd)
setconsolecursorinfo:::::(hConsoleOutput, lpConsoleCursorInfo)
setconsolecursorposition:::::(hConsoleOutput, dwCursorPosition)
setconsolemode:::::(hConsoleHandle, dwMode)
setconsoleoutputcp:::::(dwCodePageID)
setconsolescreenbuffersize:::::(hConsoleOutput, dwSize)
setconsoletextattribute:::::(hConsoleOutput, dwAttributes)
setconsoletitle:::::(lpConsoleTitle)
setconsolewindowinfo:::::(hConsoleOutput, bAbsolute, lpConsoleWindow)
setcriticalsectionspincount:::::(lpCriticalSection, dwSpinCount)
setcurrentdirectory:::::(lpPathName)
setcursor:::::(hCursor)
setcursorpos:::::(x, y)
setdcbrushcolor:::::(hdc, crColor)
setdcpencolor:::::(hdc, crColor)
setdebugerrorlevel:::::(dwLevel)
setdefaultcommconfig:::::(lpszName, lpCC, dwSize)
setdefaultprinter:::::(pszPrinter)
setdevicegammaramp:::::(hDC, lpRamp)
setdibcolortable:::::(hDC, uStartIndex, cEntries, pcRGBQuad)
setdibits:::::(hdc, hBitmap, nStartScan, nNumScans, lpBits, lpBI, wUsage)
setdibitstodevice:::::(hdc, x, y, dx, dy, SrcX, SrcY, xScan, NumScans, xBits, BitsInfo, wUsage)
setdlgitemint:::::(hDlg, nIDDlgItem, dwValue, bSigned)
setdlgitemtext:::::(hDlg, nIDDlgItem, lpString)
setdoubleclicktime:::::(uInterval)
setendoffile:::::(hFile)
setenhmetafilebits:::::(cbBuffer, lpData)
setentriesinacl:::::( cCountOfExplicitEntries, pListOfExplicitEntries, OldAcl, NewAcl)
setentriesinacl:::::( cCountOfExplicitEntries, pListOfExplicitEntries, OldAcl, NewAcl)
setenvironmentvariable:::::(lpName, lpValue)
seteof:::::[#] filenum&
seterrormode:::::(uMode)
setevent:::::(hEvent)
setfileattributes:::::(lpFileName, dwFileAttributes)
setfiledate:::::(sFileName, iYear, iMonth, iDay, iHour, iMinute, iSecond)
setfilepointer:::::(hFile, lDistanceToMove, lpDistanceToMoveHigh, dwMoveMethod)
setfilesecurity:::::(lpFileName, SecurityInformation, pSecurityDescriptor)
setfiletime:::::(hFile, lpCreationTime, lpLastAccessTime, lpLastWriteTime)
setfocus:::::(hWnd)
setforegroundwindow:::::(hWnd)
setform:::::(hPrinter, pFormName, Level, pForm)
setgraphicsmode:::::(hdc, iMode)
sethandlecount:::::(uNumber)
sethandleinformation:::::(hObject, dwMask, dwFlags)
seticmmode:::::(hdc, n)
seticmprofile:::::(hDC, lpFileName)
setifentry:::::(pIfRow)
setipforwardentry:::::(pRoute)
setipnetentry:::::(pArpEntry)
setipstatistics:::::(pIpStats)
setipttl:::::(nTTL)
setjob:::::(hPrinter, JobId, Level, pJob, COMMAND)
setkernelobjectsecurity:::::(xHandle, SecurityInformation, SecurityDescriptor)
setkeyboardstate:::::(lppbKeyState)
setlasterror:::::(dwErrCode)
setlasterrorex:::::(dwErrCode, dwType)
setlayeredwindowattributes:::::(hwnd, crKey, bAlpha, dwFlags)
setlocaleinfo:::::(Locale, LCType, lpLCData)
setlocaltime:::::(lpSystemTime)
setmailslotinfo:::::(hMailslot, lReadTimeout)
setmapmode:::::(hdc, nMapMode)
setmapperflags:::::(hdc, dwFlag)
setmenu:::::(hWnd, hMenu)
setmenucontexthelpid:::::(hMenu, dw)
setmenudefaultitem:::::(hMenu, uItem, fByPos)
setmenuinfo:::::(hmenu, lpcmi)
setmenuitembitmaps:::::(hMenu, nPosition, wFlags, hBitmapUnchecked, hBitmapChecked)
setmenuiteminfo:::::(hMenu, uItem, fByPosition, lpcMenuItemInfo)
setmessageextrainfo:::::(lParam)
setmessagequeue:::::(cMessagesMax)
setmetafilebitsex:::::(nSize, lpData)
setmetargn:::::(hdc)
setmiterlimit:::::(hdc, eNewLimit, peOldLimit)
setnamedpipehandlestate:::::(hNamedPipe, lpMode, lpMaxCollectionCount, lpCollectDataTimeout)
setnamedsecurityinfo:::::( pObjectName, ObjectType, SecurityInfo, ppsidOwner, ppsidGroup, ppDacl, ppSacl)
setpaletteentries:::::(hPalette, wStartIndex, wNumEntries, lpPaletteEntries)
setparent:::::(hWndChild, hWndNewParent)
setpixel:::::(hdc, x, y, crColor)
setpixelformat:::::(hDC, n, pcPixelFormatDescriptor)
setpixelv:::::(hdc, x, y, crColor)
setpolyfillmode:::::(hdc, nPolyFillMode)
setport:::::(pName, pPortName, dwLevel, pPortInfo)
setprinter:::::(hPrinter, Level, pPrinter, COMMAND)
setprinterdata:::::(hPrinter, pValueName, dwType, pData, cbData)
setprinterdataex:::::(hPrinter, pKeyName, pValueName, dwType, pData, cbData)
setpriorityclass:::::(hProcess, dwPriorityClass)
setprivateobjectsecurity:::::(SecurityInformation, ModificationDescriptor, ObjectsSecurityDescriptor, GenericMapping, Token)
setprocessaffinitymask:::::(hProcess, dwProcessAffinityMask)
setprocessdefaultlayout:::::(dwDefaultLayout)
setprocesspriorityboost:::::(hProcess, bDisablePriorityBoost)
setprocessshutdownparameters:::::(dwLevel, dwFlags)
setprocesswindowstation:::::(hWinSta)
setprocessworkingsetsize:::::(hProcess, dwMinimumWorkingSetSize, dwMaximumWorkingSetSize)
setprop:::::(hWnd, lpString, hData)
setrect:::::(lpRect, X1, Y1, X2, Y2)
setrectempty:::::(lpRect)
setrectrgn:::::(hRgn, X1, Y1, X2, Y2)
setrop2:::::(hdc, nDrawMode)
setscrollinfo:::::(hWnd, fnBar, lpcScrollInfo, fRedraw)
setscrollpos:::::(hWnd, nBar, nPos, bRedraw)
setscrollposhv:::::(hDlg)
setscrollrange:::::(hWnd, nBar, nMinPos, nMaxPos, bRedraw)
setscrollsize:::::(hDlg, w, h)
setsecuritydescriptordacl:::::(pSecurityDescriptor, bDaclPresent, pDacl, bDaclDefaulted)
setsecuritydescriptorgroup:::::(pSecurityDescriptor, pGroup, bGroupDefaulted)
setsecuritydescriptorowner:::::(pSecurityDescriptor, pOwner, bOwnerDefaulted)
setsecuritydescriptorsacl:::::(pSecurityDescriptor, bSaclPresent, pSacl, bSaclDefaulted)
setsecurityinfo:::::( shandle, ObjectType, SecurityInfo, ppsidOwner, ppsidGroup, ppDacl, ppSacl)
setservicebits:::::(hServiceStatus, dwServiceBits, bSetBitsOn, bUpdateImmediately)
setserviceobjectsecurity:::::(hService, dwSecurityInformation, lpSecurityDescriptor)
setservicestatus:::::(hServiceStatus, lpServiceStatus)
setsockopt:::::(s, level, optname, optval, optlen)
setsockopt:::::(s, level, optname, optval, optlen)
setstdhandle:::::(nStdHandle, nHandle)
setstretchbltmode:::::(hdc, nStretchMode)
setsuspendstate:::::(Hibernate, ForceCritical, DisableWakeEvent)
setsyscolors:::::(nChanges, lpSysColor, lpColorValues)
setsystemcursor:::::(hCur, ID)
setsystempaletteuse:::::(hdc, uUsage)
setsystempowerstate:::::(fSuspend, fForce)
setsystemtime:::::(lpSystemTime)
setsystemtimeadjustment:::::(dwTimeAdjustment, bTimeAdjustmentDisabled)
settapeparameters:::::(hDevice, dwOperation, lpTapeInformation)
settapeposition:::::(hDevice, dwPositionMethod, dwPartition, dwOffsetLow, dwOffsetHigh, bimmediate)
settcpentry:::::(pTcpRow)
settextalign:::::(hdc, dwFlags)
settextcharacterextra:::::(hdc, nCharExtra)
settextcolor:::::(hdc, crColor)
settextjustification:::::(hdc, nBreakExtra, nBreakCount)
setthreadaffinitymask:::::(hThread, dwThreadAffinityMask)
setthreadcontext:::::(hThread, lpContext)
setthreaddesktop:::::(hDesktop)
setthreadexecutionstate:::::(esFlags)
setthreadidealprocessor:::::(hThread, dwIdealProcessor)
setthreadlocale:::::(Locale)
setthreadpriority:::::(hThread, nPriority)
setthreadpriorityboost:::::(hThread, bDisablePriorityBoost)
setthreadtoken:::::(hThread, Token)
settimer:::::(hWnd, nIDEvent, uElapse, lpTimerFunc)
settimezoneinformation:::::(lpTimeZoneInformation)
settokeninformation:::::(TokenHandle, TokenInformationClass, TokenInformation, TokenInformationLength)
setunhandledexceptionfilter:::::(lpTopLevelExceptionFilter)
setupcomm:::::(hFile, dwInQueue, dwOutQueue)
seturlcacheentrygroup:::::( lpszUrlName, dwFlags, GroupId, pbGroupAttributes, cbGroupAttributes, lpReserved)
seturlcacheentryinfo:::::( lpszUrlName, lpCacheEntryInfo, dwFieldControl)
seturlcachegroupattribute:::::( gid, dwFlags, dwAttributes, lpGroupInfo, lpdwGroupInfo, lpReserved)
setusergeoid:::::(GeoClass)
setuserobjectinformation:::::(hObj, nIndex, pvInfo, nLength)
setuserobjectsecurity:::::(hObj, pSIRequested, pSd)
setviewportextex:::::(hdc, nX, nY, lpSize)
setviewportorgex:::::(hdc, nX, nY, lpPoint)
setvolumelabel:::::(lpRootPathName, lpVolumeName)
setwaitabletimer:::::(hTimer, lpDueTime, lPeriod, pfnCompletionRoutine, lpArgToCompletionRoutine, fResume)
setwindowcontexthelpid:::::(hWnd, dwContextHelpId)
setwindowextex:::::(hdc, nX, nY, lpSize)
setwindowlong:::::(hWnd, nIndex, lNewLong)
setwindoworgex:::::(hdc, nX, nY, lpPoint)
setwindowplacement:::::(hWnd, lpwndpl)
setwindowpos:::::(hWnd, hWndInsertAfter, x, y, cx, cy, wFlags)
setwindowrgn:::::(hWnd, hRgn, bRedraw)
setwindowshook:::::(nFilterType, pfnFilterProc)
setwindowshookex:::::(idHook, lpfn, hMod, dwThreadId)
setwindowtext:::::(hWnd, lpString)
setwindowword:::::(hWnd, nIndex, wNewWord)
setwineventhook:::::(eventMin, eventMax, hmodWinEventProc, pfnWinEventProc, idProcess, idThread, dwFlags)
setwinmetafilebits:::::(cbBuffer, lpbBuffer, hdcRef, lpmfp)
setworldtransform:::::(hdc, lpXform)
sgn:::::(numeric_expression)
shaddtorecentdocs:::::(uFlags, pv)
shappbarmessage:::::(dwMessage, pData)
shbindtoparent:::::(pidl, riid, ppv, ppidlLast)
shbrowseforfolder:::::(lpbi)
shchangenotify:::::(nEventId, uFlags, dwItem1, dwItem2)
shcreatedirectoryex:::::(hwnd, pszPath, psa)
shcreateprocessasuserw:::::(pscpi)
shcreateshellpalette:::::(hdc)
shdeleteemptykey:::::(hkey, pszSubKey)
shdeletekey:::::(hkey, pszSubKey)
shdeletevalue:::::(hkey, pszSubKey, pszValue)
shell:::::[HANDLES,] CmdString [, WndStyle, Exit TO exitcode&]
shell:::::([HANDLES,] CmdString [, WndStyle])
shell_notifyicon:::::(dwMessage, lpData)
shellabout:::::(hWnd, szApp, szOtherStuff, hIcon)
shellexecute:::::(hwnd, lpOperation, lpFile, lpParameters, lpDirectory, nShowCmd)
shellexecuteex:::::(lpShellInfo)
shemptyrecyclebin:::::(hwnd, pszRootPath, dwFlags)
shenableserviceobject:::::(rclsid, fEnable)
shenumerateunreadmailaccounts:::::(hKeyUser, dwIndex, pszMailAddress, cchMailAddress)
shenumkeyex:::::(hkey, dwIndex, pszName, pcchName)
shenumvalue:::::(hkey, dwIndex, pszValueName, pcchValueName, pdwType, pvData, pcbData)
shfileoperation:::::(lpFileOp)
shformatdrive:::::(hWnd, drive, fmtID, options)
shfreenamemappings:::::(hNameMappings)
shgetdesktopfolder:::::(ppshf)
shgetdiskfreespace:::::(pszVolume, pqwFreeCaller, pqwTot, pqwFree)
shgetdiskfreespaceex:::::(pszVolume, pqwFreeCaller, pqwTot, pqwFree)
shgetfileinfo:::::(pszPath, dwFileAttributes, psfi, cbFileInfo, uFlags)
shgetfolderpath:::::(hwndOwnder, nFolder, hToken, dwFlags, pszPath)
shgetfolderpathandsubdir:::::(hwndOwnder, csidl, hToken, dwFlags, pszSubDir, pszPath)
shgeticonoverlayindex:::::(pszIconPath, iIconIndex)
shgetimagelist:::::(iImageList, riid, ppvObj)
shgetinstanceexplorer:::::(ppunk)
shgetnewlinkinfo:::::(pszLinkto, pszDir, pszName, pfMustCopy, uFlags)
shgetpathfromidlist:::::(pidList, lpBuffer)
shgetsettings:::::(lpss, dwMask)
shgetspecialfolderlocation:::::(hwndOwner, nFolder, pidl)
shgetspecialfolderpath:::::(hwndowner, lpszPath, nFolder, fCreate)
shgetunreadmailcount:::::(hKeyUser, pszMailAddress, pdwCount, pFileTime, pszShellExecuteCommand, cchShellExecuteCommand)
shgetvalue:::::(hkey, pszSubKey, pszValue, pdwType, pvData, pcbData)
shift:::::[SIGNED] {LEFT | RIGHT} ivar, countexpr
shinvokeprintercommand:::::(hwnd, uAction, lpBuf1, lpBuf2, fModal)
shisfileavailableoffline:::::(pwszPath, pdwStatus)
shloadinproc:::::(rclsid)
shopenfolderandselectitems:::::(pdilFolder, cidl, apidl, dwFlags)
showcaret:::::(hWnd)
showcursor:::::(bShow)
showhidemenuctl:::::(hWnd, uFlags, lpInfo)
showownedpopups:::::(hWnd, fShow)
showscrollbar:::::(hWnd, iBar, bShow)
showwindow:::::(hWnd, nCmdShow)
showwindowasync:::::(hWnd, nCmdShow)
shparsedisplayname:::::(pszName, pbc, ppidl, sfgaoIn, psfgaoOut)
shqueryinfokey:::::(hkey, pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen)
shqueryrecyclebin:::::(pszRootPath, pSHQueryRBInfo)
shqueryvalueex:::::(hkey, pszValue, pdwReserved, pdwType, pvData, pcbData)
shregcloseuskey:::::(hUSKey)
shregcreateuskey:::::(pszPath, samDesired, hRelativeUSKey, phNewUSKey, dwFlags)
shregdeleteemptyuskey:::::(hUSKey, pszSubKey, delRegFlags)
shregdeleteusvalue:::::(hUSKey, pszValue, delRegFlags)
shregenumuskey:::::(hUSKey, dwIndex, pszName, pcchName, enumRegFlags)
shregenumusvalue:::::(hUSkey, dwIndex, pszValueName, pcchValueName, pdwType, pvData, pcbData, enumRegFlags)
shreggetboolusvalue:::::(pszSubKey, pszValue, fIgnoreHKCU, fDefault)
shreggetusvalue:::::(pszSubKey, pszValue, pdwType, pvData, pcbData, fIgnoreHKCU, pvDefaultData, dwDefaultDataSize)
shregopenuskey:::::(pszPath, samDesired, hRelativeUSKey, phNewUSKey, fIgnoreHKCU)
shregqueryinfouskey:::::(hUSKey, pcSubKeys, pcchMaxSubKeyLen, pcValues, pcchMaxValueNameLen, enumRegFlags)
shregqueryusvalue:::::(hUSKey, pszValue, pdwType, pvData, pcbData, fIgnoreHKCU, pvDefaultData, dwDefaultDataSize)
shregsetusvalue:::::(pszSubKey, pszValue, dwType, pvData, cbData, dwFlags)
shregwriteusvalue:::::(hUSKey, pszValue, dwType, pvData, cbData, dwFlags)
shsetunreadmailcount:::::(pszMailAddress, dwCount, pszShellExecuteCommand)
shsetvalue:::::(hkey, pszSubKey, pszValue, dwType, pvData, cbData)
shupdateimage:::::(pszHashItem, iIndex, uFlags, iImageIndex)
shutdown:::::(s, how)
shutdown:::::(s, how)
signalobjectandwait:::::(hObjectToSignal, hObjectToWaitOn, dwMilliseconds, bAlertable)
sin:::::(numeric_expression)
sizeof:::::(target)
sizeofresource:::::(hInstance, hResInfo)
sleep:::::m&
sleepex:::::(dwMilliseconds, bAlertable)
smtpgetline:::::(nTCP, Buffer)
sndplaysound:::::(lpszSoundName, uFlags)
socket:::::(af, s_type, protocol)
socket:::::(af, s_type, protocol)
space$:::::(numeric_expression)
splitpath:::::(Source, Fldrive, Flpath, Filename)
sqr:::::(numeric_expression)
sselect:::::(nfds, readfds, writefds, exceptfds, tymeout)
sselect:::::(nfds, readfds, writefds, exceptfds, tymeout)
ssend:::::(s, buf, buflen, flags)
ssend:::::(s, buf, buflen, flags)
startdoc:::::(hdc, lpdi)
startdocprinter:::::(hPrinter, Level, pDocInfo)
startpage:::::(hdc)
startpageprinter:::::(hPrinter)
startservice:::::(hService, dwNumServiceArgs, lpServiceArgVectors)
startservicectrldispatcher:::::(lpServiceStartTable)
static:::::variable[()] [, variable[()]] [, ...] AS Type
static:::::variable[()] [AS Type] [, variable[()]]
str$:::::(numeric_expression [, digits])
strchr:::::(lpStart, wMatch)
strchri:::::(lpStart, wMatch)
strcmpn:::::(lpStr1, lpStr2, nChar)
strcmpni:::::(lpStr1, lpStr2, nChar)
strcspn:::::(lpsz, lpSet)
strcspni:::::(lpsz, lpSet)
strdelete$:::::(string_expression, start&, count&)
strdup:::::(lpSrch)
stretchblt:::::(hdc, x, y, nWidth, nHeight, hSrcDC, xSrc, ySrc, nSrcWidth, nSrcHeight, dwRop)
stretchdibits:::::(hdc, x, y, dx, dy, SrcX, SrcY, nSrcWidth, nSrcHeight, lpBits, lpBitsInfo, uUsage, dwRop)
strformatbytesize:::::(dw, szBuf, uiBufSize)
strfromtimeinterval:::::(pszOut, cchMax, dwTimeMS, digits)
string$:::::(Count, {Code | string_expression})
strinsert$:::::(Main$, sNew$, position&)
strisintlequal:::::(fCaseSense, lpString1, lpString2, nChar)
strncat:::::(psz1, psz2, cchMax)
strokeandfillpath:::::(hdc)
strokepath:::::(hdc)
strpbrk:::::(psz, pszSet)
strptr:::::(StringVar)
strrchr:::::(lpStart, lpEnd, wMatch)
strrchri:::::(lpStart, lpEnd, wMatch)
strreverse$:::::(Main$)
strrstri:::::(lpSource, lpLast, lpSrch)
strspn:::::(psz, pszSet)
strstr:::::(lpFirst, lpSrch)
strstri:::::(lpFirst, lpSrch)
strtoint:::::(lpSrc)
strtointex:::::(pszString, dwFlags, piRet)
strtounicode:::::(x)
strtrim:::::(psz, pszTrimChars)
subtractrect:::::(lprcDst, lprcSrc1, lprcSrc2)
succeeded:::::(nStatus)
succeeded:::::(nStatus)
suspendthread:::::(hThread)
swap:::::var1, var2
swapbuffers:::::(hDC)
swapmousebutton:::::(bSwap)
switch$:::::(expr1, val1$ [[, expr2, val2$], ...])
switchdesktop:::::(hDesktop)
switchtofiber:::::(lpFiber)
sysallocstring:::::(sz)
sysallocstringbytelen:::::(psz, ulen)
sysallocstringlen:::::(pch, cch)
sysfreestring:::::(bstr)
sysreallocstring:::::(pbstr, psz)
sysreallocstringlen:::::(pbstr, psz, cch)
sysstringbytelen:::::(bstr)
sysstringlen:::::(bstr)
systemparametersinfo:::::(uAction, uParam, lpvParam, fuWinIni)
systemtimetofiletime:::::(lpSystemTime, lpFileTime)
systemtimetotzspecificlocaltime:::::(lpTimeZoneInformation, lpUniversalTime, lpLocalTime)
systemtimetovarianttime:::::(lpSystemTime, vbtime)
tab$:::::(strtotab$, tabstop&)
tabbedtextout:::::(hDC, x, y, lpString, nCount, nTabPositions, lpnTabStopPositions, nTabOrigin)
tabctrl_adjustrect:::::(hwnd, bLarger, prc)
tabctrl_adjustrect:::::(hwnd, bLarger, prc)
tabctrl_deleteallitems:::::(hwnd)
tabctrl_deleteallitems:::::(hwnd)
tabctrl_deleteitem:::::(hwnd, iItem)
tabctrl_deleteitem:::::(hwnd, iItem)
tabctrl_deselectall:::::(hwnd, fExcludeFocus)
tabctrl_getcurfocus:::::(hwnd)
tabctrl_getcurfocus:::::(hwnd)
tabctrl_getcursel:::::(hwnd)
tabctrl_getcursel:::::(hwnd)
tabctrl_getextendedstyle:::::(hwnd)
tabctrl_getextendedstyle:::::(hwnd)
tabctrl_getimagelist:::::(hWnd)
tabctrl_getimagelist:::::(hWnd)
tabctrl_getitem:::::(hwnd, iItem, pItem)
tabctrl_getitem:::::(hwnd, iItem, pItem)
tabctrl_getitemcount:::::(hWnd)
tabctrl_getitemcount:::::(hWnd)
tabctrl_getitemrect:::::(hwnd, i, prc)
tabctrl_getitemrect:::::(hwnd, i, prc)
tabctrl_getrowcount:::::(hwnd)
tabctrl_getrowcount:::::(hwnd)
tabctrl_gettooltips:::::(hwnd)
tabctrl_gettooltips:::::(hwnd)
tabctrl_getunicodeformat:::::(hwnd)
tabctrl_getunicodeformat:::::(hwnd)
tabctrl_highlightitem:::::(hwnd, i, fHighlight)
tabctrl_highlightitem:::::(hwnd, i, fHighlight)
tabctrl_hittest:::::(hwndTC, pinfo)
tabctrl_hittest:::::(hwndTC, pinfo)
tabctrl_insertitem:::::(hwnd, iItem, pItem)
tabctrl_insertitem:::::(hwnd, iItem, pItem)
tabctrl_removeimage:::::(hwnd, i)
tabctrl_setcurfocus:::::(hwnd, i)
tabctrl_setcursel:::::(hwnd, i)
tabctrl_setcursel:::::(hwnd, i)
tabctrl_setextendedstyle:::::(hwnd, dw)
tabctrl_setextendedstyle:::::(hwnd, dw)
tabctrl_setimagelist:::::(hWnd, himl)
tabctrl_setimagelist:::::(hWnd, himl)
tabctrl_setitem:::::(hwnd, iItem, pItem)
tabctrl_setitem:::::(hwnd, iItem, pItem)
tabctrl_setitemextra:::::(hwndTC, cb)
tabctrl_setitemextra:::::(hwndTC, cb)
tabctrl_setitemsize:::::(hwnd, x, y)
tabctrl_setitemsize:::::(hwnd, x, y)
tabctrl_setmintabwidth:::::(hwnd, x)
tabctrl_setmintabwidth:::::(hwnd, x)
tabctrl_setpadding:::::(hwnd, cx, cy)
tabctrl_settooltips:::::(hwnd, hwndTT)
tabctrl_setunicodeformat:::::(hwnd, fUnicode)
tabctrl_setunicodeformat:::::(hwnd, fUnicode)
tally:::::(MainString, [ANY] MatchString)
tan:::::(numeric_expression)
tcpgetline:::::(nTCP, Buffer)
terminateprocess:::::(hProcess, uExitCode)
terminatethread:::::(hThread, dwExitCode)
textout:::::(hdc, x, y, lpString, nCount)
then:::::{Sub | Label | statements}
third_ipaddress:::::(x)
third_ipaddress:::::(x)
thread32first:::::(hSnapshot, lpte)
thread32next:::::(hSnapshot, lpte)
threaded:::::variable[()] [, variable[()]] [, ...] AS Type
tilewindows:::::(hwndParent, dwHow, lpRect, cKids, lpKids)
timebeginperiod:::::(uPeriod)
timeendperiod:::::(uPeriod)
timegetdevcaps:::::(lpTimeCaps, uSize)
timegetsystemtime:::::(lpTime, uSize)
timekillevent:::::(uId)
timerclear:::::(tvp)
timerisset:::::(tvp)
timesetevent:::::(uDelay, uResolution, lpAS DWORD, dwUser, uFlags)
tix:::::QuadVar
tlsfree:::::(dwTlsIndex)
tlsgetvalue:::::(dwTlsIndex)
tlssetvalue:::::(dwTlsIndex, lpTlsValue)
toascii:::::(uVirtKey, uScanCode, lpbKeyState, lpwTransKey, fuState)
toasciiex:::::(uVirtKey, uScanCode, lpKeyState, lpChar, uFlags, dwHKL)
toolhelp32readprocessmemory:::::(th32ProcessID, lpBaseAddress, lpBuffer, cbRead, lpNumberOfBytesRead)
tounicode:::::(uVirtKey, uScanCode, lpKeyState, pwszBuff, cchBuff, uFlags)
tounicodeex:::::(uVirtKey, uScanCode, lpKeyState, pwszBuff, cchBuff, uFlags, dwhkl)
trackmouseevent:::::(lpEventTrack)
trackmouseevent:::::(lpEventTrack)
trackpopupmenu:::::(hMenu, uFlags, x, y, nReserved, hWnd, lprc)
trackpopupmenuex:::::(hMenu, uFlags, x, y, hWnd, lpTPMParams)
transactnamedpipe:::::(hNamedPipe, lpInBuffer, nInBufferSize, lpOutBuffer, nOutBufferSize, lpBytesRead, lpOverlapped)
translateaccelerator:::::(hWnd, hAccTable, lpMsg)
translatecharsetinfo:::::(lpSrc, lpcs, dwFlags)
translatemdisysaccel:::::(hWndClient, lpMsg)
translatemessage:::::(lpMsg)
translatename:::::( lpAccountName, AccountNameFormat, DesiredNameFormat, lpTranslatedName, nSize)
transmitcommchar:::::(nCid, cChar)
transmitfile:::::(hSocket, hFile, nNumberOfBytesToWrite, nNumberOfBytesToSend, lpOverlapped, lpTransmitBuffers, dwReserved)
transparentblt:::::(hdcDest, nXOriginDest, nYOriginDest, nWidthDest, hHeightDest, hdcSrc, nXOriginSrc, nYOriginSrc, nWidthSrc, nHeightSrc, crTransparent)
treeview_createdragimage:::::(hwnd, hitem)
treeview_createdragimage:::::(hwnd, hitem)
treeview_deleteallitems:::::(hWnd)
treeview_deleteallitems:::::(hWnd)
treeview_deleteitem:::::(hWnd, hitem)
treeview_deleteitem:::::(hWnd, hitem)
treeview_editlabel:::::(hwnd, hitem)
treeview_editlabel:::::(hwnd, hitem)
treeview_endeditlabelnow:::::(hwnd, fCancel)
treeview_endeditlabelnow:::::(hwnd, fCancel)
treeview_ensurevisible:::::(hwnd, hitem)
treeview_ensurevisible:::::(hwnd, hitem)
treeview_expand:::::(hWnd, hitem, CODE)
treeview_expand:::::(hWnd, hitem, CODE)
treeview_getbkcolor:::::(hwnd)
treeview_getbkcolor:::::(hwnd)
treeview_getcheckstate:::::(hwndTV, hti)
treeview_getcheckstate:::::(hwndTV, hti)
treeview_getchild:::::(hwnd, hitem)
treeview_getchild:::::(hwnd, hitem)
treeview_getcount:::::(hWnd)
treeview_getcount:::::(hWnd)
treeview_getdrophilight:::::(hwnd)
treeview_getdrophilight:::::(hwnd)
treeview_geteditcontrol:::::(hwnd)
treeview_geteditcontrol:::::(hwnd)
treeview_getfirstvisible:::::(hwnd)
treeview_getfirstvisible:::::(hwnd)
treeview_getimagelist:::::(hWnd, iImage)
treeview_getimagelist:::::(hWnd, iImage)
treeview_getindent:::::(hWnd)
treeview_getindent:::::(hWnd)
treeview_getinsertmarkcolor:::::(hwnd)
treeview_getinsertmarkcolor:::::(hwnd)
treeview_getisearchstring:::::(hwndTV, lpsz)
treeview_getitem:::::(hwnd, pitem)
treeview_getitem:::::(hwnd, pitem)
treeview_getitemheight:::::(hwnd)
treeview_getitemheight:::::(hwnd)
treeview_getitemrect:::::(hWnd, hItem, prc, CODE)
treeview_getitemrect:::::(hWnd, hItem, prc, CODE)
treeview_getitemstate:::::(hwndTV, hti, mask)
treeview_getitemstate:::::(hwndTV, hti, mask)
treeview_getlastvisible:::::(hwnd)
treeview_getlastvisible:::::(hwnd)
treeview_getlinecolor:::::(hwnd)
treeview_getlinecolor:::::(hwnd)
treeview_getnextitem:::::(hWnd, hitem, CODE)
treeview_getnextitem:::::(hWnd, hitem, CODE)
treeview_getnextsibling:::::(hwnd, hitem)
treeview_getnextsibling:::::(hwnd, hitem)
treeview_getnextvisible:::::(hwnd, hitem)
treeview_getnextvisible:::::(hwnd, hitem)
treeview_getparent:::::(hwnd, hitem)
treeview_getparent:::::(hwnd, hitem)
treeview_getprevsibling:::::(hwnd, hitem)
treeview_getprevsibling:::::(hwnd, hitem)
treeview_getprevvisible:::::(hwnd, hitem)
treeview_getprevvisible:::::(hwnd, hitem)
treeview_getroot:::::(hwnd)
treeview_getroot:::::(hwnd)
treeview_getscrolltime:::::(hwnd)
treeview_getscrolltime:::::(hwnd)
treeview_getselection:::::(hwnd)
treeview_getselection:::::(hwnd)
treeview_gettextcolor:::::(hwnd)
treeview_gettextcolor:::::(hwnd)
treeview_gettooltips:::::(hwnd)
treeview_gettooltips:::::(hwnd)
treeview_getunicodeformat:::::(hwnd)
treeview_getunicodeformat:::::(hwnd)
treeview_getvisiblecount:::::(hWnd)
treeview_getvisiblecount:::::(hWnd)
treeview_hittest:::::(hwnd, lpht)
treeview_hittest:::::(hwnd, lpht)
treeview_insertitem:::::(hWnd, lpis)
treeview_insertitem:::::(hWnd, lpis)
treeview_select:::::(hwnd, hitem, CODE)
treeview_select:::::(hwnd, hitem, CODE)
treeview_selectdroptarget:::::(hwnd, hitem)
treeview_selectdroptarget:::::(hwnd, hitem)
treeview_selectitem:::::(hwnd, hitem)
treeview_selectitem:::::(hwnd, hitem)
treeview_selectsetfirstvisible:::::(hwnd, hitem)
treeview_selectsetfirstvisible:::::(hwnd, hitem)
treeview_setbkcolor:::::(hwnd, clr)
treeview_setbkcolor:::::(hwnd, clr)
treeview_setcheckstate:::::(hwndTV, hti, fCheck)
treeview_setcheckstate:::::(hwndTV, hti, fCheck)
treeview_setimagelist:::::(hWnd, himl, iImage)
treeview_setimagelist:::::(hWnd, himl, iImage)
treeview_setindent:::::(hWnd, indent)
treeview_setindent:::::(hWnd, indent)
treeview_setinsertmark:::::(hwnd, hItem, fAfter)
treeview_setinsertmark:::::(hwnd, hItem, fAfter)
treeview_setinsertmarkcolor:::::(hwnd, clr)
treeview_setinsertmarkcolor:::::(hwnd, clr)
treeview_setitem:::::(hwnd, pitem)
treeview_setitem:::::(hwnd, pitem)
treeview_setitemheight:::::(hwnd, iHeight)
treeview_setitemheight:::::(hwnd, iHeight)
treeview_setitemstate:::::(hwndTV, hti, STATE, statemask)
treeview_setitemstate:::::(hwndTV, hti, STATE, statemask)
treeview_setlinecolor:::::(hwnd, clr)
treeview_setlinecolor:::::(hwnd, clr)
treeview_setscrolltime:::::(hwnd, uTime)
treeview_setscrolltime:::::(hwnd, uTime)
treeview_settextcolor:::::(hwnd, clr)
treeview_settextcolor:::::(hwnd, clr)
treeview_settooltips:::::(hwnd, hwndTT)
treeview_settooltips:::::(hwnd, hwndTT)
treeview_setunicodeformat:::::(hwnd, fUnicode)
treeview_setunicodeformat:::::(hwnd, fUnicode)
treeview_sortchildren:::::(hwnd, hitem, recurse)
treeview_sortchildren:::::(hwnd, hitem, recurse)
treeview_sortchildrencb:::::(hwnd, psort, recurse)
treeview_sortchildrencb:::::(hwnd, psort, recurse)
trim$:::::(OldString$ [, [ANY] CharsToTrim$])
tryentercriticalsection:::::(lpCriticalSection)
type:::::MyType [BYTE | WORD | Dword | QWORD] [FILL]
ubound:::::(Array [(dimension)])
ucase$:::::(string_expression [,ANSI | OEM])
ucode$:::::(AnsiStrExpression [,CodePage&])
ucodepage:::::numexpr [TO prevpage&]
unenablerouter:::::(pOverlapped, lpdwEnableCount)
unhandledexceptionfilter:::::(ExceptionInfo)
unhookwindowshook:::::(nCode, pfnFilterProc)
unhookwindowshookex:::::(hHook)
unhookwinevent:::::(hWinEventHook)
unicodetostr:::::(dw, length)
uninitializeflatsb:::::(hWnd)
unionrect:::::(lpDestRect, lpSrc1Rect, lpSrc2Rect)
unloadkeyboardlayout:::::(HKL)
unlock:::::[#] filenum& [, {record&& | start&& TO end&&}]
unlockfile:::::(hFile, dwFileOffsetLow, dwFileOffsetHigh, nNumberOfBytesToUnlockLow, nNumberOfBytesToUnlockHigh)
unlockfileex:::::(hFile, dwReserved, nNumberOfBytesToUnlockLow, nNumberOfBytesToUnlockHigh, lpOverlapped)
unlockservicedatabase:::::(ScLock)
unlockurlcacheentryfile:::::( lpszUrlName, dwReserved)
unlockurlcacheentrystream:::::( hUrlCacheStream, dwReserved)
unmapviewoffile:::::(lpBaseAddress)
unpackddelparam:::::(msg, lParam, puiLo, puiHi)
unrealizeobject:::::(hObject)
unregisterclass:::::(lpClassName, hInstance)
unregisterdevicenotification:::::(hHandle)
unregisterhotkey:::::(hWnd, ID)
updatecolors:::::(hdc)
updateicmregkey:::::(dwReserved, lpszCMID, lpszFileName, nCommand)
updatelayeredwindow:::::(hWnd, hdcDst, pptDst, psize, hdcSrc, pptSrc, crKey, pblend, dwFlags)
updateresource:::::(hUpdate, lpType, lpName, wLanguage, lpData, cbData)
updatewindow:::::(hWnd)
urldownloadtofile:::::(pCaller, szURL, szFileName, dwReserved, lpfnCB)
userhandlegrantaccess:::::(hUserHandle, hJob, bGrant)
using$:::::(fmtmask$, expr [, expr [, ...]])
val:::::(string_expression)
validatepowerpolicies:::::(pGlobalPowerPolicy, pPowerPolicy)
validaterect:::::(hWnd, lpRect)
validatergn:::::(hWnd, hRgn)
varbstrfromdec:::::(pdecIn, lcid, dwFlags, pbstrOut)
vardatefromstr:::::(OleString, lcid, dwFlags, pDate)
vardecfromstr:::::(strIn, lcid, dwFlags, pdecOut)
variant#:::::(vrntvar)
variant$:::::(vrntvar)
varianttimetodosdatetime:::::(vbTime, pwDosDate, pwDosTime)
varianttimetosystemtime:::::(vbtime, lpSystemTime)
variantvt:::::(vrntvar)
varptr:::::(variable)
vb2darrayredim:::::(psa, Elems)
vbarrayfirstelem:::::(psa)
vbarraylbound:::::(psa, nDim)
vbarrayredim:::::(psa, Elems)
vbarrayubound:::::(psa, nDim)
vbstringtopb:::::(hndle)
verfindfile:::::(uFlags, szFileName, szWinDir, szAppDir, szCurDir, lpuCurDirLen, szDestDir, lpuDestDirLen)
verify:::::([start&,] MainString, MatchString)
verifyversioninfo:::::(lpVersionInformation, dwTypeMask, dwlConditionMask)
verinstallfile:::::(uFlags, szSrcFileName, szDestFileName, szSrcDir, szDestDir, szCurDir, szTmpFile, lpuTmpFileLen)
verlanguagename:::::(dwLang, szLang, nSize)
verqueryvalue:::::(pBlock, lpSubBlock, lplpBuffer, puLen)
versetconditionmask:::::(ConditionMask, TypeMask, Condition)
virtualalloc:::::(lpAddress, dwSize, flAllocationType, flProtect)
virtualallocex:::::(hProcess, lpAddress, dwSize, flAllocationType, flProtect)
virtualfree:::::(lpAddress, dwSize, dwFreeType)
virtualfreeex:::::(hProcess, lpAddress, dwSize, dwFreeType)
virtuallock:::::(lpAddress, dwSize)
virtualprotect:::::(lpAddress, dwSize, flNewProtect, lpflOldProtect)
virtualprotectex:::::(hProcess, lpAddress, dwSize, flNewProtect, lpflOldProtect)
virtualquery:::::(lpAddress, lpBuffer, dwLength)
virtualqueryex:::::(hProcess, lpAddress, lpBuffer, dwLength)
virtualunlock:::::(lpAddress, dwSize)
vkkeyscan:::::(cChar)
vkkeyscanex:::::(ch, dwHKL)
vp_onhscroll:::::(hWnd, wParam, lParam)
vp_onhscroll:::::(hWnd, wParam, lParam)
vp_onmousewheel:::::(hWnd, wParam, lParam)
vp_onmousewheel:::::(hWnd, wParam, lParam)
vp_onvscroll:::::(hWnd, wParam, lParam)
vp_onvscroll:::::(hWnd, wParam, lParam)
waitcommevent:::::(hFile, lpEvtMask, lpOverlapped)
waitfordebugevent:::::(lpde, dwTimeout)
waitforinputidle:::::(hProcess, dwMilliseconds)
waitformultipleobjects:::::(nCount, lpHandles, bWaitAll, dwMilliseconds)
waitformultipleobjectsex:::::(nCount, lpHandles, bWaitAll, dwMilliseconds, bAlertable)
waitforprinterchange:::::(hPrinter, flags)
waitforsingleobject:::::(hHandle, dwMilliseconds)
waitforsingleobjectex:::::(hHandle, dwMilliseconds, bAlertable)
waitnamedpipe:::::(lpNamedPipeName, nTimeOut)
waveinaddbuffer:::::(hWaveIn, lpWaveInHdr, uSize)
waveinclose:::::(hWaveIn)
waveingetdevcaps:::::(uDeviceID, lpCaps, uSize)
waveingeterrortext:::::(xerr, lpText, uSize)
waveingetid:::::(hWaveIn, lpuDeviceId)
waveingetposition:::::(hWaveIn, lpInfo, uSize)
waveinmessage:::::(hWaveIn, uMsg, dwParam1, dwParam2)
waveinopen:::::(lphWaveIn, uDeviceID, lpFormat, dwCallback, dwInstance, dwFlags)
waveinprepareheader:::::(hWaveIn, lpWaveInHdr, uSize)
waveinreset:::::(hWaveIn)
waveinstart:::::(hWaveIn)
waveinstop:::::(hWaveIn)
waveinunprepareheader:::::(hWaveIn, lpWaveInHdr, uSize)
waveoutbreakloop:::::(hWaveOut)
waveoutclose:::::(hWaveOut)
waveoutgetdevcaps:::::(uDeviceID, lpCaps, uSize)
waveoutgeterrortext:::::(xerr, lpText, uSize)
waveoutgetid:::::(hWaveOut, lpuDeviceID)
waveoutgetpitch:::::(hWaveOut, lpdwPitch)
waveoutgetplaybackrate:::::(hWaveOut, lpdwRate)
waveoutgetposition:::::(hWaveOut, lpInfo, uSize)
waveoutgetvolume:::::(uDeviceID, lpdwVolume)
waveoutmessage:::::(hWaveOut, uMsg, dwParam1, dwParam2)
waveoutopen:::::(lphWaveOut, uDeviceID, lpFormat, dwCallback, dwInstance, dwFlags)
waveoutpause:::::(hWaveOut)
waveoutprepareheader:::::(hWaveOut, lpWaveOutHdr, uSize)
waveoutreset:::::(hWaveOut)
waveoutrestart:::::(hWaveOut)
waveoutsetpitch:::::(hWaveOut, dwPitch)
waveoutsetplaybackrate:::::(hWaveOut, dwRate)
waveoutsetvolume:::::(uDeviceID, dwVolume)
waveoutunprepareheader:::::(hWaveOut, lpWaveOutHdr, uSize)
waveoutwrite:::::(hWaveOut, lpWaveOutHdr, uSize)
wend:::::
wglcopycontext:::::(hglrcSrc, hlglrcDst, dMask)
wglcreatecontext:::::(hdc)
wglcreatelayercontext:::::(hdc, iLayerPlane)
wgldeletecontext:::::(hglrc)
wgldescribelayerplane:::::(hdc, iPixelFormat, iLayerPlane, nBytes, plpd)
wglgetlayerpaletteentries:::::(hdc, iLayerPlane, iStart, cEntries, pcr)
wglgetprocaddress:::::(lpszProc)
wglmakecurrent:::::(hdc, hglrc)
wglrealizelayerpalette:::::(hdc, iLayerPlane, fRealize)
wglsetlayerpaletteentries:::::(hdc, iLayerPlane, iStart, cEntries, pcr)
wglsharelists:::::(hglrc1, hglrc2)
wglswaplayerbuffers:::::(hdc, dfPlanes)
wglusefontbitmaps:::::(hdc, dFirst, dCount, dListBase)
wglusefontoutlines:::::(hdc, dFirst, dCount, dListBase, deviation, extrusion, iFormat, lpgmf)
while:::::integer_expression
widechartomultibyte:::::(CodePag, dwFlags, lpWideCharStr, cchWideChar, lpMultiByteStr, cchMultiByte, lpDefaultChar, lpUsedDefaultChar)
widechartomultibyte:::::(CodePage, dwFlags, lpWideCharStr, cchWideChar, lpMultiByteStr, cchMultiByte, lpDefaultChar, lpUsedDefaultChar)
widenpath:::::(hdc)
winbeep:::::(dwFreq, dwDuration)
windowfromdc:::::(hDC)
windowfrompoint:::::(xPoint, yPoint)
windowmessage:::::(MsgNum)
winerrormsg:::::(ErCode)
winexec:::::(lpCmdLine, nCmdShow)
winexecerror:::::(hwnd, xerror, lpstrFileName, lpstrTitle)
winhelp:::::(hWnd, lpHelpFile, uCommand, dwData)
winhttpaddrequestheaders:::::( hRequest, pwszHeaders, dwHeadersLength, dwModifiers)
winhttpaddrequestheaders:::::( hRequest, pwszHeaders, dwHeadersLength, dwModifiers)
winhttpclosehandle:::::(hInternet)
winhttpconnect:::::( hSession, pswzServerName, nServerPort, dwReserved)
winhttpconnect:::::( hSession, pswzServerName, nServerPort, dwReserved)
winhttpcrackurl:::::( pwszUrl, dwUrlLength, dwFlags, lpUrlComponents)
winhttpcrackurl:::::( pwszUrl, dwUrlLength, dwFlags, lpUrlComponents)
winhttpcreateurl:::::( lpUrlComponents, dwFlags, pwszUrl, lpdwUrlLength)
winhttpcreateurl:::::( lpUrlComponents, dwFlags, pwszUrl, lpdwUrlLength)
winhttpdetectautoproxyconfigurl:::::( dwAutoDetectFlags, ppwszAutoConfigUrl)
winhttpgetdefaultproxyconfiguration:::::(pProxyInfo)
winhttpgetieproxyconfigforcurrentuser:::::(pProxyConfig)
winhttpgetproxyforurl:::::( hSession, lpcwszUrl, pAutoProxyOptions, pProxyInfo)
winhttpgetproxyforurl:::::( hSession, lpcwszUrl, pAutoProxyOptions, pProxyInfo)
winhttpopen:::::( pwszUserAgent, dwAccessType, pwszProxyName, pwszProxyBypass, dwFlags)
winhttpopen:::::( pwszUserAgent, dwAccessType, pwszProxyName, pwszProxyBypass, dwFlags)
winhttpopenrequest:::::( hConnect, pwszVerb, pwszObjectName, pwszVersion, pwszReferrer, ppwszAcceptTypes, dwFlags)
winhttpopenrequest:::::( hConnect, pwszVerb, pwszObjectName, pwszVersion, pwszReferrer, ppwszAcceptTypes, dwFlags)
winhttpqueryauthparams:::::( hRequest, AuthScheme, pAuthParams)
winhttpqueryauthschemes:::::( hRequest, lpdwSupportedSchemes, lpdwFirstScheme, pdwAuthTarget)
winhttpquerydataavailable:::::( hRequest, lpdwNumberOfBytesAvailable)
winhttpqueryheaders:::::( hRequest, dwInfoLevel, pwszName, lpBuffer, lpdwBufferLength, lpdwIndex)
winhttpqueryheaders:::::( hRequest, dwInfoLevel, pwszName, lpBuffer, lpdwBufferLength, lpdwIndex)
winhttpqueryoption:::::( hInternet, dwOption, lpBuffer, lpdwBufferLength)
winhttpreaddata:::::( hRequest, lpBuffer, dwNumberOfBytesToRead, lpdwNumberOfBytesRead)
winhttpreceiveresponse:::::( hRequest, lpReserved)
winhttpsendrequest:::::( hRequest, pwszHeaders, dwHeadersLength, lpOptional, dwOptionalLength, dwTotalLength, dwContext)
winhttpsendrequest:::::( hRequest, pwszHeaders, dwHeadersLength, lpOptional, dwOptionalLength, dwTotalLength, dwContext)
winhttpsetcredentials:::::( hRequest, AuthTargets, AuthScheme, pwszUserName, pwszPassword, pAuthParams)
winhttpsetcredentials:::::( hRequest, AuthTargets, AuthScheme, pwszUserName, pwszPassword, pAuthParams)
winhttpsetdefaultproxyconfiguration:::::(pProxyInfo)
winhttpsetoption:::::( hInternet, dwOption, lpBuffer, dwBufferLength)
winhttpsetstatuscallback:::::( hInternet, lpfnInternetCallback, dwNotificationFlags, dwReserved)
winhttpsettimeouts:::::( hInternet, nResolveTimeout, nConnectTimeout, nSendTimeout, nReceiveTimeout)
winhttptimefromsystemtime:::::( pst, pwszTime)
winhttptimefromsystemtime:::::( pst, pwszTime)
winhttptimetosystemtime:::::( pwszTime, pst)
winhttptimetosystemtime:::::( pwszTime, pst)
winhttpwritedata:::::( hRequest, lpBuffer, dwNumberOfBytesToWrite, lpdwNumberOfBytesWritten)
wlxactivateusershell alias "wlxactivateusershell":::::( pWlxContext, pszDesktopName, UnicodeZ string pointer
wlxdisconnectnotify alias "wlxdisconnectnotify":::::( pWlxContext)
wlxdisplaylockednotice alias "wlxdisplaylockednotice":::::( pWlxContext)
wlxdisplaysasnotice alias "wlxdisplaysasnotice":::::( pWlxContext)
wlxdisplaystatusmessage alias "wlxdisplaystatusmessage":::::( pWlxContext, hDesktop, dwOptions, pTitle, UnicodeZ string pointer
wlxgetconsoleswitchcredentials alias "wlxgetconsoleswitchcredentials":::::( pWlxContext, pCredInfo)
wlxgetstatusmessage alias "wlxgetstatusmessage":::::( pWlxContext, pdwOptions, pMessage, UnicodeZ string pointer
wlxinitialize alias "wlxinitialize":::::( lpWinsta, UnicodeZ string pointer
wlxislockok alias "wlxislockok":::::( pWlxContext)
wlxislogoffok alias "wlxislogoffok":::::( pWlxContext)
wlxloggedonsas alias "wlxloggedonsas":::::( pWlxContext, dwSasType, pReserved)
wlxloggedoutsas alias "wlxloggedoutsas":::::( pWlxContext,dwSasType, pAuthenticationId, pLogonSid, SID is a pseudo-type
wlxlogoff alias "wlxlogoff":::::( pWlxContext)
wlxnegotiate alias "wlxnegotiate":::::( dwWinlogonVersion, pdwDllVersion)
wlxnetworkproviderload alias "wlxnetworkproviderload":::::( pWlxContext, pNprNotifyInfo)
wlxreconnectnotify alias "wlxreconnectnotify":::::( pWlxContext)
wlxremovestatusmessage alias "wlxremovestatusmessage":::::(pWlxContext)
wlxscreensavernotify alias "wlxscreensavernotify":::::( pWlxContext, pSecure)
wlxshutdown alias "wlxshutdown":::::( pWlxContext, ShutdownType)
wlxstartapplication alias "wlxstartapplication":::::( pWlxContext, pszDesktopName, UnicodeZ string pointer
wlxwkstalockedsas alias "wlxwkstalockedsas":::::( pWlxContext, dwSasType)
wnetaddconnection:::::(lpszRemoteName, lpszPassword, lpszLocalName)
wnetaddconnection2:::::(lpszNetResource, lpszPassword, lpszUserName, dwFlags)
wnetaddconnection3:::::(hwndOwner, lpszNetResource, lpszPassword, lpszUserName, dwFlags)
wnetcancelconnection:::::(lpszName, fForce)
wnetcancelconnection2:::::(lpName, dwFlags, fForce)
wnetcloseenum:::::(hEnum)
wnetconnectiondialog:::::(hwnd, dwType)
wnetconnectiondialog1:::::(lpConnDlgStruct)
wnetdisconnectdialog:::::(hwnd, dwType)
wnetdisconnectdialog1:::::(lpConnDlgStruct)
wnetenumresource:::::(hEnum, lpcCount, lpBuffer, lpBufferSize)
wnetgetconnection:::::(lpszLocalName, lpszRemoteName, lpnLength)
wnetgetlasterror:::::(lpError, lpErrorBuf, nErrorBufSize, lpNameBuf, nNameBufSize)
wnetgetnetworkinformation:::::(lpszProvider, lpNetInfoStruct)
wnetgetprovidername:::::(dwNetType, lpProviderName, lpBufferSize)
wnetgetresourceinformation:::::(lpNetResource, lpBuffer, lpcbBuffer, lplpSystem)
wnetgetresourceparent:::::(lpNetResource, lpBuffer, lpcbBuffer)
wnetgetuniversalname:::::(lpLocalPath, dwInfoLevel, lpBuffer, lpBufferSize)
wnetgetuser:::::(lpName, lpUserName, lpnLength)
wnetopenenum:::::(dwScope, dwType, dwUsage, lpNetResource, lphEnum)
wnetuseconnection:::::(hwndOwner, lpNetResource, lpszUserID, lpszPassword, dwFlags, lpszAccessName, lpBufferSize, lpResult)
wpbindtosite:::::( hwnd, sSiteName, sSitePostingURL, dwFlag, dwReserved, ppvUnk)
wpcreatesite:::::( sSiteName, sSiteLocalBaseDir, sSitePostingURL, sProviderCLSID, dwFlags)
wpdeletesite:::::( sSiteName)
wpdoessiteexist:::::( sSiteName, pfSiteExists)
wpenumproviders:::::( pdwProvidersBufLen, pProvidersBuffer, pdwNumProviders)
wpgeterrorstring:::::( uErrCode, sOutputBuf, pdwBufLen)
wplistsites:::::( pdwSitesBufLen, pSitesBuffer, pdwNumSites)
wppost:::::( hwnd, dwNumLocalPaths, psLocalPaths, pdwSiteNameBufLen, sSiteName, pdwDestURLBufLen, sDestURLBufLen, dwFlag)
write:::::#filenum&, [expression [{;|,} expression] ...] [;|,]
writeconsole:::::(hConsoleOutput, lpBuffer, nNumberOfCharsToWrite, lpNumberOfCharsWritten, lpReserved)
writeconsoleinput:::::(hConsoleInput, lpBuffer, nLength, lpNumberOfEventsWritten)
writeconsoleoutput:::::(hConsoleOutput, lpBuffer, dwBufferSize, dwBufferCoord, lpWriteRegion)
writeconsoleoutputattribute:::::(hConsoleOutput, lpdwAttribute, nLength, dwWriteCoord, lpNumberOfAttrsWritten)
writeconsoleoutputcharacter:::::(hConsoleOutput, szCharacter, nLength, dwWriteCoord, lpNumberOfCharsWritten)
writefile:::::(hFile, lpBuffer, nNumberOfBytesToWrite, lpNumberOfBytesWritten, lpOverlapped)
writefileex:::::(hFile, lpBuffer, nNumberOfBytesToWrite, lpOverlapped, lpCompletionRoutine)
writeglobalpwrpolicy:::::(pGlobalPowerPolicy)
writeprinter:::::(hPrinter, pBuf, cbBuf, pcWritten)
writeprivateprofilesection:::::(lpAppName, lpString, lpFileName)
writeprivateprofilestring:::::(lpApplicationName, lpKeyName, lpString, lpFileName)
writeprivateprofilestruct:::::(lpApplicationName, lpKeyName, lpStruct, uSizeStruct, lpFileName)
writeprocessmemory:::::(hProcess, lpBaseAddress, lpBuffer, nSize, lpNumberOfBytesWritten)
writeprocessorpwrscheme:::::(uiID, pMachineProcessorPowerPolicy)
writeprofilesection:::::(lpAppName, lpString)
writeprofilestring:::::(lpszSection, lpszKeyName, lpszString)
writepwrscheme:::::(puiID, lpszName, lpszDescription, pPowerPolicy)
writetapemark:::::(hDevice, dwTapeMarkType, dwTapeMarkCount, bimmediate)
wsaaccept:::::(s, saAddr, addrlen, lpfnCondition, dwCallbackData)
wsaaddresstostring:::::(lpsaAddress, dwAddressLength, lpProtocolInfo, lpszAddressString, lpdwAddressStringLength)
wsaasyncgethostbyaddr:::::(hWnd, wMsg, address, addr_len, addr_type, buf, buflen)
wsaasyncgethostbyaddr:::::(hWnd, wMsg, address, addr_len, addr_type, buf, buflen)
wsaasyncgethostbyname:::::(hWnd, wMsg, host_name, buf, buflen)
wsaasyncgethostbyname:::::(hWnd, wMsg, host_name, buf, buflen)
wsaasyncgetprotobyname:::::(hWnd, wMsg, proto_name, buf, buflen)
wsaasyncgetprotobyname:::::(hWnd, wMsg, proto_name, buf, buflen)
wsaasyncgetprotobynumber:::::(hWnd, wMsg, number, buf, buflen)
wsaasyncgetprotobynumber:::::(hWnd, wMsg, number, buf, buflen)
wsaasyncgetservbyname:::::(hWnd, wMsg, serv_name, proto, buf, buflen)
wsaasyncgetservbyname:::::(hWnd, wMsg, serv_name, proto, buf, buflen)
wsaasyncgetservbyport:::::(hWnd, wMsg, lPort, proto, buf, buflen)
wsaasyncgetservbyport:::::(hWnd, wMsg, lPort, proto, buf, buflen)
wsaasyncselect:::::(s, hWnd, wMsg, lEvent)
wsaasyncselect:::::(s, hWnd, wMsg, lEvent)
wsacancelasyncrequest:::::(hAsyncTaskHandle)
wsacancelasyncrequest:::::(hAsyncTaskHandle)
wsacloseevent:::::(h)
wsaconnect:::::(s, sname, namelen, lpCallerData, lpCalleeData, lpSQOS, lpGQOS)
wsaduplicatesocket:::::(s, dwProcessId, lpProtocolInfo)
wsaenumnamespaceproviders:::::(lpdwBufferLength, lpnspBuffer)
wsaenumnetworkevents:::::(s, hEventObject, lpNetworkEvents)
wsaenumprotocols:::::(lpiProtocols, lpProtocolBuffer, lpdwBufferLength)
wsaeventselect:::::(s, hEventObject, lNetworkEvents)
wsafdisset:::::(ssocket, xfd)
wsagetasyncbuflen:::::(lParam)
wsagetasyncbuflen:::::(lParam)
wsagetasyncerror:::::(lParam)
wsagetasyncerror:::::(lParam)
wsagetoverlappedresult:::::(s, lpOverlapped, lpcbTransfer, fWait, lpdwFlags)
wsagetqosbyname:::::(s, lpQOSName, lpQOS)
wsagetselecterror:::::(lParam)
wsagetselecterror:::::(lParam)
wsagetselectevent:::::(lParam)
wsagetselectevent:::::(lParam)
wsagetserviceclassinfo:::::(lpProviderId, lpServiceClassId, lpdwBufSize, lpServiceClassInfo)
wsagetserviceclassnamebyclassid:::::(lpServiceClassId, lpszServiceClassName, lpdwBufferLength)
wsahtonl:::::(s, hostlong, lpnetlong)
wsahtons:::::(s, hostshort, lpnetshort)
wsainstallserviceclass:::::(lpServiceClassInfo)
wsaioctl:::::(s, dwIoControlCode, lpvInBuffer, cbInBuffer, lpvOutBuffer, cbOutBuffer, lpcbBytesReturned, lpOverlapped, lpCompletionRoutine)
wsajoinleaf:::::(s, sname, namelen, lpCallerData, lpCalleeData, lpSQOS, lpGQOS, dwFlags)
wsalookupservicebegin:::::(lpqsRestrictions, dwControlFlags, lphLookup)
wsalookupserviceend:::::(hLookup)
wsalookupservicenext:::::(hLookup, dwControlFlags, lpdwBufferLength, lpsqResults)
wsamakeasyncreply:::::(buflen, errorno)
wsamakeasyncreply:::::(wbuflen, werror)
wsamakeselectreply:::::(wevent, werror)
wsamakeselectreply:::::(event, errorno)
wsantohl:::::(s, netlong, lphostlong)
wsantohs:::::(s, netshort, lphostshort)
wsaproviderconfigchange:::::(lpNotificationHandle, lpOverlapped, lpCompletionRoutine)
wsarecv:::::(s, lpBuffers, dwBufferCount, lpNumberOfBytesRecvd, lpFlags, lpOverlapped, lpCompletionRoutine)
wsarecvdisconnect:::::(s, lpInboundDisconnectData)
wsarecvex:::::(s, buf, buflen, flags)
wsarecvfrom:::::(s, lpBuffers, dwBufferCount, lpNumberOfBytesRecvd, lpFlags, lpFrom, lpFromlen, lpOverlapped, lpCompletionRoutine)
wsaremoveserviceclass:::::(lpServiceClassId)
wsaresetevent:::::(hEvent)
wsasend:::::(s, lpBuffers, dwBufferCount, lpNumberOfBytesSent, dwFlags, lpOverlapped, lpCompletionRoutine)
wsasenddisconnect:::::(s, lpOutboundDisconnectData)
wsasendto:::::(s, lpBuffers, dwBufferCount, lpNumberOfBytesSent, dwFlags, lpTo, iTolen, lpOverlapped, lpCompletionRoutine)
wsasetblockinghook:::::(lpBlockFunc)
wsasetblockinghook:::::(lpBlockFunc)
wsasetevent:::::(hEvent)
wsasetlasterror:::::(iError)
wsasetlasterror:::::(iError)
wsasetservice:::::(lpqsRegInfo, essoperation, dwControlFlags)
wsasocket:::::(af, ltype, protocol, lpProtocolInfo, g, dwFlags)
wsastartup:::::(wVR, lpWSAD)
wsastartup:::::(wVR, lpWSAD)
wsastringtoaddress:::::(AddressString, AddressFamily, lpProtocolInfo, lpAddress, lpAddressLength)
wsawaitformultipleevents:::::(cEvents, lphEvents, fWaitAll, dwTimeout, fAlertable)
wsprintf cdecl:::::(lpOutput, lpFormat, x, OPTIONAL x1, OPTIONAL x2, OPTIONAL x3, OPTIONAL x4, OPTIONAL x5, OPTIONAL x6, OPTIONAL x7, OPTIONAL x8, OPTIONAL x9, OPTIONAL x10, OPTIONAL x11, OPTIONAL x12)
wsprintf cdecl:::::(lpOutput, lpFormat, x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12)
xcvdata:::::(hXcv, pszDataName, pInputData, cbInputData, pOutputData, cbOutputData, pcbOutputNeeded, pdwStatus)
xcvdata:::::(hXcv, pszDataName, pInputData, cbInputData, pOutputData, cbOutputData, pcbOutputNeeded, pdwStatus)
xprint:::::[expression] [;]
zeromemory:::::(pDestination, cbLength)
zinitcommoncontrolsex:::::(iccex)